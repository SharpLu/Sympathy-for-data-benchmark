<?xml version='1.0' encoding='ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" id="" is_locked="False" uuid="{4e595e86-a397-4865-97d6-90461a6f3561}" width="50.0" x="0.0" y="0.0">
  <label>transpose</label>
  <description></description>
  <author>Unknown</author>
  <copyright></copyright>
  <version>1.0</version>
  <source></source>
  <aggregation type="json"><![CDATA[null]]></aggregation>
  <libraries type="json"><![CDATA[[]]]></libraries>
  <pythonpaths type="json"><![CDATA[[]]]></pythonpaths>
  <environment type="json"><![CDATA[{}]]></environment>
  <parameters type="json"><![CDATA[{"environment": {}}]]></parameters>
  <ports/>
  <flow cls="Lambda" height="50.0" id="" is_locked="False" uuid="{c448d814-d99d-40a3-8a06-953ce2a98e5b}" width="50.0" x="2000.0" y="2775.0">
    <label>New Lambda 0</label>
    <description></description>
    <author>Unknown</author>
    <copyright></copyright>
    <version>1.0</version>
    <source></source>
    <aggregation type="json"><![CDATA[null]]></aggregation>
    <libraries type="json"><![CDATA[[]]]></libraries>
    <pythonpaths type="json"><![CDATA[[]]]></pythonpaths>
    <environment type="json"><![CDATA[{}]]></environment>
    <parameters type="json"><![CDATA[{"environment": {}}]]></parameters>
    <ports>
      <input height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="(table, table)" uuid="{3a2aa283-98b5-4339-bd96-4f6be8e326df}" width="50.0" x="1800.0" y="2000.0">
        <label>Port</label>
        <description>Port</description>
      </input>
      <output height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{a262e316-25a0-4206-9d82-8a4a57c030b5}" width="50.0" x="2125.0" y="2000.0">
        <label>Port</label>
        <description>Port</description>
      </output>
    </ports>
    <basic_ports>
      <output key="Function" requiresdata="False" scheme="hdf5" type="(table, table) -&gt; table" uuid="{f2d32d90-9315-4bde-ba2c-8c20a6d0f1d9}">
        <label>Lambda function</label>
        <description>Lambda function</description>
      </output>
    </basic_ports>
    <node height="50.0" id="org.sysess.sympathy.tuple.untuple2" uuid="{8f4c9da3-44cc-4836-8ac9-9df6040e4963}" width="50.0" x="1900.0" y="2000.0">
      <label>Untuple2</label>
      <description></description>
      <author>Erik der Hagopian &lt;erik.hagopian@sysess.org&gt;</author>
      <copyright>(C) 2016 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
      <ports>
        <input key="" requiresdata="False" scheme="hdf5" type="(table, table)" uuid="{4ed5355f-c975-4414-83d6-ec411af6de9d}">
          <label>Tuple2</label>
          <description>Tuple2</description>
        </input>
        <output key="" requiresdata="False" scheme="hdf5" type="table" uuid="{ec3bb777-52c2-4370-9649-4efbe61688c8}">
          <label>First</label>
          <description>First</description>
        </output>
        <output key="" requiresdata="False" scheme="hdf5" type="table" uuid="{38e71425-d708-473d-9543-07ff5b6b8129}">
          <label>Second</label>
          <description>Second</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.table.assertequaltable" uuid="{a58f0046-ca09-4bf2-9ac0-c1d073928859}" width="50.0" x="2025.0" y="2000.0">
      <label>Assert Equal Table</label>
      <description></description>
      <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
      <copyright>Copyright (c) 2016 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
      <ports>
        <input key="table1" requiresdata="False" scheme="hdf5" type="table" uuid="{25565664-71f2-42ec-9490-40a3501e9b6b}">
          <label>Table A</label>
          <description>Table A</description>
        </input>
        <input key="table2" requiresdata="False" scheme="hdf5" type="table" uuid="{9369565b-8fba-49e5-a2e9-da8e18d70169}">
          <label>Table B</label>
          <description>Table B</description>
        </input>
        <output key="out" requiresdata="False" scheme="hdf5" type="table" uuid="{c2ee76ca-5c3f-43ef-a9c9-1888facab148}">
          <label>Output Table</label>
          <description>Output Table</description>
        </output>
      </ports>
    </node>
    <connection type="(table, table)" uuid="{0e235d81-06a8-4014-9d61-06a5040284b0}">
      <source node="{c448d814-d99d-40a3-8a06-953ce2a98e5b}" port="{3a2aa283-98b5-4339-bd96-4f6be8e326df}"/>
      <destination node="{8f4c9da3-44cc-4836-8ac9-9df6040e4963}" port="{4ed5355f-c975-4414-83d6-ec411af6de9d}"/>
    </connection>
    <connection type="table" uuid="{29109c05-ec6f-42a2-badb-27d71da0ecbf}">
      <source node="{8f4c9da3-44cc-4836-8ac9-9df6040e4963}" port="{38e71425-d708-473d-9543-07ff5b6b8129}"/>
      <destination node="{a58f0046-ca09-4bf2-9ac0-c1d073928859}" port="{9369565b-8fba-49e5-a2e9-da8e18d70169}"/>
    </connection>
    <connection type="table" uuid="{377e23f9-d10b-41d5-8b10-f27664c9c9f4}">
      <source node="{a58f0046-ca09-4bf2-9ac0-c1d073928859}" port="{c2ee76ca-5c3f-43ef-a9c9-1888facab148}"/>
      <destination node="{c448d814-d99d-40a3-8a06-953ce2a98e5b}" port="{a262e316-25a0-4206-9d82-8a4a57c030b5}"/>
    </connection>
    <connection type="table" uuid="{94d4577e-c09f-4da9-873b-b6044d90155e}">
      <source node="{8f4c9da3-44cc-4836-8ac9-9df6040e4963}" port="{ec3bb777-52c2-4370-9649-4efbe61688c8}"/>
      <destination node="{a58f0046-ca09-4bf2-9ac0-c1d073928859}" port="{25565664-71f2-42ec-9490-40a3501e9b6b}"/>
    </connection>
  </flow>
  <node height="50.0" id="org.sysess.sympathy.data.table.transposetablenew" uuid="{01006965-71f7-4545-bb23-ffcef3af56a3}" width="50.0" x="1800.0" y="1175.0">
    <label>Transpose Table</label>
    <description></description>
    <author>Andreas Tagerud &lt;andreas.tagerud@combine.se&gt;</author>
    <copyright>(c) 2016 SSystem Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "use_col_names": {"description": "Set column names from the input table as the first column in the transposed table", "editor": null, "label": "Column names as first column", "order": 0, "type": "boolean", "value": true}, "reverse_col_names": {"description": "Use the first column from input table as column names in the transposed table, starting the transpose from the second column", "editor": null, "label": "Use first column as column names", "order": 1, "type": "boolean", "value": false}, "columns": {"description": "Column that contains the new column names", "label": "Column names column", "order": 2, "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": [], "editor": {"type": "combobox"}}}]]></parameters>
    <ports>
      <input key="input" requiresdata="False" scheme="hdf5" type="table" uuid="{fc42609b-fc5d-42ae-9a69-48c65db8cecc}">
        <label>The Table to transpose</label>
        <description>The Table to transpose</description>
      </input>
      <output key="output" requiresdata="False" scheme="hdf5" type="table" uuid="{55b6dfa6-c74d-44c5-9209-3e8136b3682e}">
        <label>The transposed Table</label>
        <description>The transposed Table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.calculatortable" uuid="{012e3ceb-bb54-4123-8320-98e92cec66f9}" width="50.0" x="2300.0" y="2925.0">
    <label>Calculator Table</label>
    <description>Performs user-defined python calculations</description>
    <author>Greger Cronquist &lt;greger.cronquist@sysess.org&gt;, Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;, Sara Gustafzelius &lt;sara.gustafzelius@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
    <copyright>(c) 2012 Combine AB</copyright>
    <version>3.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "calc_list": {"description": "List of calculations.", "editor": null, "label": "List of calculations", "order": 0, "passthrough": false, "type": "list", "list": ["${correct_columns} = np.array(${Column names}.tolist() + [len(${Column names})])", "${wrong_column_names} = np.array(['Column names'] + ${Column names}.tolist(), dtype=np.dtype('S256'))"], "value": [0], "value_names": []}, "same_length_res": {"description": "Gather all the results generated from an incoming Table into a common output table. This requires that the results all have the same length. An error will be given if the lengths of the outgoing results differ.", "editor": null, "label": "Put results in common outputs.", "order": 1, "type": "boolean", "value": true}}]]></parameters>
    <ports>
      <input key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{37bc1e06-5b03-48e9-a7b0-fb22c64ca698}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{ee21a62b-eadc-4730-b2dc-878665cd4ecf}">
        <label>The input Table with added plot attributes</label>
        <description>The input Table with added plot attributes</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.tuple.ziptuple2" uuid="{026641b4-6058-44b0-b805-0e9402f5f24a}" width="50.0" x="2000.0" y="2875.0">
    <label>Zip Tuple2</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@sysess.org&gt;</author>
    <copyright>(C) 2016 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="" requiresdata="False" scheme="hdf5" type="[table]" uuid="{4778643e-f863-4e0b-89ed-287b505e3484}">
        <label>First List</label>
        <description>First List</description>
      </input>
      <input key="" requiresdata="False" scheme="hdf5" type="[table]" uuid="{ea03aa6c-cdc8-48df-a8c5-82902125fbc8}">
        <label>Second List</label>
        <description>Second List</description>
      </input>
      <output key="" requiresdata="False" scheme="hdf5" type="[(table, table)]" uuid="{0dc19459-6198-4015-92ee-8a39b9d6be8b}">
        <label>Tuple2 List</label>
        <description>Tuple2 List</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.assertequaltable" uuid="{027583ef-d4f4-47c6-b5cd-fdb1870d1d2d}" width="50.0" x="1950.0" y="1000.0">
    <label>Assert Equal Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="table1" requiresdata="False" scheme="hdf5" type="table" uuid="{a042cf7c-334c-4405-b1c2-867a541ebe5e}">
        <label>Table A</label>
        <description>Table A</description>
      </input>
      <input key="table2" requiresdata="False" scheme="hdf5" type="table" uuid="{04170709-bb6b-4b4d-ac35-1ce5628c781a}">
        <label>Table B</label>
        <description>Table B</description>
      </input>
      <output key="out" requiresdata="False" scheme="hdf5" type="table" uuid="{afe30994-fb4c-414e-96c0-ec339558110a}">
        <label>Output Table</label>
        <description>Output Table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.create.createtable" uuid="{0e50066d-b43e-4194-8e97-91d6dd7bb34a}" width="50.0" x="1650.0" y="2575.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "json_table": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[[\"Text\", \"U\", [\"Zero\", \"One\"]], [\"Float\", \"f\", [0.0, 1.0]], [\"Integer\", \"i\", [0, 1]], [\"Boolean\", \"b\", [false, true]]]"}}]]></parameters>
    <ports>
      <output key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{ccd5f906-7a4a-4c7d-9a61-94ff297a48f8}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.transposetablenew" uuid="{0e96e6fa-6845-43dd-99c0-4f8dfa3a31e2}" width="50.0" x="1800.0" y="950.0">
    <label>Transpose Table</label>
    <description></description>
    <author>Andreas Tagerud &lt;andreas.tagerud@combine.se&gt;</author>
    <copyright>(c) 2016 SSystem Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "use_col_names": {"description": "Set column names from the input table as the first column in the transposed table", "editor": null, "label": "Column names as first column", "order": 0, "type": "boolean", "value": false}, "reverse_col_names": {"description": "Use the first column from input table as column names in the transposed table, starting the transpose from the second column", "editor": null, "label": "Use first column as column names", "order": 1, "type": "boolean", "value": false}, "columns": {"description": "Column that contains the new column names", "label": "Column names column", "order": 2, "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": [], "editor": {"type": "combobox"}}}]]></parameters>
    <ports>
      <input key="input" requiresdata="False" scheme="hdf5" type="table" uuid="{475966cb-88c2-40f1-b1f7-dad6f2b59fd5}">
        <label>The Table to transpose</label>
        <description>The Table to transpose</description>
      </input>
      <output key="output" requiresdata="False" scheme="hdf5" type="table" uuid="{a62c7a79-1e86-454d-b944-6c662d15582c}">
        <label>The transposed Table</label>
        <description>The transposed Table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.transposetablenew" uuid="{0ff837ef-e763-4873-9f14-c54fc601f467}" width="50.0" x="1800.0" y="1575.0">
    <label>Transpose Table</label>
    <description></description>
    <author>Andreas Tagerud &lt;andreas.tagerud@combine.se&gt;</author>
    <copyright>(c) 2016 SSystem Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "use_col_names": {"description": "Set column names from the input table as the first column in the transposed table", "editor": null, "label": "Column names as first column", "order": 0, "type": "boolean", "value": false}, "reverse_col_names": {"description": "Use the first column from input table as column names in the transposed table, starting the transpose from the second column", "editor": null, "label": "Use first column as column names", "order": 1, "type": "boolean", "value": true}, "columns": {"description": "Column that contains the new column names", "label": "Column names column", "order": 2, "passthrough": false, "type": "list", "list": ["Float 1", "Float 2", "Float 3"], "value": [0], "value_names": ["Float 1"], "editor": {"type": "combobox"}}}]]></parameters>
    <ports>
      <input key="input" requiresdata="False" scheme="hdf5" type="table" uuid="{9be00718-c167-4134-acb5-a924dac37d26}">
        <label>The Table to transpose</label>
        <description>The Table to transpose</description>
      </input>
      <output key="output" requiresdata="False" scheme="hdf5" type="table" uuid="{e5dbd414-81a4-4f4e-ad9b-f3839ac7a359}">
        <label>The transposed Table</label>
        <description>The transposed Table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.transposetablenew" uuid="{12d662c6-8c80-4ad0-b4a9-a9004a8b4da4}" width="50.0" x="1800.0" y="750.0">
    <label>Transpose Table</label>
    <description></description>
    <author>Andreas Tagerud &lt;andreas.tagerud@combine.se&gt;</author>
    <copyright>(c) 2016 SSystem Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "use_col_names": {"description": "Set column names from the input table as the first column in the transposed table", "editor": null, "label": "Column names as first column", "order": 0, "type": "boolean", "value": false}, "reverse_col_names": {"description": "Use the first column from input table as column names in the transposed table, starting the transpose from the second column", "editor": null, "label": "Use first column as column names", "order": 1, "type": "boolean", "value": false}, "columns": {"description": "Column that contains the new column names", "label": "Column names column", "order": 2, "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": [], "editor": {"type": "combobox"}}}]]></parameters>
    <ports>
      <input key="input" requiresdata="False" scheme="hdf5" type="table" uuid="{699e68ef-b798-4e0c-9590-e9ecb18845a0}">
        <label>The Table to transpose</label>
        <description>The Table to transpose</description>
      </input>
      <output key="output" requiresdata="False" scheme="hdf5" type="table" uuid="{046e5a56-2256-4d71-a471-135b8388da40}">
        <label>The transposed Table</label>
        <description>The transposed Table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.create.createtable" uuid="{13eb4657-1ca4-4ab5-a84b-619d4228e554}" width="50.0" x="1650.0" y="2075.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "json_table": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[[\"Column names\", \"U\", [\"Float 1\", \"Float 2\", \"Float 3\"]], [\"1.3\", \"f\", [2.0, 2.4, 0.0]], [\"1.4\", \"f\", [3.0, 2.5, 0.0]], [\"1.5\", \"f\", [4.0, 2.6, 0.0]]]"}}]]></parameters>
    <ports>
      <output key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{88fbba7d-15de-4c63-a2a9-351757345c01}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.create.createtable" uuid="{1c83a0e7-8bdf-41e4-8d50-1828ff215c6f}" width="50.0" x="1650.0" y="3525.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "json_table": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[[\"0\", \"U\", [\"Zero\"]], [\"No name column 2\", \"U\", [\"0.0\"]], [\"No name column 3\", \"U\", [\"0\"]], [\"No name column 4\", \"U\", [\"False\"]]]"}}]]></parameters>
    <ports>
      <output key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{8ca8887e-0ca7-4fa6-8f25-13a26208367d}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.assertequaltable" uuid="{2d921c3e-f5cc-4769-9a17-23d564920bfa}" width="50.0" x="1950.0" y="2225.0">
    <label>Assert Equal Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="table1" requiresdata="False" scheme="hdf5" type="table" uuid="{3ad30091-e370-4e67-b7a6-275c2c8356b0}">
        <label>Table A</label>
        <description>Table A</description>
      </input>
      <input key="table2" requiresdata="False" scheme="hdf5" type="table" uuid="{edcf4079-52e1-4239-a91d-d5dde544d9d7}">
        <label>Table B</label>
        <description>Table B</description>
      </input>
      <output key="out" requiresdata="False" scheme="hdf5" type="table" uuid="{51c58596-e68a-4878-a78c-6e898da7eb6a}">
        <label>Output Table</label>
        <description>Output Table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.create.createtable" uuid="{35bec4f1-b8d5-402a-bf40-5415b18176c5}" width="50.0" x="1650.0" y="1675.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "json_table": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[[\"1.3\", \"f\", [2.0, 2.4]], [\"1.4\", \"f\", [3.0, 2.5]], [\"1.5\", \"f\", [4.0, 2.6]]]"}}]]></parameters>
    <ports>
      <output key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{2a4f9c97-8227-4982-8733-ebb8607f4849}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.create.createtable" uuid="{3d0274ef-bc58-4e5c-b0c2-6089fcc5ba77}" width="50.0" x="1650.0" y="2375.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "json_table": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[[\"0\", \"i\", [0]]]"}}]]></parameters>
    <ports>
      <output key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{abc60c94-156b-4433-bd4d-735c42de2175}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.assertequaltable" uuid="{3fea4354-67bb-4161-b4df-c660a2f2a0c1}" width="50.0" x="1950.0" y="1625.0">
    <label>Assert Equal Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "col_order": {"description": "", "editor": null, "label": "Compare column order", "order": 0, "type": "boolean", "value": true}, "col_attrs": {"description": "", "editor": null, "label": "Compare column attributes", "order": 1, "type": "boolean", "value": false}, "tbl_names": {"description": "", "editor": null, "label": "Compare table names", "order": 2, "type": "boolean", "value": true}, "tbl_attrs": {"description": "", "editor": null, "label": "Compare table attributes", "order": 3, "type": "boolean", "value": true}}]]></parameters>
    <ports>
      <input key="table1" requiresdata="False" scheme="hdf5" type="table" uuid="{5361b046-1093-4f91-b94a-7bd5238fa80c}">
        <label>Table A</label>
        <description>Table A</description>
      </input>
      <input key="table2" requiresdata="False" scheme="hdf5" type="table" uuid="{461def34-3d05-49d0-a029-5e8aea4ae224}">
        <label>Table B</label>
        <description>Table B</description>
      </input>
      <output key="out" requiresdata="False" scheme="hdf5" type="table" uuid="{6e26f6b9-263e-4e13-bd91-414cf782c64c}">
        <label>Output Table</label>
        <description>Output Table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.random.randomtable" uuid="{48f46527-1352-4166-8e57-5fc514d08c9d}" width="50.0" x="1650.0" y="3000.0">
    <label>Random Table</label>
    <description>Random Table generator.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(c) 2013 Combine AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "column_entries": {"description": "The number of column entries to be generated.", "label": "Column entries", "order": 0, "type": "integer", "value": 100, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "column_length": {"description": "The length of columns to be generated.", "label": "Column length", "order": 1, "type": "integer", "value": 100, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}, "mask_values": {"description": "Randomly mask values (create mask array column)", "editor": null, "label": "Randomly mask values", "order": 2, "type": "boolean", "value": false}}]]></parameters>
    <ports>
      <output key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{ef858f7e-2a32-4a79-bd57-6dd5c1251f77}">
        <label>Random Table</label>
        <description>Random Table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.renametablecolumnstable" uuid="{4b906998-9b85-4bdd-8a0c-ce550a2d3435}" width="50.0" x="2900.0" y="3000.0">
    <label>Rename columns in Tables with Table</label>
    <description></description>
    <author>Greger Cronquist &lt;greger.cronquist@sysess.org&gt;</author>
    <copyright>(c) 2013 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "source": {"description": "Name of column containing old names", "label": "Keyword column", "order": 0, "passthrough": false, "type": "list", "list": ["correct_columns", "wrong_column_names", "tmp"], "value": [1], "value_names": ["wrong_column_names"], "editor": {"type": "combobox"}}, "destination": {"description": "Name of column containing new names", "label": "Replacement column", "order": 1, "passthrough": false, "type": "list", "list": ["correct_columns", "wrong_column_names", "tmp"], "value": [0], "value_names": ["correct_columns"], "editor": {"type": "combobox"}}}]]></parameters>
    <ports>
      <input key="dictionary" requiresdata="False" scheme="hdf5" type="table" uuid="{de7158a2-0ef8-4b85-a643-c04fcdf819ae}">
        <label>Dictionary</label>
        <description>Dictionary</description>
      </input>
      <input key="tables" requiresdata="False" scheme="hdf5" type="[table]" uuid="{0a676130-762d-486a-90a7-9bb386ec324a}">
        <label>Input Tables</label>
        <description>Input Tables</description>
      </input>
      <output key="tables" requiresdata="False" scheme="hdf5" type="[table]" uuid="{0131156c-e9bf-4058-ad1b-77ced6da776f}">
        <label>Tables with renamed columns</label>
        <description>Tables with renamed columns</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.create.createtable" uuid="{5af526bc-7eba-48e5-82ab-337d4ac2ee89}" width="50.0" x="1650.0" y="1275.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "json_table": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[[\"Column names\", \"U\", [\"Float 1\", \"Float 2\", \"Float 3\"]]]"}}]]></parameters>
    <ports>
      <output key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{a3206ea0-74bf-48e7-beb1-03a6dc7c2f25}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.create.createtable" uuid="{5c668443-c37d-4285-b46b-d04c774609b8}" width="50.0" x="1650.0" y="2675.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "json_table": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[[\"0\", \"U\", [\"Zero\", \"0.0\", \"0\", \"False\"]], [\"1\", \"U\", [\"One\", \"1.0\", \"1\", \"True\"]]]"}}]]></parameters>
    <ports>
      <output key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{219c4367-bb0e-40d3-ab56-0e9a07d46dac}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.selecttablecolumns" uuid="{62554f76-a57a-4dd5-9232-9a3a4c762c8a}" width="50.0" x="2625.0" y="3175.0">
    <label>Select columns in Table</label>
    <description>Select columns in Table by using the configuration GUI.</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(c) 2013 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "complement": {"description": "When enabled, the selected columns will be removed. When disabled, the non-selected columns will be removed.", "editor": null, "label": "Remove selected columns", "order": 0, "type": "boolean", "value": true}, "columns": {"description": "Select the columns which will proceed.", "label": "Select columns", "order": 1, "passthrough": false, "type": "list", "list": ["0", "1", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "2", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "3", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "4", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "5", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "6", "60", "61", "62", "63", "64", "65", "66", "67", "68", "69", "7", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "8", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "9", "90", "91", "92", "93", "94", "95", "96", "97", "98", "99"], "value": [0], "value_names": ["0"], "editor": {"buttons": true, "filter": true, "invertbutton": true, "selection": "multi", "type": "listview"}}}]]></parameters>
    <ports>
      <input key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{de08fa71-17b1-44b1-b4ab-f32be305c7db}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="port2" requiresdata="False" scheme="hdf5" type="table" uuid="{230063b3-06c5-4377-967f-242e964ceb60}">
        <label>Table with selected columns removed</label>
        <description>Table with selected columns removed</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.datasources.filedatasource" uuid="{65b3b8a5-ebb5-41e4-826f-f314bffb0311}" width="50.0" x="3025.0" y="2925.0">
    <label>Datasource</label>
    <description>Select a data source.</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(C) 2013 System Engineering Software Society</copyright>
    <version>1.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "filename": {"description": "A filename including path if needed", "label": "Filename", "order": 0, "type": "string", "value": "drop_last_column.py", "editor": {"type": "filename", "filter": ["Any files (*)"]}}, "db_driver": {"description": "Database driver to use.", "label": "Database driver", "order": 1, "passthrough": false, "type": "list", "list": ["SQL Server"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}, "db_servername": {"description": "A valid name to a database server.", "editor": null, "label": "Server name", "order": 2, "type": "string", "value": ""}, "db_databasename": {"description": "The name of the database.", "editor": null, "label": "Database name", "order": 3, "type": "string", "value": ""}, "db_user": {"description": "A valid database user.", "editor": null, "label": "User", "order": 4, "type": "string", "value": ""}, "db_password": {"description": "A valid password for the selected user.", "editor": null, "label": "Password", "order": 5, "type": "string", "value": ""}, "db_connection_string": {"description": "A connection string that will override other settings.", "editor": null, "label": "Connection string", "order": 6, "type": "string", "value": ""}, "datasource_type": {"description": "Type of datasource.", "editor": null, "label": "Datasource type", "order": 7, "passthrough": false, "type": "list", "list": ["File", "Database"], "value": [0], "value_names": []}}]]></parameters>
    <ports>
      <output key="port1" requiresdata="False" scheme="text" type="datasource" uuid="{4af7e6c3-bfda-48f7-95ce-58761f740cd1}">
        <label>Datasource</label>
        <description>Datasource</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.transposetablenew" uuid="{662a3907-efa6-4fc2-b1ba-c7504518679e}" width="50.0" x="1800.0" y="1775.0">
    <label>Transpose Table</label>
    <description></description>
    <author>Andreas Tagerud &lt;andreas.tagerud@combine.se&gt;</author>
    <copyright>(c) 2016 SSystem Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "use_col_names": {"description": "Set column names from the input table as the first column in the transposed table", "editor": null, "label": "Column names as first column", "order": 0, "type": "boolean", "value": false}, "reverse_col_names": {"description": "Use the first column from input table as column names in the transposed table, starting the transpose from the second column", "editor": null, "label": "Use first column as column names", "order": 1, "type": "boolean", "value": true}, "columns": {"description": "Column that contains the new column names", "label": "Column names column", "order": 2, "passthrough": false, "type": "list", "list": ["Float 1", "Float 2", "Float 3"], "value": [1], "value_names": ["Float 2"], "editor": {"type": "combobox"}}}]]></parameters>
    <ports>
      <input key="input" requiresdata="False" scheme="hdf5" type="table" uuid="{b88218d9-9deb-4a0f-909e-6825369a8eb7}">
        <label>The Table to transpose</label>
        <description>The Table to transpose</description>
      </input>
      <output key="output" requiresdata="False" scheme="hdf5" type="table" uuid="{f84fe8f6-de80-442c-9f7c-44448ae1d531}">
        <label>The transposed Table</label>
        <description>The transposed Table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.list.itemtolist" uuid="{69702063-719d-4540-b990-a5b9c089a015}" width="50.0" x="2650.0" y="3000.0">
    <label>Item to List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@sysess.org&gt;</author>
    <copyright>(C) 2015 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="item" requiresdata="False" scheme="hdf5" type="table" uuid="{5effdc75-d8d9-4871-aa73-0ae020815cab}">
        <label>Input Item</label>
        <description>Input Item</description>
      </input>
      <output key="list" requiresdata="False" scheme="hdf5" type="[table]" uuid="{c1c2ceee-a989-48c1-85c8-588cd2720df3}">
        <label>Item as List</label>
        <description>Item as List</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.create.createtable" uuid="{6e271b14-c03f-4754-b8a4-f105ef680be6}" width="50.0" x="1650.0" y="2875.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "json_table": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[]"}}]]></parameters>
    <ports>
      <output key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{3bf0f887-076c-4db3-92ca-bac6ffb0bca5}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.transposetablenew" uuid="{70789182-c894-48b7-9682-07687d2d6d75}" width="50.0" x="1800.0" y="2575.0">
    <label>Transpose Table New</label>
    <description></description>
    <author>Andreas Tagerud &lt;andreas.tagerud@combine.se&gt;</author>
    <copyright>(c) 2016 SSystem Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "use_col_names": {"description": "Set column names from the input table as the first column in the transposed table", "editor": null, "label": "Column names as first column", "order": 0, "type": "boolean", "value": false}, "reverse_col_names": {"description": "Use the selected column from input table as column names in the transposed table, and discarding the selected column from the transpose.", "editor": null, "label": "Use selected column as column names", "order": 1, "type": "boolean", "value": false}, "columns": {"description": "Column that contains the new column names", "label": "Column names column", "order": 2, "passthrough": false, "type": "list", "list": ["Column names", "Text", "Float", "Integer", "Boolean"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}}]]></parameters>
    <ports>
      <input key="input" requiresdata="False" scheme="hdf5" type="table" uuid="{1a9b11be-cfb6-40f1-b2a1-180944407c86}">
        <label>The Table to ranspose</label>
        <description>The Table to ranspose</description>
      </input>
      <output key="output" requiresdata="False" scheme="hdf5" type="table" uuid="{02050c3b-a140-4f0f-8dce-d97e619b82b6}">
        <label>The transposed Tables</label>
        <description>The transposed Tables</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.transposetablenew" uuid="{747b8daa-c053-4c60-8e89-87a990d1e8fb}" width="50.0" x="1800.0" y="1375.0">
    <label>Transpose Table</label>
    <description></description>
    <author>Andreas Tagerud &lt;andreas.tagerud@combine.se&gt;</author>
    <copyright>(c) 2016 SSystem Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "use_col_names": {"description": "Set column names from the input table as the first column in the transposed table", "editor": null, "label": "Column names as first column", "order": 0, "type": "boolean", "value": true}, "reverse_col_names": {"description": "Use the first column from input table as column names in the transposed table, starting the transpose from the second column", "editor": null, "label": "Use first column as column names", "order": 1, "type": "boolean", "value": false}, "columns": {"description": "Column that contains the new column names", "label": "Column names column", "order": 2, "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": [], "editor": {"type": "combobox"}}}]]></parameters>
    <ports>
      <input key="input" requiresdata="False" scheme="hdf5" type="table" uuid="{3373f959-f59f-4a64-a17a-eadba3bf4408}">
        <label>The Table to transpose</label>
        <description>The Table to transpose</description>
      </input>
      <output key="output" requiresdata="False" scheme="hdf5" type="table" uuid="{947e45db-5448-44a2-aab2-bd228ec3172f}">
        <label>The transposed Table</label>
        <description>The transposed Table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.builtin.map" uuid="{74bb65d7-ba60-440f-9d55-624bce654898}" width="50.0" x="2100.0" y="2875.0">
    <label>Map</label>
    <description>Map Lambda function over List</description>
    <author>SysESS</author>
    <copyright>See about dialog</copyright>
    <version>See about dialog</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="Function" requiresdata="False" scheme="hdf5" type="(table, table) -&gt; table" uuid="{93c4b69a-97c8-4485-a9a6-47c41a74862e}">
        <label>Lambda Function to Map</label>
        <description>Lambda Function to Map</description>
      </input>
      <input key="List" requiresdata="False" scheme="hdf5" type="[(table, table)]" uuid="{6216736d-78ac-4ae3-8d85-380ff80db952}">
        <label>Argument List</label>
        <description>Argument List</description>
      </input>
      <output key="List" requiresdata="False" scheme="hdf5" type="[table]" uuid="{8612251f-9a20-4427-9c1f-fe6d8c344466}">
        <label>Output List</label>
        <description>Output List</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.create.createtable" uuid="{74f15ab8-13a6-47fb-80f7-aeca0f64f06e}" width="50.0" x="1650.0" y="950.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "json_table": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[[\"Float 1\", \"f\", [1.3, 1.4, 1.5]], [\"Float 2\", \"f\", [2.0, 3.0, 4.0]], [\"Float 3\", \"f\", [2.4, 2.5, 2.6]]]"}}]]></parameters>
    <ports>
      <output key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{b0941133-a2ff-4def-99a6-8f06e4b5c7ce}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.create.createtable" uuid="{75cde612-03f1-4cea-96b0-37c794e18cb0}" width="50.0" x="1650.0" y="2775.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "json_table": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[]"}}]]></parameters>
    <ports>
      <output key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{34b3d0a8-bcff-4c3d-baeb-58b940a70d44}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.assertequaltable" uuid="{7b413b27-dd17-4414-863e-f65470d420d2}" width="50.0" x="1950.0" y="1825.0">
    <label>Assert Equal Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="table1" requiresdata="False" scheme="hdf5" type="table" uuid="{e229474e-5c5c-4dd9-b004-182011ef3e9c}">
        <label>Table A</label>
        <description>Table A</description>
      </input>
      <input key="table2" requiresdata="False" scheme="hdf5" type="table" uuid="{41a925c4-34c3-436c-8564-ce1976d296ac}">
        <label>Table B</label>
        <description>Table B</description>
      </input>
      <output key="out" requiresdata="False" scheme="hdf5" type="table" uuid="{dfc52573-e4e1-4a06-ad84-82982339e69f}">
        <label>Output Table</label>
        <description>Output Table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.list.itemtolist" uuid="{7d3fdc4b-acb1-4ae0-8dac-aa650a4faff3}" width="50.0" x="1775.0" y="2775.0">
    <label>Item to List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@sysess.org&gt;</author>
    <copyright>(C) 2015 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="item" requiresdata="False" scheme="hdf5" type="table" uuid="{450cddbf-2f0e-4bae-895b-efc2e08d1d15}">
        <label>Input Item</label>
        <description>Input Item</description>
      </input>
      <output key="list" requiresdata="False" scheme="hdf5" type="[table]" uuid="{f97b9d66-01d6-4a27-b6be-a63fe63605c3}">
        <label>Item as List</label>
        <description>Item as List</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.create.createtable" uuid="{8184122a-852c-4cef-a33b-1f867270875b}" width="50.0" x="1650.0" y="2175.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "json_table": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[[\"Column names\", \"U\", [\"Float 1\"]], [\"column 2\", \"U\", [\"Float 2\"]], [\"column 3\", \"U\", [\"Float 3\"]]]"}}]]></parameters>
    <ports>
      <output key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{a8443a0d-f4bc-4f79-bdc5-e51860749062}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.transposetablenew" uuid="{86435e01-f786-42de-a85c-662e84614567}" width="50.0" x="1800.0" y="3425.0">
    <label>Transpose Table New</label>
    <description></description>
    <author>Andreas Tagerud &lt;andreas.tagerud@combine.se&gt;</author>
    <copyright>(c) 2016 SSystem Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "use_col_names": {"description": "Set column names from the input table as the first column in the transposed table", "editor": null, "label": "Column names as first column", "order": 0, "type": "boolean", "value": false}, "reverse_col_names": {"description": "Use the selected column from input table as column names in the transposed table, and discarding the selected column from the transpose.", "editor": null, "label": "Use selected column as column names", "order": 1, "type": "boolean", "value": false}, "columns": {"description": "Column that contains the new column names", "label": "Column names column", "order": 2, "passthrough": false, "type": "list", "list": ["Column names", "Text", "Float", "Integer", "Boolean"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}}]]></parameters>
    <ports>
      <input key="input" requiresdata="False" scheme="hdf5" type="table" uuid="{7e8e043c-3347-4532-b698-aeafc5b8f835}">
        <label>The Table to ranspose</label>
        <description>The Table to ranspose</description>
      </input>
      <output key="output" requiresdata="False" scheme="hdf5" type="table" uuid="{bb86db64-3827-452f-a3da-f9298ca0f14a}">
        <label>The transposed Tables</label>
        <description>The transposed Tables</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.transposetablenew" uuid="{8d46111c-3369-4e01-98a3-052533dc10aa}" width="50.0" x="2175.0" y="3000.0">
    <label>Transpose Table</label>
    <description></description>
    <author>Andreas Tagerud &lt;andreas.tagerud@combine.se&gt;</author>
    <copyright>(c) 2016 SSystem Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "use_col_names": {"description": "Set column names from the input table as the first column in the transposed table", "editor": null, "label": "Column names as first column", "order": 0, "type": "boolean", "value": true}, "reverse_col_names": {"description": "Use the selected column from input table as column names in the transposed table, and discarding the selected column from the transpose.", "editor": null, "label": "Use selected column as column names", "order": 1, "type": "boolean", "value": true}, "columns": {"description": "Column that contains the new column names", "label": "Column names column", "order": 2, "passthrough": false, "type": "list", "list": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "99"], "value": [0], "value_names": ["0"], "editor": {"type": "combobox"}}}]]></parameters>
    <ports>
      <input key="input" requiresdata="False" scheme="hdf5" type="table" uuid="{d22f2699-2025-497b-bd0c-d440a8733268}">
        <label>The Table to transpose</label>
        <description>The Table to transpose</description>
      </input>
      <output key="output" requiresdata="False" scheme="hdf5" type="table" uuid="{aadb926b-aa34-47f7-9b76-7edd64776088}">
        <label>The transposed Table</label>
        <description>The transposed Table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.create.createtable" uuid="{8da71406-5aa5-46a2-8605-dec276158349}" width="50.0" x="1650.0" y="3325.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "json_table": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[[\"0\", \"U\", [\"Zero\", \"0.0\", \"0\", \"False\"]]]"}}]]></parameters>
    <ports>
      <output key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{6e00dc01-4a21-489b-9a3e-200ec47318d5}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.converttablecolumns" uuid="{8ff0b804-86af-4f28-9d74-8360b234746b}" width="50.0" x="2550.0" y="3000.0">
    <label>Convert columns in Table</label>
    <description>Convert selected columns in Table to new data types.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@sysess.org&gt;</author>
    <copyright>(c) 2013 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "in_column_list": {"description": "Select the columns to use", "label": "Select columns", "order": 0, "passthrough": false, "type": "list", "list": ["0", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "2", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "3", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "4", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "5", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "6", "60", "61", "62", "63", "64", "65", "66", "67", "68", "69", "7", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "8", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "9", "90", "91", "92", "93", "94", "95", "96", "97", "98", "99", "Column names"], "value": [99], "value_names": ["Column names"], "editor": {"buttons": true, "invertbutton": true, "selection": "multi", "type": "listview"}}, "in_type_list": {"description": "Select the type to use", "label": "Select type", "order": 1, "passthrough": false, "type": "list", "list": ["bool", "datetime (UTC)", "datetime (naive)", "float", "int", "str", "unicode"], "value": [3], "value_names": ["float"], "editor": {"selection": "single", "type": "listview"}}, "out_column_list": {"description": "Selected columns to convert", "label": "Convert columns", "order": 2, "passthrough": false, "type": "list", "list": [], "value": ["Column names"], "value_names": [], "editor": {"selection": "multi", "type": "listview"}}, "out_type_list": {"description": "Selected types to use", "label": "Convert types", "order": 3, "passthrough": false, "type": "list", "list": [], "value": ["f"], "value_names": [], "editor": {"selection": "multi", "type": "listview"}}}]]></parameters>
    <ports>
      <input key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{5b491a87-e600-4eb1-9369-15d0d25f26e2}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="port2" requiresdata="False" scheme="hdf5" type="table" uuid="{c5ac6b79-e98c-4d6a-8030-7cf55916f15c}">
        <label>Table with converted columns</label>
        <description>Table with converted columns</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.transposetablenew" uuid="{92ae44ac-62c2-4b9d-a462-f62463739cbd}" width="50.0" x="1800.0" y="3225.0">
    <label>Transpose Table New</label>
    <description></description>
    <author>Andreas Tagerud &lt;andreas.tagerud@combine.se&gt;</author>
    <copyright>(c) 2016 SSystem Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "use_col_names": {"description": "Set column names from the input table as the first column in the transposed table", "editor": null, "label": "Column names as first column", "order": 0, "type": "boolean", "value": false}, "reverse_col_names": {"description": "Use the selected column from input table as column names in the transposed table, and discarding the selected column from the transpose.", "editor": null, "label": "Use selected column as column names", "order": 1, "type": "boolean", "value": false}, "columns": {"description": "Column that contains the new column names", "label": "Column names column", "order": 2, "passthrough": false, "type": "list", "list": ["Text", "Float", "Integer", "Boolean"], "value": [3], "value_names": ["Boolean"], "editor": {"type": "combobox"}}}]]></parameters>
    <ports>
      <input key="input" requiresdata="False" scheme="hdf5" type="table" uuid="{6135d979-0741-4481-88fa-97b016df46d7}">
        <label>The Table to ranspose</label>
        <description>The Table to ranspose</description>
      </input>
      <output key="output" requiresdata="False" scheme="hdf5" type="table" uuid="{4d8de580-e2bb-4f04-b983-5c1b5e96c7fc}">
        <label>The transposed Tables</label>
        <description>The transposed Tables</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.transposetablesnew" uuid="{95cf999b-58ef-4b5d-b7b1-ed47f59035e4}" width="50.0" x="1875.0" y="2775.0">
    <label>Transpose Tables</label>
    <description></description>
    <author>Andreas Tagerud &lt;andreas.tagerud@combine.se&gt;</author>
    <copyright>(c) 2016 SSystem Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "use_col_names": {"description": "Set column names from the input table as the first column in the transposed table", "editor": null, "label": "Column names as first column", "order": 0, "type": "boolean", "value": true}, "reverse_col_names": {"description": "Use the first column from input table as column names in the transposed table, starting the transpose from the second column", "editor": null, "label": "Use first column as column names", "order": 1, "type": "boolean", "value": true}, "columns": {"description": "Column that contains the new column names", "label": "Column names column", "order": 2, "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": [], "editor": {"type": "combobox"}}}]]></parameters>
    <ports>
      <input key="input" requiresdata="False" scheme="hdf5" type="[table]" uuid="{a29dba71-d9c5-4372-b73d-c812b16e3c69}">
        <label>The Tables to transpose</label>
        <description>The Tables to transpose</description>
      </input>
      <output key="output" requiresdata="False" scheme="hdf5" type="[table]" uuid="{b2982edc-a772-4c78-955d-fefe22a6712f}">
        <label>The transposed Tables</label>
        <description>The transposed Tables</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.create.createtable" uuid="{9c486357-9319-455e-bd69-bd874def96d2}" width="50.0" x="1650.0" y="2275.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "json_table": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[[\"0\", \"U\", [\"Float 1\", \"Float 2\", \"Float 3\"]]]"}}]]></parameters>
    <ports>
      <output key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{00b0ac13-9921-4006-b888-ebc31fcd4b50}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.calculatortable" uuid="{9f7f0e57-a645-443a-a6ac-c2867966c117}" width="50.0" x="3225.0" y="2925.0">
    <label>Calculator Table</label>
    <description>Performs user-defined python calculations</description>
    <author>Greger Cronquist &lt;greger.cronquist@sysess.org&gt;, Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;, Sara Gustafzelius &lt;sara.gustafzelius@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
    <copyright>(c) 2012 Combine AB</copyright>
    <version>3.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "calc_list": {"description": "List of calculations.", "editor": null, "label": "List of calculations", "order": 0, "passthrough": false, "type": "list", "list": ["${0} = np.array(['%.6f' % val for val in ${0}])"], "value": [0], "value_names": []}, "same_length_res": {"description": "Gather all the results generated from an incoming Table into a common output table. This requires that the results all have the same length. An error will be given if the lengths of the outgoing results differ.", "editor": null, "label": "Put results in common outputs.", "order": 1, "type": "boolean", "value": true}}]]></parameters>
    <ports>
      <input key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{0fe58f35-308c-45fa-9df6-6a757222175e}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{b84c2349-5aae-47c7-a0cd-a0929572d9d7}">
        <label>The input Table with added plot attributes</label>
        <description>The input Table with added plot attributes</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.create.createtable" uuid="{a249e3cb-1f2e-4926-9f2d-2b4b4067b971}" width="50.0" x="1650.0" y="1775.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "json_table": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[[\"Float 1\", \"f\", [1.3, 1.4, 1.5]], [\"Float 2\", \"f\", [2.0, 3.0, 4.0]], [\"Float 3\", \"f\", [2.4, 2.5, 2.6]]]"}}]]></parameters>
    <ports>
      <output key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{00d81560-903f-45c7-817e-6fd576b50ea1}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.assertequaltable" uuid="{a5b958f1-92c9-4e18-bb63-857030dfbdb7}" width="50.0" x="1950.0" y="2425.0">
    <label>Assert Equal Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="table1" requiresdata="False" scheme="hdf5" type="table" uuid="{aa9d8607-3350-4702-9641-c5b3699896c6}">
        <label>Table A</label>
        <description>Table A</description>
      </input>
      <input key="table2" requiresdata="False" scheme="hdf5" type="table" uuid="{f2dc5454-90c5-41b2-8842-4eefaf0cf803}">
        <label>Table B</label>
        <description>Table B</description>
      </input>
      <output key="out" requiresdata="False" scheme="hdf5" type="table" uuid="{0afc58d8-0585-4f32-a49d-c8bdb4052125}">
        <label>Output Table</label>
        <description>Output Table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.create.createtable" uuid="{a94fff8e-fa9c-44f4-8bac-2f17ed2da5ed}" width="50.0" x="1650.0" y="1475.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "json_table": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[[\"Column names\", \"U\", [\"Float 1\", \"Float 2\", \"Float 3\"]], [\"0\", \"f\", [1.3, 2.0, 2.4]], [\"1\", \"f\", [1.4, 3.0, 2.5]]]"}}]]></parameters>
    <ports>
      <output key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{0e7f04cb-3fe2-4a4a-b151-41201844cdf4}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.selecttablecolumns" uuid="{a9f3c89d-0425-43fb-b5c1-942baeb5c51c}" width="50.0" x="2300.0" y="3000.0">
    <label>Select columns in Table</label>
    <description>Select columns in Table by using the configuration GUI.</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(c) 2013 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "complement": {"description": "When enabled, the selected columns will be removed. When disabled, the non-selected columns will be removed.", "editor": null, "label": "Remove selected columns", "order": 0, "type": "boolean", "value": true}, "columns": {"description": "Select the columns which will proceed.", "label": "Select columns", "order": 1, "passthrough": false, "type": "list", "list": ["0.12682872871", "0.708257384359", "Column names"], "value": [2], "value_names": ["Column names"], "editor": {"buttons": true, "filter": true, "invertbutton": true, "selection": "multi", "type": "listview"}}}]]></parameters>
    <ports>
      <input key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{c0718640-7378-4ea0-afef-20db66f1db7c}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="port2" requiresdata="False" scheme="hdf5" type="table" uuid="{67d1b5f0-9020-4bcc-affc-804df27ade69}">
        <label>Table with selected columns removed</label>
        <description>Table with selected columns removed</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.fx" uuid="{b1749ab0-13f0-41bc-84ff-3bbacfc7eec2}" width="50.0" x="3125.0" y="3000.0">
    <label>F(x)</label>
    <description>Select and apply functions to item.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@sysess.org&gt;</author>
    <copyright>(C) 2016 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "copy_input": {"description": "If enabled the incoming data will be copied to the output before running the nodes.", "editor": null, "label": "Copy input", "order": 0, "type": "boolean", "value": false}, "selected_functions": {"description": "Choose one or many of the listed functions to apply to the content of the incoming item.", "label": "Select functions", "order": 1, "passthrough": false, "type": "list", "list": ["DropLastColumn"], "value": [0], "value_names": ["DropLastColumn"], "editor": {"buttons": true, "filter": true, "passthrough": true, "selection": "multi", "type": "listview"}}}]]></parameters>
    <ports>
      <input key="port1" requiresdata="False" scheme="text" type="datasource" uuid="{0c25d934-2739-43e6-b15e-42864894f3cf}">
        <label>Path to Python file with scripted functions.</label>
        <description>Path to Python file with scripted functions.</description>
      </input>
      <input key="port2" requiresdata="False" scheme="hdf5" type="table" uuid="{7026c740-de30-4993-a164-1dbcc1ca43f8}">
        <label>Item with data to apply functions on</label>
        <description>Item with data to apply functions on</description>
      </input>
      <output key="port3" requiresdata="False" scheme="hdf5" type="table" uuid="{d823b505-0f8c-478f-a9e9-56279e29817d}">
        <label>Item with the results from the applied functions</label>
        <description>Item with the results from the applied functions</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.calculatortable" uuid="{b3d6321e-a0b6-40c2-a5d2-d46de3ba182a}" width="50.0" x="1800.0" y="2075.0">
    <label>Calculator Table</label>
    <description>Performs user-defined python calculations</description>
    <author>Greger Cronquist &lt;greger.cronquist@sysess.org&gt;, Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;, Sara Gustafzelius &lt;sara.gustafzelius@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
    <copyright>(c) 2012 Combine AB</copyright>
    <version>3.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "calc_list": {"description": "List of calculations.", "editor": null, "label": "List of calculations", "order": 0, "passthrough": false, "type": "list", "list": ["${Column names} = ${Column names}", "${1.3} = np.ma.masked_where(${1.3} == 0, ${1.3})", "${1.4} = np.ma.masked_where(${1.4} == 0, ${1.4})", "${1.5} = np.ma.masked_where(${1.5} == 0, ${1.5})"], "value": [0], "value_names": []}, "same_length_res": {"description": "Gather all the results generated from an incoming Table into a common output table. This requires that the results all have the same length. An error will be given if the lengths of the outgoing results differ.", "editor": null, "label": "Put results in common outputs.", "order": 1, "type": "boolean", "value": true}}]]></parameters>
    <ports>
      <input key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{ab197b52-e307-4ff4-9a88-d835f9eb0511}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{577b4c84-6f96-4cc7-8b3d-ff0221e3af72}">
        <label>The input Table with added plot attributes</label>
        <description>The input Table with added plot attributes</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.transposetablenew" uuid="{b8f6173e-bfc3-496e-b91d-70516de0bb40}" width="50.0" x="2425.0" y="3000.0">
    <label>Transpose Table</label>
    <description></description>
    <author>Andreas Tagerud &lt;andreas.tagerud@combine.se&gt;</author>
    <copyright>(c) 2016 SSystem Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "use_col_names": {"description": "Set column names from the input table as the first column in the transposed table", "editor": null, "label": "Column names as first column", "order": 0, "type": "boolean", "value": true}, "reverse_col_names": {"description": "Use the selected column from input table as column names in the transposed table, and discarding the selected column from the transpose.", "editor": null, "label": "Use selected column as column names", "order": 1, "type": "boolean", "value": false}, "columns": {"description": "Column that contains the new column names", "label": "Column names column", "order": 2, "passthrough": false, "type": "list", "list": ["0.708257384359", "0.12682872871"], "value": [0], "value_names": ["0"], "editor": {"type": "combobox"}}}]]></parameters>
    <ports>
      <input key="input" requiresdata="False" scheme="hdf5" type="table" uuid="{6b2236e7-d219-4197-916a-689e81beba4e}">
        <label>The Table to transpose</label>
        <description>The Table to transpose</description>
      </input>
      <output key="output" requiresdata="False" scheme="hdf5" type="table" uuid="{6d738d22-5c7d-4363-ac1d-2794d00aac7b}">
        <label>The transposed Table</label>
        <description>The transposed Table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.create.createtable" uuid="{b958a89d-2d0b-4fec-8903-590b34e90b3a}" width="50.0" x="1650.0" y="1175.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "json_table": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[[\"Float 1\", \"f\", []], [\"Float 2\", \"f\", []], [\"Float 3\", \"f\", []]]"}}]]></parameters>
    <ports>
      <output key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{3a45ea6e-6933-4fc8-9686-3b23799aae9d}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.create.createtable" uuid="{bbc432bb-d49e-4efa-bb03-d847de6fbdd9}" width="50.0" x="1650.0" y="1875.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "json_table": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[[\"2.0\", \"f\", [1.3, 2.4]], [\"3.0\", \"f\", [1.4, 2.5]], [\"4.0\", \"f\", [1.5, 2.6]]]"}}]]></parameters>
    <ports>
      <output key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{7b0bb9d8-5ca4-4535-a017-a577042a97ed}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.assertequaltable" uuid="{bdba36ab-4db1-4e85-bb83-bd190a19672e}" width="50.0" x="1950.0" y="1225.0">
    <label>Assert Equal Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="table1" requiresdata="False" scheme="hdf5" type="table" uuid="{bacef4d5-122f-4284-a5e9-9b34bb87253d}">
        <label>Table A</label>
        <description>Table A</description>
      </input>
      <input key="table2" requiresdata="False" scheme="hdf5" type="table" uuid="{d7e13ac7-79ca-4180-96df-f49b324a173a}">
        <label>Table B</label>
        <description>Table B</description>
      </input>
      <output key="out" requiresdata="False" scheme="hdf5" type="table" uuid="{401d5b0a-ed64-4dc0-bf49-59ab55f046d6}">
        <label>Output Table</label>
        <description>Output Table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.list.getitemlist" uuid="{c594fa22-dc0d-4392-9f84-962d49af0779}" width="50.0" x="3025.0" y="3000.0">
    <label>Get Item List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@sysess.org&gt;</author>
    <copyright>(C) 2015 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "index": {"description": "Choose item index in list.", "label": "Index", "order": 0, "passthrough": false, "type": "list", "list": ["0"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}}]]></parameters>
    <ports>
      <input key="list" requiresdata="False" scheme="hdf5" type="[table]" uuid="{dd0c92c5-5d6a-45eb-910b-8ca8041db55f}">
        <label>Input List</label>
        <description>Input List</description>
      </input>
      <output key="item" requiresdata="False" scheme="hdf5" type="table" uuid="{1bb81e7d-a021-400d-9f20-376d0dc8647b}">
        <label>Output selcted Item from List</label>
        <description>Output selcted Item from List</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.selecttablecolumns" uuid="{c6f7fc4e-e75a-46c6-89c7-dc54522d89b3}" width="50.0" x="3225.0" y="3000.0">
    <label>Select columns in Table</label>
    <description>Select columns in Table by using the configuration GUI.</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(c) 2013 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "complement": {"description": "When enabled, the selected columns will be removed. When disabled, the non-selected columns will be removed.", "editor": null, "label": "Remove selected columns", "order": 0, "type": "boolean", "value": true}, "columns": {"description": "Select the columns which will proceed.", "label": "Select columns", "order": 1, "passthrough": false, "type": "list", "list": ["0", "1", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "2", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "3", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "4", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "5", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "6", "60", "61", "62", "63", "64", "65", "66", "67", "68", "69", "7", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "8", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "9", "90", "91", "92", "93", "94", "95", "96", "97", "98", "99"], "value": [0], "value_names": ["0"], "editor": {"buttons": true, "filter": true, "invertbutton": true, "selection": "multi", "type": "listview"}}}]]></parameters>
    <ports>
      <input key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{87ba30fb-c99a-4f0f-a344-ab0dc9cf4488}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="port2" requiresdata="False" scheme="hdf5" type="table" uuid="{3f462ad6-e477-4bf3-a637-8b3c0f71152b}">
        <label>Table with selected columns removed</label>
        <description>Table with selected columns removed</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.assertequaltable" uuid="{c716ba9f-ff1a-4abe-bfb9-ee796394661e}" width="50.0" x="1950.0" y="1425.0">
    <label>Assert Equal Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="table1" requiresdata="False" scheme="hdf5" type="table" uuid="{6c5cbc92-18c6-4d54-995f-2cab29099f42}">
        <label>Table A</label>
        <description>Table A</description>
      </input>
      <input key="table2" requiresdata="False" scheme="hdf5" type="table" uuid="{1cf3a70c-dc15-4eac-9d6b-04d5eb80b735}">
        <label>Table B</label>
        <description>Table B</description>
      </input>
      <output key="out" requiresdata="False" scheme="hdf5" type="table" uuid="{76112954-2c72-4b45-baf2-241e76d040d1}">
        <label>Output Table</label>
        <description>Output Table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.hjointable" uuid="{cafd5a72-b9b1-4955-94c5-b9549657a63a}" width="50.0" x="3350.0" y="3000.0">
    <label>HJoin Table</label>
    <description>Horizontal join of two Tables</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(C) 2013 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{a69e0f35-b63f-47fa-b951-3b0bbb70c415}">
        <label>Input Table 1</label>
        <description>Input Table 1</description>
      </input>
      <input key="port2" requiresdata="False" scheme="hdf5" type="table" uuid="{50395ca2-9239-48d9-858d-23550341e205}">
        <label>Input Table 2</label>
        <description>Input Table 2</description>
      </input>
      <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{c827765d-72e6-46be-ab64-bdf898295ee1}">
        <label>Joined Table</label>
        <description>Joined Table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.create.createtable" uuid="{cb0c2c87-70ba-4477-9000-c5404e63c24e}" width="50.0" x="1650.0" y="3225.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "json_table": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[[\"Text\", \"U\", [\"Zero\"]], [\"Float\", \"f\", [0.0]], [\"Integer\", \"i\", [0]], [\"Boolean\", \"b\", [false]]]"}}]]></parameters>
    <ports>
      <output key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{e5d71d16-d270-4ee2-994d-a7b5377a6c8d}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.create.createtable" uuid="{cbdfb849-c043-459b-95fa-cfd1d1c349d4}" width="50.0" x="1650.0" y="1975.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "json_table": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[[\"Float 1\", \"f\", [1.3, 1.4, 1.5]], [\"Float 2\", \"f\", [2.0, 3.0, 4.0]], [\"Float 3\", \"f\", [2.4, 2.5, 2.6]]]"}}]]></parameters>
    <ports>
      <output key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{bff43c4e-e232-4b0a-8ad6-b5d845f57c84}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.create.createtable" uuid="{cf3b52db-30e7-4f1e-94b0-980e6e2a4c41}" width="50.0" x="1650.0" y="850.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "json_table": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[]"}}]]></parameters>
    <ports>
      <output key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{09443093-27a6-4c14-94f9-a7a2162e8c11}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.calculatortable" uuid="{d258750b-d772-4f0a-b4c6-0c353fe654cf}" width="50.0" x="2625.0" y="3100.0">
    <label>Calculator Table</label>
    <description>Performs user-defined python calculations</description>
    <author>Greger Cronquist &lt;greger.cronquist@sysess.org&gt;, Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;, Sara Gustafzelius &lt;sara.gustafzelius@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
    <copyright>(c) 2012 Combine AB</copyright>
    <version>3.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "calc_list": {"description": "List of calculations.", "editor": null, "label": "List of calculations", "order": 0, "passthrough": false, "type": "list", "list": ["${0} = np.array(['%.6f' % val for val in ${0}])"], "value": [0], "value_names": []}, "same_length_res": {"description": "Gather all the results generated from an incoming Table into a common output table. This requires that the results all have the same length. An error will be given if the lengths of the outgoing results differ.", "editor": null, "label": "Put results in common outputs.", "order": 1, "type": "boolean", "value": true}}]]></parameters>
    <ports>
      <input key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{027802f5-d366-4d5e-94b7-9647e5f9bfee}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{c826b6ba-7b70-4213-a741-1e066b4e265a}">
        <label>The input Table with added plot attributes</label>
        <description>The input Table with added plot attributes</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.random.randomtables" uuid="{d3b89113-1c89-47ac-b121-c8fada80b293}" width="50.0" x="1650.0" y="3100.0">
    <label>Random Tables</label>
    <description>Random Tables generator.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(c) 2013 Combine AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "column_entries": {"description": "The number of column entries to be generated.", "label": "Column entries", "order": 0, "type": "integer", "value": 764, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "column_length": {"description": "The length of columns to be generated.", "label": "Column length", "order": 1, "type": "integer", "value": 874, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}, "mask_values": {"description": "Randomly mask values (create mask array column)", "editor": null, "label": "Randomly mask values", "order": 2, "type": "boolean", "value": false}, "length": {"description": "The length of table list to be generated.", "label": "Table list length", "order": 3, "type": "integer", "value": 5, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}}]]></parameters>
    <ports>
      <output key="port0" requiresdata="False" scheme="hdf5" type="[table]" uuid="{ca65fd39-f39b-4a43-8193-292ac8db98ba}">
        <label>Random Tables</label>
        <description>Random Tables</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.transposetablenew" uuid="{d96cd4b0-2ee5-412a-9258-5bf66f5c62a8}" width="50.0" x="1800.0" y="1975.0">
    <label>Transpose Table</label>
    <description></description>
    <author>Andreas Tagerud &lt;andreas.tagerud@combine.se&gt;</author>
    <copyright>(c) 2016 SSystem Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "use_col_names": {"description": "Set column names from the input table as the first column in the transposed table", "editor": null, "label": "Column names as first column", "order": 0, "type": "boolean", "value": true}, "reverse_col_names": {"description": "Use the first column from input table as column names in the transposed table, starting the transpose from the second column", "editor": null, "label": "Use first column as column names", "order": 1, "type": "boolean", "value": true}, "columns": {"description": "Column that contains the new column names", "label": "Column names column", "order": 2, "passthrough": false, "type": "list", "list": ["Float 1", "Float 2", "Float 3"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}}]]></parameters>
    <ports>
      <input key="input" requiresdata="False" scheme="hdf5" type="table" uuid="{7306c703-28a1-4c85-9530-5432d0cd279e}">
        <label>The Table to transpose</label>
        <description>The Table to transpose</description>
      </input>
      <output key="output" requiresdata="False" scheme="hdf5" type="table" uuid="{18198c82-f107-4c57-8df3-322d6a31d184}">
        <label>The transposed Table</label>
        <description>The transposed Table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.assertequaltable" uuid="{df6329dc-9316-4e33-bb66-fb317a233c93}" width="50.0" x="3775.0" y="3050.0">
    <label>Assert Equal Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "col_order": {"description": "", "editor": null, "label": "Compare column order", "order": 0, "type": "boolean", "value": true}, "col_attrs": {"description": "", "editor": null, "label": "Compare column attributes", "order": 1, "type": "boolean", "value": true}, "tbl_names": {"description": "", "editor": null, "label": "Compare table names", "order": 2, "type": "boolean", "value": true}, "tbl_attrs": {"description": "", "editor": null, "label": "Compare table attributes", "order": 3, "type": "boolean", "value": true}}]]></parameters>
    <ports>
      <input key="table1" requiresdata="False" scheme="hdf5" type="table" uuid="{395629ae-1e5b-4942-8774-dc136fc98de8}">
        <label>Table A</label>
        <description>Table A</description>
      </input>
      <input key="table2" requiresdata="False" scheme="hdf5" type="table" uuid="{1a763c9e-1d89-4b70-a83c-23f4521e3917}">
        <label>Table B</label>
        <description>Table B</description>
      </input>
      <output key="out" requiresdata="False" scheme="hdf5" type="table" uuid="{773e90a1-5280-4089-a427-999705f3b15d}">
        <label>Output Table</label>
        <description>Output Table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.assertequaltable" uuid="{e1639207-fabf-4f51-8cf1-eb49c0e6731d}" width="50.0" x="1950.0" y="800.0">
    <label>Assert Equal Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="table1" requiresdata="False" scheme="hdf5" type="table" uuid="{2096ce94-27fa-4657-9c05-9adcdc7b4d06}">
        <label>Table A</label>
        <description>Table A</description>
      </input>
      <input key="table2" requiresdata="False" scheme="hdf5" type="table" uuid="{10b27268-1420-420f-9cb8-1f7351986625}">
        <label>Table B</label>
        <description>Table B</description>
      </input>
      <output key="out" requiresdata="False" scheme="hdf5" type="table" uuid="{e2f0ad80-d4b6-4524-b230-3f388af152b0}">
        <label>Output Table</label>
        <description>Output Table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.transposetablesnew" uuid="{e6703d62-0573-429b-92c2-e302f721ba08}" width="50.0" x="1775.0" y="3100.0">
    <label>Transpose Tables</label>
    <description></description>
    <author>Andreas Tagerud &lt;andreas.tagerud@combine.se&gt;</author>
    <copyright>(c) 2016 SSystem Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "use_col_names": {"description": "Set column names from the input table as the first column in the transposed table", "editor": null, "label": "Column names as first column", "order": 0, "type": "boolean", "value": true}, "reverse_col_names": {"description": "Use the first column from input table as column names in the transposed table, starting the transpose from the second column", "editor": null, "label": "Use first column as column names", "order": 1, "type": "boolean", "value": true}, "columns": {"description": "Column that contains the new column names", "label": "Column names column", "order": 2, "passthrough": false, "type": "list", "list": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "99"], "value": [0], "value_names": ["0"], "editor": {"type": "combobox"}}}]]></parameters>
    <ports>
      <input key="input" requiresdata="False" scheme="hdf5" type="[table]" uuid="{c63d6019-6b51-4cbb-acf5-f137d3beb24e}">
        <label>The Tables to transpose</label>
        <description>The Tables to transpose</description>
      </input>
      <output key="output" requiresdata="False" scheme="hdf5" type="[table]" uuid="{b07d08be-06a8-4de1-985b-5b9e18a6c672}">
        <label>The transposed Tables</label>
        <description>The transposed Tables</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.hjointable" uuid="{e7a0f87f-b7d0-4c17-9d98-9a000746a5d6}" width="50.0" x="2750.0" y="3125.0">
    <label>HJoin Table</label>
    <description>Horizontal join of two Tables</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(C) 2013 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{d288a6a9-ba6d-431b-a48f-1908aadfbe99}">
        <label>Input Table 1</label>
        <description>Input Table 1</description>
      </input>
      <input key="port2" requiresdata="False" scheme="hdf5" type="table" uuid="{3307c362-3240-4846-8b32-0a29b36fa03a}">
        <label>Input Table 2</label>
        <description>Input Table 2</description>
      </input>
      <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{7fe2c202-aa7c-4bb1-8ef7-98978201c066}">
        <label>Joined Table</label>
        <description>Joined Table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.list.itemtolist" uuid="{e830662e-58dd-4644-a2bc-834b27ca6e1d}" width="50.0" x="1775.0" y="2875.0">
    <label>Item to List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@sysess.org&gt;</author>
    <copyright>(C) 2015 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="item" requiresdata="False" scheme="hdf5" type="table" uuid="{5ac2b025-2447-437e-9918-3301d439a5f9}">
        <label>Input Item</label>
        <description>Input Item</description>
      </input>
      <output key="list" requiresdata="False" scheme="hdf5" type="[table]" uuid="{0f46c414-d1ba-466a-8f10-6b4c6e3a5b26}">
        <label>Item as List</label>
        <description>Item as List</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.create.createtable" uuid="{e9562381-c6e2-4a86-b4b9-bd63c2de397b}" width="50.0" x="1650.0" y="750.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "json_table": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[]"}}]]></parameters>
    <ports>
      <output key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{85aa7c30-e219-415f-90e5-997adcb72e76}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.create.createtable" uuid="{ef407c12-c05c-4095-b27e-97b25bf0ef9a}" width="50.0" x="1650.0" y="1050.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "json_table": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[[\"0\", \"f\", [1.3, 2.0, 2.4]], [\"1\", \"f\", [1.4, 3.0, 2.5]], [\"2\", \"f\", [1.5, 4.0, 2.6]]]"}}]]></parameters>
    <ports>
      <output key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{11e22ffa-25ab-4919-bc66-3d55685f0fd5}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.transposetablenew" uuid="{ef675087-8893-449b-bcde-c553f4ebc4ee}" width="50.0" x="1800.0" y="2375.0">
    <label>Transpose Table New</label>
    <description></description>
    <author>Andreas Tagerud &lt;andreas.tagerud@combine.se&gt;</author>
    <copyright>(c) 2016 SSystem Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "use_col_names": {"description": "Use column names from the input table as the first column in the transposed table", "editor": null, "label": "Column names as first column", "order": 0, "type": "boolean", "value": false}, "reverse_col_names": {"description": "Use the first column from input table as as column names in the transposed table, starting the transpose from the second column", "editor": null, "label": "Use first column as column names", "order": 1, "type": "boolean", "value": false}}]]></parameters>
    <ports>
      <input key="input" requiresdata="False" scheme="hdf5" type="table" uuid="{4e433d03-eae9-44e6-b89e-98d49002644f}">
        <label>The Table to ranspose</label>
        <description>The Table to ranspose</description>
      </input>
      <output key="output" requiresdata="False" scheme="hdf5" type="table" uuid="{9845b310-56b8-44ff-8232-caa5e71660a5}">
        <label>The transposed Tables</label>
        <description>The transposed Tables</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.create.createtable" uuid="{efdfcfa5-8bbb-431d-975c-6c76f5dc5143}" width="50.0" x="1650.0" y="1375.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "json_table": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[[\"Float 1\", \"f\", [1.3, 1.4]], [\"Float 2\", \"f\", [2.0, 3.0]], [\"Float 3\", \"f\", [2.4, 2.5]]]"}}]]></parameters>
    <ports>
      <output key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{032444c0-3f50-4b19-a380-6474afc7e6b2}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.create.createtable" uuid="{f0f34434-492e-49ec-9aa3-718c61509855}" width="50.0" x="1650.0" y="1575.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "json_table": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[[\"Float 1\", \"f\", [1.3, 1.4, 1.5]], [\"Float 2\", \"f\", [2.0, 3.0, 4.0]], [\"Float 3\", \"f\", [2.4, 2.5, 2.6]]]"}}]]></parameters>
    <ports>
      <output key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{f63d3d54-f576-4acc-ae2d-756412731c75}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.assertequaltable" uuid="{f393ac93-acd9-404b-84cd-258c32d4871d}" width="50.0" x="1950.0" y="2025.0">
    <label>Assert Equal Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "col_names": {"description": "", "editor": null, "label": "Compare column names", "order": 0, "type": "boolean", "value": true}, "col_order": {"description": "", "editor": null, "label": "Compare column order", "order": 1, "type": "boolean", "value": true}, "col_attrs": {"description": "", "editor": null, "label": "Compare column attributes", "order": 2, "type": "boolean", "value": false}, "tbl_names": {"description": "", "editor": null, "label": "Compare table names", "order": 3, "type": "boolean", "value": true}, "tbl_attrs": {"description": "", "editor": null, "label": "Compare table attributes", "order": 4, "type": "boolean", "value": true}}]]></parameters>
    <ports>
      <input key="table1" requiresdata="False" scheme="hdf5" type="table" uuid="{72dd8eda-a2fa-4394-986e-db6654e4c272}">
        <label>Table A</label>
        <description>Table A</description>
      </input>
      <input key="table2" requiresdata="False" scheme="hdf5" type="table" uuid="{97cbc557-7404-4b9b-8a84-8d4dad724a6e}">
        <label>Table B</label>
        <description>Table B</description>
      </input>
      <output key="out" requiresdata="False" scheme="hdf5" type="table" uuid="{c90f85ed-94e1-44fe-8186-4392b7938e41}">
        <label>Output Table</label>
        <description>Output Table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.create.createtable" uuid="{f5e4e647-f012-47e9-9094-b9e5c4dd88bf}" width="50.0" x="1650.0" y="3425.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "json_table": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[[\"0\", \"U\", [\"Zero\", \"0.0\", \"0\", \"False\"]]]"}}]]></parameters>
    <ports>
      <output key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{0ae7263a-494d-437d-8004-de0a155f3e6c}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.transposetablenew" uuid="{f71edb34-2817-4776-88b2-e8ebd0c1b726}" width="50.0" x="1800.0" y="2175.0">
    <label>Transpose Table</label>
    <description></description>
    <author>Andreas Tagerud &lt;andreas.tagerud@combine.se&gt;</author>
    <copyright>(c) 2016 SSystem Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "use_col_names": {"description": "Set column names from the input table as the first column in the transposed table", "editor": null, "label": "Column names as first column", "order": 0, "type": "boolean", "value": false}, "reverse_col_names": {"description": "Use the selected column from input table as column names in the transposed table, and discarding the selected column from the transpose.", "editor": null, "label": "Use selected column as column names", "order": 1, "type": "boolean", "value": false}, "columns": {"description": "Column that contains the new column names", "label": "Column names column", "order": 2, "passthrough": false, "type": "list", "list": ["Column names", "column 2", "column 3"], "value": [0], "value_names": ["Column names"], "editor": {"type": "combobox"}}}]]></parameters>
    <ports>
      <input key="input" requiresdata="False" scheme="hdf5" type="table" uuid="{faa697dd-3860-4773-ba56-d85d706a9f77}">
        <label>The Table to transpose</label>
        <description>The Table to transpose</description>
      </input>
      <output key="output" requiresdata="False" scheme="hdf5" type="table" uuid="{a6f8807a-1878-4b90-a0f8-c3bb3abab6d4}">
        <label>The transposed Table</label>
        <description>The transposed Table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.create.createtable" uuid="{f9b7526b-f1ff-4629-83f4-aae4bedc87ff}" width="50.0" x="1650.0" y="2475.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "json_table": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[[\"0\", \"i\", [0]]]"}}]]></parameters>
    <ports>
      <output key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{320c6947-d22d-4ffd-aeb1-5900dd254d57}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <connection type="table" uuid="{03d72e0c-b31b-4129-bd4b-0cc0dfaaab5f}">
    <source node="{c594fa22-dc0d-4392-9f84-962d49af0779}" port="{1bb81e7d-a021-400d-9f20-376d0dc8647b}"/>
    <destination node="{b1749ab0-13f0-41bc-84ff-3bbacfc7eec2}" port="{7026c740-de30-4993-a164-1dbcc1ca43f8}"/>
  </connection>
  <connection type="datasource" uuid="{04683b13-14d2-42a9-bc85-cc108281e648}">
    <source node="{65b3b8a5-ebb5-41e4-826f-f314bffb0311}" port="{4af7e6c3-bfda-48f7-95ce-58761f740cd1}"/>
    <destination node="{b1749ab0-13f0-41bc-84ff-3bbacfc7eec2}" port="{0c25d934-2739-43e6-b15e-42864894f3cf}"/>
  </connection>
  <connection type="table" uuid="{06ce02aa-9137-4e78-8b5a-ade5e1f14581}">
    <source node="{6e271b14-c03f-4754-b8a4-f105ef680be6}" port="{3bf0f887-076c-4db3-92ca-bac6ffb0bca5}"/>
    <destination node="{e830662e-58dd-4644-a2bc-834b27ca6e1d}" port="{5ac2b025-2447-437e-9918-3301d439a5f9}"/>
  </connection>
  <connection type="table" uuid="{080c9a48-d1ba-4518-ad31-85cfb48b46d8}">
    <source node="{012e3ceb-bb54-4123-8320-98e92cec66f9}" port="{ee21a62b-eadc-4730-b2dc-878665cd4ecf}"/>
    <destination node="{4b906998-9b85-4bdd-8a0c-ce550a2d3435}" port="{de7158a2-0ef8-4b85-a643-c04fcdf819ae}"/>
  </connection>
  <connection type="table" uuid="{0878c7fe-ba45-4fc7-ad9d-78f88a0bee8b}">
    <source node="{662a3907-efa6-4fc2-b1ba-c7504518679e}" port="{f84fe8f6-de80-442c-9f7c-44448ae1d531}"/>
    <destination node="{7b413b27-dd17-4414-863e-f65470d420d2}" port="{e229474e-5c5c-4dd9-b004-182011ef3e9c}"/>
  </connection>
  <connection type="table" uuid="{0df1ee44-75c6-4ed2-b972-8428d153fd8b}">
    <source node="{cf3b52db-30e7-4f1e-94b0-980e6e2a4c41}" port="{09443093-27a6-4c14-94f9-a7a2162e8c11}"/>
    <destination node="{e1639207-fabf-4f51-8cf1-eb49c0e6731d}" port="{10b27268-1420-420f-9cb8-1f7351986625}"/>
  </connection>
  <connection type="table" uuid="{1318a0cc-e3d2-4091-89fa-d130a1d5e11f}">
    <source node="{f5e4e647-f012-47e9-9094-b9e5c4dd88bf}" port="{0ae7263a-494d-437d-8004-de0a155f3e6c}"/>
    <destination node="{86435e01-f786-42de-a85c-662e84614567}" port="{7e8e043c-3347-4532-b698-aeafc5b8f835}"/>
  </connection>
  <connection type="table" uuid="{2330966d-3588-4aae-b198-f3a6b74eae16}">
    <source node="{12d662c6-8c80-4ad0-b4a9-a9004a8b4da4}" port="{046e5a56-2256-4d71-a471-135b8388da40}"/>
    <destination node="{e1639207-fabf-4f51-8cf1-eb49c0e6731d}" port="{2096ce94-27fa-4657-9c05-9adcdc7b4d06}"/>
  </connection>
  <connection type="[(table, table)]" uuid="{29e65ad2-55f2-44df-9453-534f7ab3a892}">
    <source node="{026641b4-6058-44b0-b805-0e9402f5f24a}" port="{0dc19459-6198-4015-92ee-8a39b9d6be8b}"/>
    <destination node="{74bb65d7-ba60-440f-9d55-624bce654898}" port="{6216736d-78ac-4ae3-8d85-380ff80db952}"/>
  </connection>
  <connection type="[table]" uuid="{2c13ef15-360e-4ca2-bd14-39ab99c83be7}">
    <source node="{7d3fdc4b-acb1-4ae0-8dac-aa650a4faff3}" port="{f97b9d66-01d6-4a27-b6be-a63fe63605c3}"/>
    <destination node="{95cf999b-58ef-4b5d-b7b1-ed47f59035e4}" port="{a29dba71-d9c5-4372-b73d-c812b16e3c69}"/>
  </connection>
  <connection type="table" uuid="{322199f9-4f54-4f32-a0a9-c2d7b544822e}">
    <source node="{48f46527-1352-4166-8e57-5fc514d08c9d}" port="{ef858f7e-2a32-4a79-bd57-6dd5c1251f77}"/>
    <destination node="{8d46111c-3369-4e01-98a3-052533dc10aa}" port="{d22f2699-2025-497b-bd0c-d440a8733268}"/>
  </connection>
  <connection type="[table]" uuid="{3c16d75c-633d-408c-bb52-6322440a8658}">
    <source node="{95cf999b-58ef-4b5d-b7b1-ed47f59035e4}" port="{b2982edc-a772-4c78-955d-fefe22a6712f}"/>
    <destination node="{026641b4-6058-44b0-b805-0e9402f5f24a}" port="{4778643e-f863-4e0b-89ed-287b505e3484}"/>
  </connection>
  <connection type="table" uuid="{3c8a8adb-7d5e-40b2-b0bb-0201a5bd8add}">
    <source node="{cbdfb849-c043-459b-95fa-cfd1d1c349d4}" port="{bff43c4e-e232-4b0a-8ad6-b5d845f57c84}"/>
    <destination node="{d96cd4b0-2ee5-412a-9258-5bf66f5c62a8}" port="{7306c703-28a1-4c85-9530-5432d0cd279e}"/>
  </connection>
  <connection type="table" uuid="{3cc3e14e-eeb9-48ea-a8e8-da2d92e74904}">
    <source node="{a94fff8e-fa9c-44f4-8bac-2f17ed2da5ed}" port="{0e7f04cb-3fe2-4a4a-b151-41201844cdf4}"/>
    <destination node="{c716ba9f-ff1a-4abe-bfb9-ee796394661e}" port="{1cf3a70c-dc15-4eac-9d6b-04d5eb80b735}"/>
  </connection>
  <connection type="table" uuid="{4a94cb2b-4576-471d-8d03-fa81092fe6d8}">
    <source node="{74f15ab8-13a6-47fb-80f7-aeca0f64f06e}" port="{b0941133-a2ff-4def-99a6-8f06e4b5c7ce}"/>
    <destination node="{0e96e6fa-6845-43dd-99c0-4f8dfa3a31e2}" port="{475966cb-88c2-40f1-b1f7-dad6f2b59fd5}"/>
  </connection>
  <connection type="table" uuid="{4e2d7497-9598-4cdb-94d4-cbf087146468}">
    <source node="{0e96e6fa-6845-43dd-99c0-4f8dfa3a31e2}" port="{a62c7a79-1e86-454d-b944-6c662d15582c}"/>
    <destination node="{027583ef-d4f4-47c6-b5cd-fdb1870d1d2d}" port="{a042cf7c-334c-4405-b1c2-867a541ebe5e}"/>
  </connection>
  <connection type="table" uuid="{4e3d94b2-f581-4c7d-9999-110c29726dc5}">
    <source node="{a249e3cb-1f2e-4926-9f2d-2b4b4067b971}" port="{00d81560-903f-45c7-817e-6fd576b50ea1}"/>
    <destination node="{662a3907-efa6-4fc2-b1ba-c7504518679e}" port="{b88218d9-9deb-4a0f-909e-6825369a8eb7}"/>
  </connection>
  <connection type="table" uuid="{53f5f625-913f-4f23-a47a-b4459af1985c}">
    <source node="{3d0274ef-bc58-4e5c-b0c2-6089fcc5ba77}" port="{abc60c94-156b-4433-bd4d-735c42de2175}"/>
    <destination node="{ef675087-8893-449b-bcde-c553f4ebc4ee}" port="{4e433d03-eae9-44e6-b89e-98d49002644f}"/>
  </connection>
  <connection type="table" uuid="{55f235b2-3fa2-44db-9c54-3447aa6aa537}">
    <source node="{75cde612-03f1-4cea-96b0-37c794e18cb0}" port="{34b3d0a8-bcff-4c3d-baeb-58b940a70d44}"/>
    <destination node="{7d3fdc4b-acb1-4ae0-8dac-aa650a4faff3}" port="{450cddbf-2f0e-4bae-895b-efc2e08d1d15}"/>
  </connection>
  <connection type="table" uuid="{68aa47e0-9bed-435f-97f6-adc7ac81490d}">
    <source node="{cb0c2c87-70ba-4477-9000-c5404e63c24e}" port="{e5d71d16-d270-4ee2-994d-a7b5377a6c8d}"/>
    <destination node="{92ae44ac-62c2-4b9d-a462-f62463739cbd}" port="{6135d979-0741-4481-88fa-97b016df46d7}"/>
  </connection>
  <connection type="table" uuid="{697117fa-1cbb-4021-9afa-d89eab759d34}">
    <source node="{b8f6173e-bfc3-496e-b91d-70516de0bb40}" port="{6d738d22-5c7d-4363-ac1d-2794d00aac7b}"/>
    <destination node="{8ff0b804-86af-4f28-9d74-8360b234746b}" port="{5b491a87-e600-4eb1-9369-15d0d25f26e2}"/>
  </connection>
  <connection type="table" uuid="{73cc9baa-60d7-4ee9-ae8d-85817a050f82}">
    <source node="{48f46527-1352-4166-8e57-5fc514d08c9d}" port="{ef858f7e-2a32-4a79-bd57-6dd5c1251f77}"/>
    <destination node="{62554f76-a57a-4dd5-9232-9a3a4c762c8a}" port="{de08fa71-17b1-44b1-b4ab-f32be305c7db}"/>
  </connection>
  <connection type="(table, table) -&gt; table" uuid="{750df234-b79b-4aa9-89ce-bfcb06d121a6}">
    <source node="{c448d814-d99d-40a3-8a06-953ce2a98e5b}" port="{f2d32d90-9315-4bde-ba2c-8c20a6d0f1d9}"/>
    <destination node="{74bb65d7-ba60-440f-9d55-624bce654898}" port="{93c4b69a-97c8-4485-a9a6-47c41a74862e}"/>
  </connection>
  <connection type="table" uuid="{78636389-315e-4dae-8810-2154bfaa86bc}">
    <source node="{8ff0b804-86af-4f28-9d74-8360b234746b}" port="{c5ac6b79-e98c-4d6a-8030-7cf55916f15c}"/>
    <destination node="{69702063-719d-4540-b990-a5b9c089a015}" port="{5effdc75-d8d9-4871-aa73-0ae020815cab}"/>
  </connection>
  <connection type="table" uuid="{7b9b9205-c51a-4965-8d52-d59653016a31}">
    <source node="{ef407c12-c05c-4095-b27e-97b25bf0ef9a}" port="{11e22ffa-25ab-4919-bc66-3d55685f0fd5}"/>
    <destination node="{027583ef-d4f4-47c6-b5cd-fdb1870d1d2d}" port="{04170709-bb6b-4b4d-ac35-1ce5628c781a}"/>
  </connection>
  <connection type="table" uuid="{81f13b6c-9072-4d29-81ec-66aa95d58b67}">
    <source node="{35bec4f1-b8d5-402a-bf40-5415b18176c5}" port="{2a4f9c97-8227-4982-8733-ebb8607f4849}"/>
    <destination node="{3fea4354-67bb-4161-b4df-c660a2f2a0c1}" port="{461def34-3d05-49d0-a029-5e8aea4ae224}"/>
  </connection>
  <connection type="[table]" uuid="{8700f10d-10a4-449d-9728-f99a39133d5a}">
    <source node="{e830662e-58dd-4644-a2bc-834b27ca6e1d}" port="{0f46c414-d1ba-466a-8f10-6b4c6e3a5b26}"/>
    <destination node="{026641b4-6058-44b0-b805-0e9402f5f24a}" port="{ea03aa6c-cdc8-48df-a8c5-82902125fbc8}"/>
  </connection>
  <connection type="table" uuid="{8d62b207-38f1-4319-95fd-8cd14d5521e0}">
    <source node="{c6f7fc4e-e75a-46c6-89c7-dc54522d89b3}" port="{3f462ad6-e477-4bf3-a637-8b3c0f71152b}"/>
    <destination node="{cafd5a72-b9b1-4955-94c5-b9549657a63a}" port="{50395ca2-9239-48d9-858d-23550341e205}"/>
  </connection>
  <connection type="table" uuid="{8d85ae44-63a0-4e5f-8ec4-27728cccfcdc}">
    <source node="{13eb4657-1ca4-4ab5-a84b-619d4228e554}" port="{88fbba7d-15de-4c63-a2a9-351757345c01}"/>
    <destination node="{b3d6321e-a0b6-40c2-a5d2-d46de3ba182a}" port="{ab197b52-e307-4ff4-9a88-d835f9eb0511}"/>
  </connection>
  <connection type="table" uuid="{923c93ed-7404-497e-92ca-09c6df133876}">
    <source node="{747b8daa-c053-4c60-8e89-87a990d1e8fb}" port="{947e45db-5448-44a2-aab2-bd228ec3172f}"/>
    <destination node="{c716ba9f-ff1a-4abe-bfb9-ee796394661e}" port="{6c5cbc92-18c6-4d54-995f-2cab29099f42}"/>
  </connection>
  <connection type="table" uuid="{92ce8b49-16f4-4d9f-af9d-9f0847421a49}">
    <source node="{a9f3c89d-0425-43fb-b5c1-942baeb5c51c}" port="{67d1b5f0-9020-4bcc-affc-804df27ade69}"/>
    <destination node="{b8f6173e-bfc3-496e-b91d-70516de0bb40}" port="{6b2236e7-d219-4197-916a-689e81beba4e}"/>
  </connection>
  <connection type="table" uuid="{99a2d5a1-f860-4d45-af98-1c0ad9509e00}">
    <source node="{0e50066d-b43e-4194-8e97-91d6dd7bb34a}" port="{ccd5f906-7a4a-4c7d-9a61-94ff297a48f8}"/>
    <destination node="{70789182-c894-48b7-9682-07687d2d6d75}" port="{1a9b11be-cfb6-40f1-b2a1-180944407c86}"/>
  </connection>
  <connection type="table" uuid="{99e3d10f-249d-4cdc-bb7e-511a61fa69d2}">
    <source node="{e9562381-c6e2-4a86-b4b9-bd63c2de397b}" port="{85aa7c30-e219-415f-90e5-997adcb72e76}"/>
    <destination node="{12d662c6-8c80-4ad0-b4a9-a9004a8b4da4}" port="{699e68ef-b798-4e0c-9590-e9ecb18845a0}"/>
  </connection>
  <connection type="[table]" uuid="{9b143d1a-a9ad-4db1-81ad-1e25d359232c}">
    <source node="{d3b89113-1c89-47ac-b121-c8fada80b293}" port="{ca65fd39-f39b-4a43-8193-292ac8db98ba}"/>
    <destination node="{e6703d62-0573-429b-92c2-e302f721ba08}" port="{c63d6019-6b51-4cbb-acf5-f137d3beb24e}"/>
  </connection>
  <connection type="table" uuid="{a385659b-6325-4df9-92f1-49752330483d}">
    <source node="{e7a0f87f-b7d0-4c17-9d98-9a000746a5d6}" port="{7fe2c202-aa7c-4bb1-8ef7-98978201c066}"/>
    <destination node="{df6329dc-9316-4e33-bb66-fb317a233c93}" port="{1a763c9e-1d89-4b70-a83c-23f4521e3917}"/>
  </connection>
  <connection type="table" uuid="{a8cc3ffc-aa61-4576-8b1f-16a7007320b5}">
    <source node="{d96cd4b0-2ee5-412a-9258-5bf66f5c62a8}" port="{18198c82-f107-4c57-8df3-322d6a31d184}"/>
    <destination node="{f393ac93-acd9-404b-84cd-258c32d4871d}" port="{72dd8eda-a2fa-4394-986e-db6654e4c272}"/>
  </connection>
  <connection type="table" uuid="{aa77c52b-7e08-4e77-b315-dbc48c5fdd91}">
    <source node="{bbc432bb-d49e-4efa-bb03-d847de6fbdd9}" port="{7b0bb9d8-5ca4-4535-a017-a577042a97ed}"/>
    <destination node="{7b413b27-dd17-4414-863e-f65470d420d2}" port="{41a925c4-34c3-436c-8564-ce1976d296ac}"/>
  </connection>
  <connection type="table" uuid="{ae03b31e-d419-4d66-815f-e573db424060}">
    <source node="{f9b7526b-f1ff-4629-83f4-aae4bedc87ff}" port="{320c6947-d22d-4ffd-aeb1-5900dd254d57}"/>
    <destination node="{a5b958f1-92c9-4e18-bb63-857030dfbdb7}" port="{f2dc5454-90c5-41b2-8842-4eefaf0cf803}"/>
  </connection>
  <connection type="[table]" uuid="{ae7325f8-87a8-4030-b902-40a575a0f400}">
    <source node="{69702063-719d-4540-b990-a5b9c089a015}" port="{c1c2ceee-a989-48c1-85c8-588cd2720df3}"/>
    <destination node="{4b906998-9b85-4bdd-8a0c-ce550a2d3435}" port="{0a676130-762d-486a-90a7-9bb386ec324a}"/>
  </connection>
  <connection type="table" uuid="{af1b3b15-8dca-4d18-9313-f90a53697909}">
    <source node="{8d46111c-3369-4e01-98a3-052533dc10aa}" port="{aadb926b-aa34-47f7-9b76-7edd64776088}"/>
    <destination node="{012e3ceb-bb54-4123-8320-98e92cec66f9}" port="{37bc1e06-5b03-48e9-a7b0-fb22c64ca698}"/>
  </connection>
  <connection type="table" uuid="{b234646e-9c56-4fed-96f6-712adfec3efa}">
    <source node="{9f7f0e57-a645-443a-a6ac-c2867966c117}" port="{b84c2349-5aae-47c7-a0cd-a0929572d9d7}"/>
    <destination node="{cafd5a72-b9b1-4955-94c5-b9549657a63a}" port="{a69e0f35-b63f-47fa-b951-3b0bbb70c415}"/>
  </connection>
  <connection type="table" uuid="{b340baf5-3384-43b5-a0f2-2fb2b9c660bb}">
    <source node="{f0f34434-492e-49ec-9aa3-718c61509855}" port="{f63d3d54-f576-4acc-ae2d-756412731c75}"/>
    <destination node="{0ff837ef-e763-4873-9f14-c54fc601f467}" port="{9be00718-c167-4134-acb5-a924dac37d26}"/>
  </connection>
  <connection type="table" uuid="{b4bcba60-b527-46d5-9c90-fb04d109ddb3}">
    <source node="{8184122a-852c-4cef-a33b-1f867270875b}" port="{a8443a0d-f4bc-4f79-bdc5-e51860749062}"/>
    <destination node="{f71edb34-2817-4776-88b2-e8ebd0c1b726}" port="{faa697dd-3860-4773-ba56-d85d706a9f77}"/>
  </connection>
  <connection type="table" uuid="{b66aa634-9063-4665-b1d3-42923d23e489}">
    <source node="{b3d6321e-a0b6-40c2-a5d2-d46de3ba182a}" port="{577b4c84-6f96-4cc7-8b3d-ff0221e3af72}"/>
    <destination node="{f393ac93-acd9-404b-84cd-258c32d4871d}" port="{97cbc557-7404-4b9b-8a84-8d4dad724a6e}"/>
  </connection>
  <connection type="[table]" uuid="{b9f3d428-02b4-445d-af39-6ef655c30cf0}">
    <source node="{4b906998-9b85-4bdd-8a0c-ce550a2d3435}" port="{0131156c-e9bf-4058-ad1b-77ced6da776f}"/>
    <destination node="{c594fa22-dc0d-4392-9f84-962d49af0779}" port="{dd0c92c5-5d6a-45eb-910b-8ca8041db55f}"/>
  </connection>
  <connection type="table" uuid="{c5bb0218-7c7d-47b5-8e31-ec76b9d56eae}">
    <source node="{b1749ab0-13f0-41bc-84ff-3bbacfc7eec2}" port="{d823b505-0f8c-478f-a9e9-56279e29817d}"/>
    <destination node="{9f7f0e57-a645-443a-a6ac-c2867966c117}" port="{0fe58f35-308c-45fa-9df6-6a757222175e}"/>
  </connection>
  <connection type="table" uuid="{cd2f0f63-8332-4145-9127-542b97e4d920}">
    <source node="{f71edb34-2817-4776-88b2-e8ebd0c1b726}" port="{a6f8807a-1878-4b90-a0f8-c3bb3abab6d4}"/>
    <destination node="{2d921c3e-f5cc-4769-9a17-23d564920bfa}" port="{3ad30091-e370-4e67-b7a6-275c2c8356b0}"/>
  </connection>
  <connection type="table" uuid="{d175b044-b3d0-4ec4-b44e-95ef80e22d32}">
    <source node="{01006965-71f7-4545-bb23-ffcef3af56a3}" port="{55b6dfa6-c74d-44c5-9209-3e8136b3682e}"/>
    <destination node="{bdba36ab-4db1-4e85-bb83-bd190a19672e}" port="{bacef4d5-122f-4284-a5e9-9b34bb87253d}"/>
  </connection>
  <connection type="table" uuid="{d2eac370-1c46-4b41-8c0f-61700b2fb363}">
    <source node="{8d46111c-3369-4e01-98a3-052533dc10aa}" port="{aadb926b-aa34-47f7-9b76-7edd64776088}"/>
    <destination node="{a9f3c89d-0425-43fb-b5c1-942baeb5c51c}" port="{c0718640-7378-4ea0-afef-20db66f1db7c}"/>
  </connection>
  <connection type="table" uuid="{d6666bbb-68b2-4a9f-95d3-d36e3e4e5e75}">
    <source node="{9c486357-9319-455e-bd69-bd874def96d2}" port="{00b0ac13-9921-4006-b888-ebc31fcd4b50}"/>
    <destination node="{2d921c3e-f5cc-4769-9a17-23d564920bfa}" port="{edcf4079-52e1-4239-a91d-d5dde544d9d7}"/>
  </connection>
  <connection type="table" uuid="{e12394a9-5e4a-4c65-9f97-45e957b9ea17}">
    <source node="{d258750b-d772-4f0a-b4c6-0c353fe654cf}" port="{c826b6ba-7b70-4213-a741-1e066b4e265a}"/>
    <destination node="{e7a0f87f-b7d0-4c17-9d98-9a000746a5d6}" port="{d288a6a9-ba6d-431b-a48f-1908aadfbe99}"/>
  </connection>
  <connection type="table" uuid="{e240fd13-aa3a-4222-afd6-2c2d5784f014}">
    <source node="{b1749ab0-13f0-41bc-84ff-3bbacfc7eec2}" port="{d823b505-0f8c-478f-a9e9-56279e29817d}"/>
    <destination node="{c6f7fc4e-e75a-46c6-89c7-dc54522d89b3}" port="{87ba30fb-c99a-4f0f-a344-ab0dc9cf4488}"/>
  </connection>
  <connection type="table" uuid="{e57bec2a-1ef4-486e-92a2-315e196523b0}">
    <source node="{5af526bc-7eba-48e5-82ab-337d4ac2ee89}" port="{a3206ea0-74bf-48e7-beb1-03a6dc7c2f25}"/>
    <destination node="{bdba36ab-4db1-4e85-bb83-bd190a19672e}" port="{d7e13ac7-79ca-4180-96df-f49b324a173a}"/>
  </connection>
  <connection type="table" uuid="{e8de48d4-c981-4607-a8d6-b11bcdba106b}">
    <source node="{62554f76-a57a-4dd5-9232-9a3a4c762c8a}" port="{230063b3-06c5-4377-967f-242e964ceb60}"/>
    <destination node="{e7a0f87f-b7d0-4c17-9d98-9a000746a5d6}" port="{3307c362-3240-4846-8b32-0a29b36fa03a}"/>
  </connection>
  <connection type="table" uuid="{ea072cf0-bd8e-4931-b059-53e5b49c1ec3}">
    <source node="{efdfcfa5-8bbb-431d-975c-6c76f5dc5143}" port="{032444c0-3f50-4b19-a380-6474afc7e6b2}"/>
    <destination node="{747b8daa-c053-4c60-8e89-87a990d1e8fb}" port="{3373f959-f59f-4a64-a17a-eadba3bf4408}"/>
  </connection>
  <connection type="table" uuid="{ea63fa12-f302-4178-a357-60895991809f}">
    <source node="{0ff837ef-e763-4873-9f14-c54fc601f467}" port="{e5dbd414-81a4-4f4e-ad9b-f3839ac7a359}"/>
    <destination node="{3fea4354-67bb-4161-b4df-c660a2f2a0c1}" port="{5361b046-1093-4f91-b94a-7bd5238fa80c}"/>
  </connection>
  <connection type="table" uuid="{fbb90384-3005-4fed-8ad3-e69f24f8c107}">
    <source node="{b958a89d-2d0b-4fec-8903-590b34e90b3a}" port="{3a45ea6e-6933-4fc8-9686-3b23799aae9d}"/>
    <destination node="{01006965-71f7-4545-bb23-ffcef3af56a3}" port="{fc42609b-fc5d-42ae-9a69-48c65db8cecc}"/>
  </connection>
  <connection type="table" uuid="{fc5b65da-7ef8-4a95-99a1-ffa07d3f575d}">
    <source node="{cafd5a72-b9b1-4955-94c5-b9549657a63a}" port="{c827765d-72e6-46be-ab64-bdf898295ee1}"/>
    <destination node="{df6329dc-9316-4e33-bb66-fb317a233c93}" port="{395629ae-1e5b-4942-8774-dc136fc98de8}"/>
  </connection>
  <connection type="table" uuid="{fcd31c72-791d-4642-b7dd-888734411d50}">
    <source node="{ef675087-8893-449b-bcde-c553f4ebc4ee}" port="{9845b310-56b8-44ff-8232-caa5e71660a5}"/>
    <destination node="{a5b958f1-92c9-4e18-bb63-857030dfbdb7}" port="{aa9d8607-3350-4702-9641-c5b3699896c6}"/>
  </connection>
  <connection type="table" uuid="{fcd9fbda-fd50-41d0-b27d-73c939616816}">
    <source node="{48f46527-1352-4166-8e57-5fc514d08c9d}" port="{ef858f7e-2a32-4a79-bd57-6dd5c1251f77}"/>
    <destination node="{d258750b-d772-4f0a-b4c6-0c353fe654cf}" port="{027802f5-d366-4d5e-94b7-9647e5f9bfee}"/>
  </connection>
  <text height="100.0" uuid="{2a09b0f0-879b-4001-826b-1c523bbbac99}" width="475.0" x="1125.0" y="2975.0">Testing random tables with all options selected. Disregarding preciion loss when converting floats to strings in transpose, testing that you can return to the original array using another transpose (and some trickery).

Should work on any matrix where n &lt;= m.</text>
  <text height="75.0" uuid="{400b096b-fe44-4253-8435-9c52feb5a73c}" width="175.0" x="2975.0" y="2825.0">Remove the last column which has only masked values.</text>
  <text height="75.0" uuid="{48ccaa7b-17c1-448b-b29e-f129a042f105}" width="200.0" x="3200.0" y="2825.0">Just in case, truncate the values in the first column in the tranposed table.</text>
  <text height="75.0" uuid="{545e67a3-5441-4656-b2a0-230ed177f08f}" width="100.0" x="1500.0" y="2225.0">Transposing strings</text>
  <text height="125.0" uuid="{62a91697-0991-47c3-a76c-b04df2951f44}" width="100.0" x="1500.0" y="2600.0">Mixed types
(Disabled becuase of numpy issues on Linux)</text>
  <text height="150.0" uuid="{6f69c121-109d-4c91-8457-d081beab9cd5}" width="100.0" x="1500.0" y="2000.0">Column names as first column and first column as column names, 3x3, resulting in masked values</text>
  <text height="75.0" uuid="{7a861d63-7f57-4472-adb2-e5e2e194430e}" width="300.0" x="2575.0" y="3275.0">Since we lost precision in the column that was used as name (conversion to string), we truncate the orignail column here.</text>
  <text height="125.158659853" uuid="{85469b73-5f9f-4dac-a2f6-03b0ae3d8baf}" width="100.0" x="1500.0" y="3450.0">Column to row
(Disabled becuase of numpy issues on Linux)</text>
  <text height="75.0" uuid="{9c81926b-9dea-43e6-a094-7edbf705c147}" width="225.0" x="1375.0" y="3100.0">Just test that the Tables version runs without failing. The other test cases covers the algorithm.</text>
  <text height="50.0" uuid="{a7c5a836-f226-4358-9956-5ea5683666ac}" width="100.0" x="1500.0" y="2425.0">1x1 integer</text>
  <text height="50.0" uuid="{c5965b5a-3591-46f8-8767-70f33dd8b960}" width="100.0" x="1500.0" y="2825.0">Empty Tables</text>
  <text height="75.0" uuid="{c8a49822-d51a-416f-8811-8f4cb3195f86}" width="100.0" x="1500.0" y="1425.0">Column names as first column, 2x3</text>
  <text height="50.0" uuid="{cade660f-ba50-4e91-99eb-7fb518ee012c}" width="100.0" x="1500.0" y="1000.0">3x3</text>
  <text height="50.0" uuid="{d3f41d6a-df79-41ac-9c6c-27318b414650}" width="100.0" x="1500.0" y="800.0">Empty Table</text>
  <text height="115.857935065" uuid="{dc42e0b1-5c88-44d8-9822-e3c6731e21cb}" width="100.0" x="1500.0" y="3250.0">Row to column
(Disabled becuase of numpy issues on Linux)</text>
  <text height="75.0" uuid="{e9bb3803-ea83-4674-bbda-c9f40e755e64}" width="100.0" x="1500.0" y="1625.0">First column as column names, 3x3</text>
  <text height="75.0" uuid="{f337864f-b3d4-4f02-b1b9-52c10911ff28}" width="100.0" x="1500.0" y="1225.0">Columns names only</text>
  <text height="100.0" uuid="{f53092f9-a19a-4549-a089-e0363d1c17c9}" width="100.0" x="1500.0" y="1800.0">Second column as column names, 3x3</text>
</flow>
