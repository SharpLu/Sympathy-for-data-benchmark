<?xml version='1.0' encoding='ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" id="" is_locked="False" uuid="{72e31a0e-480a-4c3d-aca6-4e83319b8ae3}" width="50.0" x="0.0" y="0.0">
  <label>node_deprecated_functions</label>
  <description></description>
  <author>Unknown</author>
  <copyright></copyright>
  <version>1.0</version>
  <source></source>
  <aggregation type="json"><![CDATA[null]]></aggregation>
  <libraries type="json"><![CDATA[[]]]></libraries>
  <pythonpaths type="json"><![CDATA[[]]]></pythonpaths>
  <environment type="json"><![CDATA[{}]]></environment>
  <parameters type="json"><![CDATA[{"environment": {}}]]></parameters>
  <ports/>
  <node height="50.0" id="org.sysess.sympathy.data.table.functionselectortablemultiplewithextra" uuid="{19c02195-0698-4df0-bfbd-bc20d5358121}" width="50.0" x="1775.0" y="2500.0">
    <label>F(x) Tables With Extra Input</label>
    <description>Select and apply functions to Tables.</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(C) 2012 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "clean_output": {"description": "Do not copy the input data to the output.", "editor": null, "label": "Clean output", "order": 0, "type": "boolean", "value": true}, "selected_functions": {"description": "Select the functions to apply.", "label": "Select functions", "order": 1, "passthrough": false, "type": "list", "list": ["ExtraTable", "ExtraTables"], "value": [], "value_names": [], "editor": {"buttons": true, "filter": true, "passthrough": true, "selection": "multi", "type": "listview"}}, "same_length_res": {"description": "Use this checkbox if you want to gather all the results generated from an incoming Table into a common output. This requires that the results will all have the same length. An exception will be raised if the lengths of the outgoing results differ.", "editor": null, "label": "Put results in common outputs", "order": 2, "type": "boolean", "value": true}}]]></parameters>
    <ports>
      <input key="port1" requiresdata="True" scheme="text" type="datasource" uuid="{5ee259f7-4039-4375-9e42-1d6ceab132fa}">
        <label>Python *.py file</label>
        <description>Python *.py file</description>
      </input>
      <input key="extra" requiresdata="False" scheme="hdf5" type="table" uuid="{2c74d512-04f0-4d39-b266-9558b859d356}">
        <label>Specification</label>
        <description>Specification</description>
      </input>
      <input key="port2" requiresdata="False" scheme="hdf5" type="[table]" uuid="{757da7a3-dd8a-4a17-9dfe-03cda01e7a47}">
        <label>Input Tables</label>
        <description>Input Tables</description>
      </input>
      <output key="port3" requiresdata="False" scheme="hdf5" type="[table]" uuid="{11cdd6e5-f377-44bf-a965-393bf89df523}">
        <label>Tables with function(s) applied</label>
        <description>Tables with function(s) applied</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.fx" uuid="{2638a278-03b1-43e6-88e2-48128492d8be}" width="50.0" x="1775.0" y="2050.0">
    <label>F(x) Extra Table</label>
    <description>Select and apply functions to item.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@sysess.org&gt;</author>
    <copyright>(C) 2016 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "copy_input": {"description": "If enabled the incoming data will be copied to the output before running the nodes.", "editor": null, "label": "Copy input", "order": 0, "type": "boolean", "value": true}, "clean_output": {"description": "If disabled the incoming data will be copied to the output before running the nodes.", "editor": null, "label": "Clean output", "order": 0, "type": "boolean", "value": true}, "selected_functions": {"description": "Choose one or many of the listed functions to apply to the content of the incoming item.", "label": "Select functions", "order": 1, "passthrough": false, "type": "list", "list": ["ExtraTable"], "value": [0], "value_names": ["ExtraTable"], "editor": {"buttons": true, "filter": true, "passthrough": true, "selection": "multi", "type": "listview"}}}]]></parameters>
    <ports>
      <input key="port1" requiresdata="False" scheme="text" type="datasource" uuid="{59e7016e-941a-4d23-adfd-25eb71cd121f}">
        <label>Path to Python file with scripted functions.</label>
        <description>Path to Python file with scripted functions.</description>
      </input>
      <input key="port2" requiresdata="False" scheme="hdf5" type="table" uuid="{6b0f682e-a802-4822-8fee-700e5cd651e1}">
        <label>Item with data to apply functions on</label>
        <description>Item with data to apply functions on</description>
      </input>
      <output key="port3" requiresdata="False" scheme="hdf5" type="table" uuid="{826dacf4-628e-4f73-b833-facd8b29f41e}">
        <label>Item with the results from the applied functions</label>
        <description>Item with the results from the applied functions</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.list.getitemlist" uuid="{605e2249-aa79-49a5-b218-f530e2b05061}" width="50.0" x="1525.0" y="2050.0">
    <label>Get Item List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@sysess.org&gt;</author>
    <copyright>(C) 2015 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "index": {"description": "Choose item index in list.", "label": "Index", "order": 0, "passthrough": false, "type": "list", "list": ["0"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}}]]></parameters>
    <ports>
      <input key="list" requiresdata="False" scheme="hdf5" type="[table]" uuid="{ebcbdf79-09f6-4215-8300-d68a3a3c4d26}">
        <label>Input List</label>
        <description>Input List</description>
      </input>
      <output key="item" requiresdata="False" scheme="hdf5" type="table" uuid="{b2bf503d-b786-49b7-8dc0-f3fb269d5618}">
        <label>Output selcted Item from List</label>
        <description>Output selcted Item from List</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.functionselectortablemultiplewithextras" uuid="{78a5dd1f-6ff8-4aae-b059-189b5f58aa05}" width="50.0" x="1775.0" y="2375.0">
    <label>F(x) Tables With Extras Input</label>
    <description>Select and apply functions to Tables.</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(C) 2012 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "clean_output": {"description": "Do not copy the input data to the output.", "editor": null, "label": "Clean output", "order": 0, "type": "boolean", "value": true}, "selected_functions": {"description": "Select the functions to apply.", "label": "Select functions", "order": 1, "passthrough": false, "type": "list", "list": ["ExtraTable", "ExtraTables"], "value": [], "value_names": [], "editor": {"buttons": true, "filter": true, "passthrough": true, "selection": "multi", "type": "listview"}}, "same_length_res": {"description": "Use this checkbox if you want to gather all the results generated from an incoming Table into a common output. This requires that the results will all have the same length. An exception will be raised if the lengths of the outgoing results differ.", "editor": null, "label": "Put results in common outputs", "order": 2, "type": "boolean", "value": true}}]]></parameters>
    <ports>
      <input key="port1" requiresdata="True" scheme="text" type="datasource" uuid="{9fa4cee6-a36f-4cfb-a7e1-9bdf9f37a7ea}">
        <label>Python *.py file</label>
        <description>Python *.py file</description>
      </input>
      <input key="extra" requiresdata="False" scheme="hdf5" type="[table]" uuid="{57224359-375c-44e5-965b-bcc0404b4f71}">
        <label>Specification</label>
        <description>Specification</description>
      </input>
      <input key="port2" requiresdata="False" scheme="hdf5" type="[table]" uuid="{686e247d-be09-4865-b4bd-7a8228305e9b}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="port3" requiresdata="False" scheme="hdf5" type="[table]" uuid="{bb4c480a-3ac3-46e1-86a9-4edb5dbf52b8}">
        <label>Tables with function(s) applied</label>
        <description>Tables with function(s) applied</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.fx" uuid="{8fe27400-a16a-4077-92d2-e937c30b8cf3}" width="50.0" x="1775.0" y="2150.0">
    <label>F(x) Extra ADAF</label>
    <description>Select and apply functions to item.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@sysess.org&gt;</author>
    <copyright>(C) 2016 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "copy_input": {"description": "If enabled the incoming data will be copied to the output before running the nodes.", "editor": null, "label": "Copy input", "order": 0, "type": "boolean", "value": true}, "clean_output": {"description": "If disabled the incoming data will be copied to the output before running the nodes.", "editor": null, "label": "Clean output", "order": 0, "type": "boolean", "value": true}, "selected_functions": {"description": "Choose one or many of the listed functions to apply to the content of the incoming item.", "label": "Select functions", "order": 1, "passthrough": false, "type": "list", "list": ["ExtraADAF"], "value": [0], "value_names": ["ExtraADAF"], "editor": {"buttons": true, "filter": true, "passthrough": true, "selection": "multi", "type": "listview"}}}]]></parameters>
    <ports>
      <input key="port1" requiresdata="False" scheme="text" type="datasource" uuid="{c5fec3c2-7b86-4388-b571-fbf9604fcf6d}">
        <label>Path to Python file with scripted functions.</label>
        <description>Path to Python file with scripted functions.</description>
      </input>
      <input key="port2" requiresdata="False" scheme="hdf5" type="adaf" uuid="{e87c66e9-8286-439e-b26b-8e28278f8b00}">
        <label>Item with data to apply functions on</label>
        <description>Item with data to apply functions on</description>
      </input>
      <output key="port3" requiresdata="False" scheme="hdf5" type="adaf" uuid="{325f9917-bf86-4595-adeb-5cdc8296c59a}">
        <label>Item with the results from the applied functions</label>
        <description>Item with the results from the applied functions</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.list.getitemlist" uuid="{9658c0a4-856e-4937-99f6-483857950f19}" width="50.0" x="1525.0" y="2175.0">
    <label>Get Item List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@sysess.org&gt;</author>
    <copyright>(C) 2015 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "index": {"description": "Choose item index in list.", "label": "Index", "order": 0, "passthrough": false, "type": "list", "list": ["0"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}}]]></parameters>
    <ports>
      <input key="list" requiresdata="False" scheme="hdf5" type="[adaf]" uuid="{e83de846-649e-4c08-bd27-cbdaf39acff2}">
        <label>Input List</label>
        <description>Input List</description>
      </input>
      <output key="item" requiresdata="False" scheme="hdf5" type="adaf" uuid="{03a61876-40d4-4347-8547-9731f7b85b69}">
        <label>Output selcted Item from List</label>
        <description>Output selcted Item from List</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.datasources.filedatasource" uuid="{9d579c6c-186d-4a42-9ece-bb8b54439053}" width="50.0" x="1400.0" y="2300.0">
    <label>Datasource</label>
    <description>Select a data source.</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(C) 2013 System Engineering Software Society</copyright>
    <version>1.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "filename": {"description": "A filename including path if needed", "label": "Filename", "order": 0, "type": "string", "value": "deprecated_functions.py", "editor": {"type": "filename", "filter": ["Any files (*)"]}}, "use_relative_path": {"description": "Use the relative path to the file.", "editor": null, "label": "Use relative path", "order": 0, "type": "boolean", "value": true}, "db_driver": {"description": "Database driver to use.", "label": "Database driver", "order": 1, "passthrough": false, "type": "list", "list": ["SQL Server"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}, "db_servername": {"description": "A valid name to a database server.", "editor": null, "label": "Server name", "order": 2, "type": "string", "value": ""}, "db_databasename": {"description": "The name of the database.", "editor": null, "label": "Database name", "order": 3, "type": "string", "value": ""}, "db_user": {"description": "A valid database user.", "editor": null, "label": "User", "order": 4, "type": "string", "value": ""}, "db_password": {"description": "A valid password for the selected user.", "editor": null, "label": "Password", "order": 5, "type": "string", "value": ""}, "db_connection_string": {"description": "A connection string that will override other settings.", "editor": null, "label": "Connection string", "order": 6, "type": "string", "value": ""}, "datasource_type": {"description": "Type of datasource.", "editor": null, "label": "Datasource type", "order": 7, "passthrough": false, "type": "list", "list": ["File", "Database"], "value": [0], "value_names": []}}]]></parameters>
    <ports>
      <output key="port1" requiresdata="False" scheme="text" type="datasource" uuid="{176f2c10-d6b2-4c8d-80b8-6cf75b2b9eaf}">
        <label>Datasource</label>
        <description>Datasource</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.adaf.functionselectoradafmultiplewithextra" uuid="{a3dfc589-6352-4b9c-9370-45770af67510}" width="50.0" x="1775.0" y="2600.0">
    <label>F(x) ADAFs With Extra Input</label>
    <description>Select and apply functions to ADAFs.</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(C) 2012 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "clean_output": {"description": "Do not copy the input data to the output.", "editor": null, "label": "Clean output", "order": 0, "type": "boolean", "value": true}, "selected_functions": {"description": "Select the functions to apply.", "label": "Select functions", "order": 1, "passthrough": false, "type": "list", "list": ["ExtraADAF", "ExtraADAFs"], "value": [], "value_names": [], "editor": {"buttons": true, "filter": true, "passthrough": true, "selection": "multi", "type": "listview"}}, "same_length_res": {"description": "Use this checkbox if you want to gather all the results generated from an incoming Table into a common output. This requires that the results will all have the same length. An exception will be raised if the lengths of the outgoing results differ.", "editor": null, "label": "Put results in common outputs", "order": 2, "type": "boolean", "value": true}}]]></parameters>
    <ports>
      <input key="port1" requiresdata="True" scheme="text" type="datasource" uuid="{1d6699b0-d19b-4caf-982c-0d12151267d4}">
        <label>Python *.py file</label>
        <description>Python *.py file</description>
      </input>
      <input key="extra" requiresdata="False" scheme="hdf5" type="table" uuid="{bfaf348f-a75b-41fb-995f-ae4c42315dcd}">
        <label>Specification Table</label>
        <description>Specification Table</description>
      </input>
      <input key="port2" requiresdata="False" scheme="hdf5" type="[adaf]" uuid="{757c99d4-900a-4bb5-80eb-5a293aec6514}">
        <label>Input ADAFs</label>
        <description>Input ADAFs</description>
      </input>
      <output key="port3" requiresdata="False" scheme="hdf5" type="[adaf]" uuid="{50df4f59-9eb9-4cc3-a373-d1ae05ce5da7}">
        <label>Output ADAFs with function(s) applied</label>
        <description>Output ADAFs with function(s) applied</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.adaf.functionselectoradafmultiplewithextras" uuid="{b5052de2-e33c-4512-bda8-05e23e82090b}" width="50.0" x="1775.0" y="2700.0">
    <label>F(x) ADAFs With Extras Input</label>
    <description>Select and apply functions to ADAFs.</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(C) 2012 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "clean_output": {"description": "Do not copy the input data to the output.", "editor": null, "label": "Clean output", "order": 0, "type": "boolean", "value": true}, "selected_functions": {"description": "Select the functions to apply.", "label": "Select functions", "order": 1, "passthrough": false, "type": "list", "list": ["ExtraADAF", "ExtraADAFs"], "value": [], "value_names": [], "editor": {"buttons": true, "filter": true, "passthrough": true, "selection": "multi", "type": "listview"}}, "same_length_res": {"description": "Use this checkbox if you want to gather all the results generated from an incoming Table into a common output. This requires that the results will all have the same length. An exception will be raised if the lengths of the outgoing results differ.", "editor": null, "label": "Put results in common outputs", "order": 2, "type": "boolean", "value": true}}]]></parameters>
    <ports>
      <input key="port1" requiresdata="True" scheme="text" type="datasource" uuid="{ab97acca-f6ca-4eae-85ed-604276217812}">
        <label>Python *.py file</label>
        <description>Python *.py file</description>
      </input>
      <input key="extra" requiresdata="False" scheme="hdf5" type="[table]" uuid="{d128f112-0791-4bdd-927e-476fa3e26f5f}">
        <label>Specification Tables</label>
        <description>Specification Tables</description>
      </input>
      <input key="port2" requiresdata="False" scheme="hdf5" type="[adaf]" uuid="{22de2f3d-b62a-4a6c-a43e-4204f0e579cd}">
        <label>Input ADAFs</label>
        <description>Input ADAFs</description>
      </input>
      <output key="port3" requiresdata="False" scheme="hdf5" type="[adaf]" uuid="{1be19e31-f177-449e-98cb-0df34ff076b0}">
        <label>Output ADAFs with function(s) applied</label>
        <description>Output ADAFs with function(s) applied</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.random.randomadafs" uuid="{de94337f-3956-47a6-afd5-885b228f6137}" width="50.0" x="1400.0" y="2175.0">
    <label>Random ADAFs</label>
    <description>Random ADAFs generator.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(c) 2013 Combine AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "meta_entries": {"description": "The number of meta entries to be generated.", "label": "Meta entries", "order": 0, "type": "integer", "value": 100, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "meta_attributes": {"description": "The number of meta attributes to be generated.", "label": "Meta attributes", "order": 1, "type": "integer", "value": 5, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}, "res_entries": {"description": "The number of res entries to be generated.", "label": "Res entries", "order": 2, "type": "integer", "value": 100, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "res_attributes": {"description": "The number of res attributes to be generated.", "label": "Res attributes", "order": 3, "type": "integer", "value": 5, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}, "systems": {"description": "The number of systems to be generated.", "label": "Systems", "order": 4, "type": "integer", "value": 2, "editor": {"max": 100, "min": 0, "step": 1, "type": "spinbox"}}, "rasters": {"description": "The number of rasters to be generated.", "label": "Rasters per system", "order": 5, "type": "integer", "value": 2, "editor": {"max": 100, "min": 0, "step": 1, "type": "spinbox"}}, "signal_entries": {"description": "The number of signal entries to be generated.", "label": "Signals entries per raster", "order": 6, "type": "integer", "value": 100, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "signal_attributes": {"description": "The number of signal attributes to be generated.", "label": "Signal attributes", "order": 7, "type": "integer", "value": 5, "editor": {"max": 100, "min": 0, "step": 1, "type": "spinbox"}}, "signal_length": {"description": "The length of signals to be generated.", "label": "Signal length", "order": 8, "type": "integer", "value": 1000, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}, "length": {"description": "The length of adaf list to be generated.", "label": "ADAF list length", "order": 9, "type": "integer", "value": 5, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}}]]></parameters>
    <ports>
      <output key="port0" requiresdata="False" scheme="hdf5" type="[adaf]" uuid="{e2e1500a-566e-46d4-913d-35cfae2b4f16}">
        <label>Random ADAFs</label>
        <description>Random ADAFs</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.functionselectortablewithextra" uuid="{ecdf8a0b-55f3-4626-be27-f11ff1375d09}" width="50.0" x="1775.0" y="2275.0">
    <label>F(x) Table With Extra Input</label>
    <description>Select and apply functions to a Table.</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(C) 2012 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "clean_output": {"description": "Do not copy the input data to the output.", "editor": null, "label": "Clean output", "order": 0, "type": "boolean", "value": true}, "selected_functions": {"description": "Select the functions to apply.", "label": "Select functions", "order": 1, "passthrough": false, "type": "list", "list": ["ExtraTable"], "value": [], "value_names": [], "editor": {"buttons": true, "filter": true, "passthrough": true, "selection": "multi", "type": "listview"}}}]]></parameters>
    <ports>
      <input key="port1" requiresdata="True" scheme="text" type="datasource" uuid="{86041cdb-b767-40eb-bd66-52157e903a89}">
        <label>Python *.py file</label>
        <description>Python *.py file</description>
      </input>
      <input key="extra" requiresdata="False" scheme="hdf5" type="table" uuid="{c1322b61-f47d-4543-90c9-8949edb1ff91}">
        <label>Specification</label>
        <description>Specification</description>
      </input>
      <input key="port2" requiresdata="False" scheme="hdf5" type="table" uuid="{d789f72c-4408-46cf-baba-0717ba753f0d}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="port3" requiresdata="False" scheme="hdf5" type="table" uuid="{576d119d-9a94-4546-819a-6e1fd871c3eb}">
        <label>Table with function(s) applied</label>
        <description>Table with function(s) applied</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.random.randomtables" uuid="{faa1a7c5-6b18-45b6-8678-b5b864d01e6a}" width="50.0" x="1400.0" y="2050.0">
    <label>Random Tables</label>
    <description>Random Tables generator.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(c) 2013 Combine AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "column_entries": {"description": "The number of column entries to be generated.", "label": "Column entries", "order": 0, "type": "integer", "value": 2, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "column_length": {"description": "The length of columns to be generated.", "label": "Column length", "order": 1, "type": "integer", "value": 2, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}, "length": {"description": "The length of table list to be generated.", "label": "Table list length", "order": 2, "type": "integer", "value": 2, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}}]]></parameters>
    <ports>
      <output key="port0" requiresdata="False" scheme="hdf5" type="[table]" uuid="{6da95b73-d0ea-4da5-8299-f75ca810aadd}">
        <label>Random Tables</label>
        <description>Random Tables</description>
      </output>
    </ports>
  </node>
  <connection type="table" uuid="{0a503185-c3b1-45f4-a36c-2ee91a1ecf63}">
    <source node="{605e2249-aa79-49a5-b218-f530e2b05061}" port="{b2bf503d-b786-49b7-8dc0-f3fb269d5618}"/>
    <destination node="{ecdf8a0b-55f3-4626-be27-f11ff1375d09}" port="{d789f72c-4408-46cf-baba-0717ba753f0d}"/>
  </connection>
  <connection type="[table]" uuid="{0d17364f-1c82-482d-b67b-1757318e8fbb}">
    <source node="{faa1a7c5-6b18-45b6-8678-b5b864d01e6a}" port="{6da95b73-d0ea-4da5-8299-f75ca810aadd}"/>
    <destination node="{78a5dd1f-6ff8-4aae-b059-189b5f58aa05}" port="{686e247d-be09-4865-b4bd-7a8228305e9b}"/>
  </connection>
  <connection type="[adaf]" uuid="{0d81fe93-62eb-4aed-8602-06b3fae4166b}">
    <source node="{de94337f-3956-47a6-afd5-885b228f6137}" port="{e2e1500a-566e-46d4-913d-35cfae2b4f16}"/>
    <destination node="{9658c0a4-856e-4937-99f6-483857950f19}" port="{e83de846-649e-4c08-bd27-cbdaf39acff2}"/>
  </connection>
  <connection type="[table]" uuid="{1e9454e4-0c15-49c5-bae2-e014b94bcf7d}">
    <source node="{faa1a7c5-6b18-45b6-8678-b5b864d01e6a}" port="{6da95b73-d0ea-4da5-8299-f75ca810aadd}"/>
    <destination node="{b5052de2-e33c-4512-bda8-05e23e82090b}" port="{d128f112-0791-4bdd-927e-476fa3e26f5f}"/>
  </connection>
  <connection type="table" uuid="{275f01e7-ca39-4274-b255-a2749f80cc28}">
    <source node="{605e2249-aa79-49a5-b218-f530e2b05061}" port="{b2bf503d-b786-49b7-8dc0-f3fb269d5618}"/>
    <destination node="{a3dfc589-6352-4b9c-9370-45770af67510}" port="{bfaf348f-a75b-41fb-995f-ae4c42315dcd}"/>
  </connection>
  <connection type="datasource" uuid="{29709530-42e4-4264-bb34-db23d2515a02}">
    <source node="{9d579c6c-186d-4a42-9ece-bb8b54439053}" port="{176f2c10-d6b2-4c8d-80b8-6cf75b2b9eaf}"/>
    <destination node="{19c02195-0698-4df0-bfbd-bc20d5358121}" port="{5ee259f7-4039-4375-9e42-1d6ceab132fa}"/>
  </connection>
  <connection type="[table]" uuid="{343973cb-7ab1-44af-a65c-803e009a261d}">
    <source node="{faa1a7c5-6b18-45b6-8678-b5b864d01e6a}" port="{6da95b73-d0ea-4da5-8299-f75ca810aadd}"/>
    <destination node="{605e2249-aa79-49a5-b218-f530e2b05061}" port="{ebcbdf79-09f6-4215-8300-d68a3a3c4d26}"/>
  </connection>
  <connection type="table" uuid="{3fccea0c-c805-419d-9497-8601bac85acb}">
    <source node="{605e2249-aa79-49a5-b218-f530e2b05061}" port="{b2bf503d-b786-49b7-8dc0-f3fb269d5618}"/>
    <destination node="{19c02195-0698-4df0-bfbd-bc20d5358121}" port="{2c74d512-04f0-4d39-b266-9558b859d356}"/>
  </connection>
  <connection type="adaf" uuid="{657b67b4-abbc-443c-80a5-db7acd4db38f}">
    <source node="{9658c0a4-856e-4937-99f6-483857950f19}" port="{03a61876-40d4-4347-8547-9731f7b85b69}"/>
    <destination node="{8fe27400-a16a-4077-92d2-e937c30b8cf3}" port="{e87c66e9-8286-439e-b26b-8e28278f8b00}"/>
  </connection>
  <connection type="[table]" uuid="{8fd60d53-4418-4ab7-bd85-97a758ac88d8}">
    <source node="{faa1a7c5-6b18-45b6-8678-b5b864d01e6a}" port="{6da95b73-d0ea-4da5-8299-f75ca810aadd}"/>
    <destination node="{78a5dd1f-6ff8-4aae-b059-189b5f58aa05}" port="{57224359-375c-44e5-965b-bcc0404b4f71}"/>
  </connection>
  <connection type="datasource" uuid="{908f6933-e5a1-4a85-991e-844bb3dbfb8a}">
    <source node="{9d579c6c-186d-4a42-9ece-bb8b54439053}" port="{176f2c10-d6b2-4c8d-80b8-6cf75b2b9eaf}"/>
    <destination node="{ecdf8a0b-55f3-4626-be27-f11ff1375d09}" port="{86041cdb-b767-40eb-bd66-52157e903a89}"/>
  </connection>
  <connection type="[adaf]" uuid="{a4ba0d59-d0a9-4a05-bba9-6a2d676a1b39}">
    <source node="{de94337f-3956-47a6-afd5-885b228f6137}" port="{e2e1500a-566e-46d4-913d-35cfae2b4f16}"/>
    <destination node="{b5052de2-e33c-4512-bda8-05e23e82090b}" port="{22de2f3d-b62a-4a6c-a43e-4204f0e579cd}"/>
  </connection>
  <connection type="table" uuid="{ac77ae41-71a4-4a79-a031-a3adece510f0}">
    <source node="{605e2249-aa79-49a5-b218-f530e2b05061}" port="{b2bf503d-b786-49b7-8dc0-f3fb269d5618}"/>
    <destination node="{ecdf8a0b-55f3-4626-be27-f11ff1375d09}" port="{c1322b61-f47d-4543-90c9-8949edb1ff91}"/>
  </connection>
  <connection type="[adaf]" uuid="{b2daf97a-0564-460b-a479-9616d0b698df}">
    <source node="{de94337f-3956-47a6-afd5-885b228f6137}" port="{e2e1500a-566e-46d4-913d-35cfae2b4f16}"/>
    <destination node="{a3dfc589-6352-4b9c-9370-45770af67510}" port="{757c99d4-900a-4bb5-80eb-5a293aec6514}"/>
  </connection>
  <connection type="[table]" uuid="{b5fdb634-b627-4667-aad4-cf4bee3c2643}">
    <source node="{faa1a7c5-6b18-45b6-8678-b5b864d01e6a}" port="{6da95b73-d0ea-4da5-8299-f75ca810aadd}"/>
    <destination node="{19c02195-0698-4df0-bfbd-bc20d5358121}" port="{757da7a3-dd8a-4a17-9dfe-03cda01e7a47}"/>
  </connection>
  <connection type="datasource" uuid="{b93e528d-83f8-4821-a910-605c22d0f1d8}">
    <source node="{9d579c6c-186d-4a42-9ece-bb8b54439053}" port="{176f2c10-d6b2-4c8d-80b8-6cf75b2b9eaf}"/>
    <destination node="{8fe27400-a16a-4077-92d2-e937c30b8cf3}" port="{c5fec3c2-7b86-4388-b571-fbf9604fcf6d}"/>
  </connection>
  <connection type="table" uuid="{d628e583-ba8c-40fc-8f82-90acb8f93c93}">
    <source node="{605e2249-aa79-49a5-b218-f530e2b05061}" port="{b2bf503d-b786-49b7-8dc0-f3fb269d5618}"/>
    <destination node="{2638a278-03b1-43e6-88e2-48128492d8be}" port="{6b0f682e-a802-4822-8fee-700e5cd651e1}"/>
  </connection>
  <connection type="datasource" uuid="{d74b25bf-be43-4a7b-ba24-44b92f511146}">
    <source node="{9d579c6c-186d-4a42-9ece-bb8b54439053}" port="{176f2c10-d6b2-4c8d-80b8-6cf75b2b9eaf}"/>
    <destination node="{b5052de2-e33c-4512-bda8-05e23e82090b}" port="{ab97acca-f6ca-4eae-85ed-604276217812}"/>
  </connection>
  <connection type="datasource" uuid="{e92035e0-824c-4b76-b693-7f3830d4f8ba}">
    <source node="{9d579c6c-186d-4a42-9ece-bb8b54439053}" port="{176f2c10-d6b2-4c8d-80b8-6cf75b2b9eaf}"/>
    <destination node="{2638a278-03b1-43e6-88e2-48128492d8be}" port="{59e7016e-941a-4d23-adfd-25eb71cd121f}"/>
  </connection>
  <connection type="datasource" uuid="{edebed41-35e2-45cf-a50e-3a5d00aa7eeb}">
    <source node="{9d579c6c-186d-4a42-9ece-bb8b54439053}" port="{176f2c10-d6b2-4c8d-80b8-6cf75b2b9eaf}"/>
    <destination node="{a3dfc589-6352-4b9c-9370-45770af67510}" port="{1d6699b0-d19b-4caf-982c-0d12151267d4}"/>
  </connection>
  <connection type="datasource" uuid="{f0691d96-d1ec-4eee-8e2d-dff25e3bbe71}">
    <source node="{9d579c6c-186d-4a42-9ece-bb8b54439053}" port="{176f2c10-d6b2-4c8d-80b8-6cf75b2b9eaf}"/>
    <destination node="{78a5dd1f-6ff8-4aae-b059-189b5f58aa05}" port="{9fa4cee6-a36f-4cfb-a7e1-9bdf9f37a7ea}"/>
  </connection>
</flow>
