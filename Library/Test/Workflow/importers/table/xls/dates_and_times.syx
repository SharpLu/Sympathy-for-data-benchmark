<?xml version='1.0' encoding='ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" id="" is_locked="False" uuid="{db264974-cfc0-4a30-8b27-e989c69a8b7e}" width="50.0" x="0.0" y="0.0">
  <label>dates_and_times.syx</label>
  <description></description>
  <author>Unknown</author>
  <copyright></copyright>
  <version>1.0</version>
  <source></source>
  <ports/>
  <aggregation type="json"><![CDATA[null]]></aggregation>
  <parameters type="json"><![CDATA[{"environment": {}}]]></parameters>
  <node height="50.0" id="org.sysess.sympathy.data.table.importtablemultiple" uuid="{0cf90ac8-e37b-4258-936d-55ec79e4330f}" width="50.0" x="2173.5" y="1912.0">
    <label>Tables</label>
    <description>Import datasources as Tables.</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(C) 2013 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"custom_importer_data": {"Auto": {"type": "group", "order": 0, "label": ""}, "type": "group", "order": 1, "label": ""}, "active_importer": {"description": "", "value": "Auto", "label": "", "editor": null, "type": "string", "order": 0}, "fail_strategy": {"description": "", "passthrough": false, "list": ["Exception", "Create Empty Entry", "Skip File"], "value": [0], "label": "Action on import failure", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 2}, "type": "group"}]]></parameters>
    <ports>
      <input key="port1" requiresdata="True" scheme="text" type="datasources" uuid="{65a9b54a-6d09-4ef2-a16c-55ece97a1be9}">
        <label>DataSource</label>
        <description>DataSource</description>
      </input>
      <output key="port1" requiresdata="False" scheme="hdf5" type="tables" uuid="{181589f3-588c-4af5-a056-3ffd036d96ba}">
        <label>TableOutput</label>
        <description>TableOutput</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.importtablemultiple" uuid="{0e804dec-9318-4735-94b0-822d1f2a7f1a}" width="50.0" x="2173.5" y="2012.0">
    <label>Tables</label>
    <description>Import datasources as Tables.</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(C) 2013 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"custom_importer_data": {"Auto": {"type": "group", "order": 0, "label": ""}, "type": "group", "order": 1, "label": ""}, "active_importer": {"description": "", "value": "Auto", "label": "", "editor": null, "type": "string", "order": 0}, "fail_strategy": {"description": "", "passthrough": false, "list": ["Exception", "Create Empty Entry", "Skip File"], "value": [0], "label": "Action on import failure", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 2}, "type": "group"}]]></parameters>
    <ports>
      <input key="port1" requiresdata="True" scheme="text" type="datasources" uuid="{09ceacb2-4de3-41d0-966d-7b2904113f1f}">
        <label>DataSource</label>
        <description>DataSource</description>
      </input>
      <output key="port1" requiresdata="False" scheme="hdf5" type="tables" uuid="{c8e2e19d-be24-479c-95d9-f9f5e8048336}">
        <label>TableOutput</label>
        <description>TableOutput</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.table2tables" uuid="{1a94c08f-aad4-4110-9ce6-2ebcaf7157e5}" width="50.0" x="1948.5" y="2012.0">
    <label>Table to Tables</label>
    <description>Convert a single Table item to a list of Tables.</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(c) 2013 Combine AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{43933530-12fe-4357-8a88-e006ad55c258}">
        <label>Table</label>
        <description>Table</description>
      </input>
      <output key="port1" requiresdata="False" scheme="hdf5" type="tables" uuid="{8ffcd809-7e1a-40ec-95ce-ed0d1b16c844}">
        <label>OutTable</label>
        <description>OutTable</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.importtable" uuid="{3c0bbca2-b330-4fa7-ae71-965e889d8dd7}" width="50.0" x="1848.5" y="2012.0">
    <label>Table</label>
    <description>Data source as a table</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(C) 2013 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"custom_importer_data": {"CSV": {"description_row": {"label": "", "type": "integer", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "value": 1, "description": "The row where the descriptions are located."}, "transposed": {"label": "Transpose input data", "type": "boolean", "editor": null, "value": false, "description": "Transpose the data."}, "data_start_row": {"label": "", "type": "integer", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 1}, "value": 1, "description": "The first row where data is stored."}, "data_end_row": {"label": "", "type": "integer", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 0}, "value": 0, "description": "The last data row."}, "source_coding": {"label": "", "type": "string", "editor": null, "value": null, "description": ""}, "preview_start_row": {"label": "Preview start row", "type": "integer", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 1}, "value": 1, "description": "The first row where data will review from."}, "other_delimiter": {"label": "", "type": "string", "editor": null, "value": " ", "description": "Enter other delimiter than the standard ones."}, "header_row": {"label": "", "type": "integer", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "value": 1, "description": "The row where the headers are located."}, "double_quotations": {"label": "Remove double quotations", "type": "boolean", "editor": null, "value": false, "description": "Remove double quotations in importation."}, "label": "", "headers": {"label": "", "type": "boolean", "editor": null, "value": null, "description": "File has headers."}, "delimiter": {"label": "", "type": "string", "editor": null, "value": null, "description": ""}, "no_preview_rows": {"label": "Number of preview rows", "type": "integer", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "value": 20, "description": "The number of preview rows to show."}, "descriptions": {"label": "", "type": "boolean", "editor": null, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "editor": null, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "editor": null, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"label": "", "type": "integer", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "value": 1, "description": "The row where the units are located."}, "type": "group"}, "type": "group", "HDF5": {"path_list": {"description": "The paths selected to import data from.", "passthrough": false, "list": [], "value": [], "label": "Selected paths", "editor": {"type": "combobox"}, "value_names": [], "type": "list"}, "type": "group", "label": ""}, "Auto": {"type": "group", "order": 0, "label": ""}, "label": "", "SQL": {"join_columns": {"description": "", "passthrough": false, "list": [], "value": [0], "label": "", "editor": null, "value_names": [], "type": "list"}, "table_names": {"description": "", "passthrough": false, "list": [], "value": [0], "label": "", "editor": null, "value_names": [], "type": "list"}, "custom_query": {"label": "", "type": "boolean", "editor": null, "value": false, "description": ""}, "where_comparison_combo": {"description": "", "passthrough": false, "list": ["=", "<", ">", ">=", "<=", "!=", " LIKE ", " GLOB ", " BETWEEN "], "value": [0], "label": "", "editor": null, "value_names": [], "type": "list"}, "where_condition": {"label": "", "type": "string", "editor": null, "value": "", "description": ""}, "where_column_combo": {"description": "", "passthrough": false, "list": [], "value": [0], "label": "", "editor": null, "value_names": [], "type": "list"}, "odbc": {"description": "ODBC method to use.", "passthrough": false, "list": ["default", "pyodbc", "ceODBC"], "value": [0], "label": "ODBC method", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "lineedit_query": {"label": "", "type": "boolean", "editor": null, "value": false, "description": ""}, "label": "", "preview_query": {"label": "", "type": "string", "editor": null, "value": "", "description": ""}, "table_columns": {"description": "", "passthrough": false, "list": [], "value": [0], "label": "", "editor": null, "value_names": [], "type": "list"}, "table_query": {"label": "", "type": "boolean", "editor": null, "value": true, "description": ""}, "where_add_comparison": {"label": "", "type": "string", "editor": null, "value": "", "description": ""}, "join_tables": {"description": "", "passthrough": false, "list": [], "value": [0], "label": "", "editor": null, "value_names": [], "type": "list"}, "type": "group", "query_str": {"label": "", "type": "string", "editor": null, "value": "", "description": ""}, "where_condition_list": {"description": "", "passthrough": false, "list": [], "value": [0], "label": "", "editor": null, "value_names": [], "type": "list"}, "join_column_selection": {"description": "", "passthrough": false, "list": [], "value": [0], "label": "", "editor": null, "value_names": [], "type": "list"}}, "Table": {"type": "group", "label": ""}, "Wice-GPS": {"type": "group", "label": ""}, "XLS": {"description_row": {"label": "", "type": "integer", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "value": 1, "description": "The row where the descriptions are located."}, "transposed": {"label": "Transpose input", "type": "boolean", "editor": null, "value": false, "description": "Transpose the data."}, "data_start_row": {"label": "", "type": "integer", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 1}, "value": 2, "description": "The first row where data is stored."}, "data_end_row": {"label": "", "type": "integer", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 0}, "value": 0, "description": "The last data row."}, "worksheet_name": {"description": "The worksheet to import from.", "passthrough": false, "list": [], "value": [0], "label": "Select worksheet", "editor": {"type": "combobox"}, "value_names": [], "type": "list"}, "preview_start_row": {"label": "Preview start row", "type": "integer", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "value": 1, "description": "The first row where data will review from."}, "header_row": {"label": "", "type": "integer", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "value": 1, "description": "The row where the headers are located."}, "label": "", "headers": {"label": "", "type": "boolean", "editor": null, "value": true, "description": "File has headers."}, "no_preview_rows": {"label": "Number of preview rows", "type": "integer", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "value": 20, "description": "The number of preview rows to show."}, "descriptions": {"label": "", "type": "boolean", "editor": null, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "editor": null, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "editor": null, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"label": "", "type": "integer", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "value": 1, "description": "The row where the units are located."}, "type": "group"}, "order": 1}, "active_importer": {"description": "", "value": "XLS", "label": "", "editor": null, "type": "string", "order": 0}, "fail_strategy": {"description": "", "passthrough": false, "list": ["Exception", "Create Empty Entry"], "value": [0], "label": "Action on import failure", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 2}, "type": "group"}]]></parameters>
    <ports>
      <input key="port1" requiresdata="True" scheme="text" type="datasource" uuid="{c95a1b3f-b234-42ab-a694-473271201455}">
        <label>DataSource</label>
        <description>DataSource</description>
      </input>
      <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{857944aa-cdcb-4615-a7cb-cdcecf1f1376}">
        <label>TableOutput</label>
        <description>TableOutput</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.export.exporttables" uuid="{6255b132-186f-4d4a-9401-00f474a4f82b}" width="50.0" x="2073.5" y="2012.0">
    <label>Export xls</label>
    <description>Export Tables</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(c) 2013 Combine AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"plot": {"description": "Extension of plot file output", "passthrough": false, "list": ["-", "eps", "pdf", "svg", "png"], "value": [0], "label": "Plot output extension", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 4}, "active_exporter": {"description": "", "value": "XLS", "label": "", "editor": null, "type": "string", "order": 0}, "filename": {"description": "Filename without extension.", "value": "exported_dates_and_times", "label": "Filename", "editor": null, "type": "string", "order": 3}, "custom_exporter_data": {"XLSX": {"table_names": {"label": "Use table names as filenames", "type": "boolean", "editor": null, "value": false, "description": "Use table names as filenames"}, "label": "", "header": {"label": "Export header", "type": "boolean", "editor": null, "value": true, "description": "Export column names"}, "to_sheets": {"label": "Export data to sheets", "type": "boolean", "editor": null, "value": false, "description": "Select if incoming Tables are going to to be exported to sheets in a single file or to a single sheet inmultiple files."}, "type": "group", "filename_extension": {"label": "Filename extension", "type": "string", "editor": null, "value": "xlsx", "description": ""}}, "SQLite": {"label": "", "type": "group", "filename_extension": {"label": "Filename extension", "type": "string", "editor": null, "value": "db", "description": ""}}, "HDF5": {"table_names": {"label": "Use table names as filenames", "type": "boolean", "editor": null, "value": false, "description": "Use table names as filenames"}, "label": "", "type": "group", "filename_extension": {"label": "Filename extension", "type": "string", "editor": null, "value": "sydata", "description": ""}}, "XLS": {"header": {"label": "Export header", "type": "boolean", "editor": null, "value": true, "description": "Export column names"}, "label": "", "type": "group", "filename_extension": {"label": "Filename extension", "type": "string", "editor": null, "value": "xls", "description": ""}}, "label": "", "SQL": {"odbc": {"description": "ODBC method to use.", "passthrough": false, "list": ["default", "pyodbc", "ceODBC"], "value": [0], "label": "ODBC method", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "use_nvarchar_size": {"label": "Use nvarchar(size)", "type": "boolean", "editor": null, "value": false, "description": "Use nvarchar(size) instead of nvarchar(MAX)."}, "label": "", "table_name": {"label": "Table name", "type": "string", "editor": null, "value": "", "description": "The table name used when exporting."}, "drop_table": {"label": "Drop table", "type": "boolean", "editor": null, "value": false, "description": "Drop table before adding data."}, "connection_string": {"label": "Connection string", "type": "string", "editor": null, "value": "", "description": "String used by pyodbc to make a connection."}, "type": "group"}, "CSV": {"table_names": {"label": "Use table names as filenames", "type": "boolean", "editor": null, "value": false, "description": "Use table names as filenames"}, "encoding": {"description": "Character encoding determines how different characters are represented when written to disc, sent over a network, etc.", "passthrough": false, "list": ["Western (ASCII)", "Western (ISO 8859-1)", "Western (ISO 8859-15)", "Western (Windows 1252)", "UTF-8"], "value": [4], "label": "Character encoding", "editor": {"type": "combobox"}, "value_names": [], "type": "list"}, "label": "", "header": {"label": "Export header", "type": "boolean", "editor": null, "value": true, "description": "Export column names"}, "type": "group", "filename_extension": {"label": "Filename extension", "type": "string", "editor": null, "value": "csv", "description": ""}}, "type": "group", "order": 1}, "directory": {"description": "Select the directory where to export the files.", "value": ".", "label": "Output directory", "editor": {"type": "dirname"}, "type": "string", "order": 2}, "type": "group"}]]></parameters>
    <ports>
      <input key="port0" requiresdata="False" scheme="hdf5" type="tables" uuid="{97471718-6c9c-4e40-aa2a-503e6b7228de}">
        <label>Tables</label>
        <description>Tables</description>
      </input>
      <output key="port0" requiresdata="False" scheme="text" type="datasources" uuid="{b6c523f0-39a9-401c-8986-467dc574f2eb}">
        <label>Datasources</label>
        <description>Datasources</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.importtable" uuid="{72df1b33-0f46-4ad7-a9c1-b292774cc6ac}" width="50.0" x="1848.5" y="1912.0">
    <label>Table</label>
    <description>Data source as a table</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(C) 2013 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"custom_importer_data": {"CSV": {"description_row": {"label": "", "type": "integer", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "value": 1, "description": "The row where the descriptions are located."}, "transposed": {"label": "Transpose input data", "type": "boolean", "editor": null, "value": false, "description": "Transpose the data."}, "data_start_row": {"label": "", "type": "integer", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 1}, "value": 1, "description": "The first row where data is stored."}, "data_end_row": {"label": "", "type": "integer", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 0}, "value": 0, "description": "The last data row."}, "source_coding": {"label": "", "type": "string", "editor": null, "value": null, "description": ""}, "preview_start_row": {"label": "Preview start row", "type": "integer", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 1}, "value": 1, "description": "The first row where data will review from."}, "other_delimiter": {"label": "", "type": "string", "editor": null, "value": " ", "description": "Enter other delimiter than the standard ones."}, "header_row": {"label": "", "type": "integer", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "value": 1, "description": "The row where the headers are located."}, "double_quotations": {"label": "Remove double quotations", "type": "boolean", "editor": null, "value": false, "description": "Remove double quotations in importation."}, "label": "", "headers": {"label": "", "type": "boolean", "editor": null, "value": null, "description": "File has headers."}, "delimiter": {"label": "", "type": "string", "editor": null, "value": null, "description": ""}, "no_preview_rows": {"label": "Number of preview rows", "type": "integer", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "value": 20, "description": "The number of preview rows to show."}, "descriptions": {"label": "", "type": "boolean", "editor": null, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "editor": null, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "editor": null, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"label": "", "type": "integer", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "value": 1, "description": "The row where the units are located."}, "type": "group"}, "type": "group", "HDF5": {"path_list": {"description": "The paths selected to import data from.", "passthrough": false, "list": [], "value": [], "label": "Selected paths", "editor": {"type": "combobox"}, "value_names": [], "type": "list"}, "type": "group", "label": ""}, "Auto": {"type": "group", "order": 0, "label": ""}, "label": "", "SQL": {"join_columns": {"description": "", "passthrough": false, "list": [], "value": [0], "label": "", "editor": null, "value_names": [], "type": "list"}, "table_names": {"description": "", "passthrough": false, "list": [], "value": [0], "label": "", "editor": null, "value_names": [], "type": "list"}, "custom_query": {"label": "", "type": "boolean", "editor": null, "value": false, "description": ""}, "where_comparison_combo": {"description": "", "passthrough": false, "list": ["=", "<", ">", ">=", "<=", "!=", " LIKE ", " GLOB ", " BETWEEN "], "value": [0], "label": "", "editor": null, "value_names": [], "type": "list"}, "where_condition": {"label": "", "type": "string", "editor": null, "value": "", "description": ""}, "where_column_combo": {"description": "", "passthrough": false, "list": [], "value": [0], "label": "", "editor": null, "value_names": [], "type": "list"}, "odbc": {"description": "ODBC method to use.", "passthrough": false, "list": ["default", "pyodbc", "ceODBC"], "value": [0], "label": "ODBC method", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "lineedit_query": {"label": "", "type": "boolean", "editor": null, "value": false, "description": ""}, "label": "", "preview_query": {"label": "", "type": "string", "editor": null, "value": "", "description": ""}, "table_columns": {"description": "", "passthrough": false, "list": [], "value": [0], "label": "", "editor": null, "value_names": [], "type": "list"}, "table_query": {"label": "", "type": "boolean", "editor": null, "value": true, "description": ""}, "where_add_comparison": {"label": "", "type": "string", "editor": null, "value": "", "description": ""}, "join_tables": {"description": "", "passthrough": false, "list": [], "value": [0], "label": "", "editor": null, "value_names": [], "type": "list"}, "type": "group", "query_str": {"label": "", "type": "string", "editor": null, "value": "", "description": ""}, "where_condition_list": {"description": "", "passthrough": false, "list": [], "value": [0], "label": "", "editor": null, "value_names": [], "type": "list"}, "join_column_selection": {"description": "", "passthrough": false, "list": [], "value": [0], "label": "", "editor": null, "value_names": [], "type": "list"}}, "Table": {"type": "group", "label": ""}, "Wice-GPS": {"type": "group", "label": ""}, "XLS": {"description_row": {"label": "", "type": "integer", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "value": 1, "description": "The row where the descriptions are located."}, "transposed": {"label": "Transpose input", "type": "boolean", "editor": null, "value": false, "description": "Transpose the data."}, "data_start_row": {"label": "", "type": "integer", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 1}, "value": 2, "description": "The first row where data is stored."}, "data_end_row": {"label": "", "type": "integer", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 0}, "value": 0, "description": "The last data row."}, "worksheet_name": {"description": "The worksheet to import from.", "passthrough": false, "list": [], "value": [0], "label": "Select worksheet", "editor": {"type": "combobox"}, "value_names": [], "type": "list"}, "preview_start_row": {"label": "Preview start row", "type": "integer", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "value": 1, "description": "The first row where data will review from."}, "header_row": {"label": "", "type": "integer", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "value": 1, "description": "The row where the headers are located."}, "label": "", "headers": {"label": "", "type": "boolean", "editor": null, "value": true, "description": "File has headers."}, "no_preview_rows": {"label": "Number of preview rows", "type": "integer", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "value": 20, "description": "The number of preview rows to show."}, "descriptions": {"label": "", "type": "boolean", "editor": null, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "editor": null, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "editor": null, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"label": "", "type": "integer", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "value": 1, "description": "The row where the units are located."}, "type": "group"}, "order": 1}, "active_importer": {"description": "", "value": "XLS", "label": "", "editor": null, "type": "string", "order": 0}, "fail_strategy": {"description": "", "passthrough": false, "list": ["Exception", "Create Empty Entry"], "value": [0], "label": "Action on import failure", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 2}, "type": "group"}]]></parameters>
    <ports>
      <input key="port1" requiresdata="True" scheme="text" type="datasource" uuid="{b54f678d-f359-4e38-8252-716e2bb9ff3a}">
        <label>DataSource</label>
        <description>DataSource</description>
      </input>
      <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{3450c92d-deaf-4d7f-b3f3-c6ac12d860a0}">
        <label>TableOutput</label>
        <description>TableOutput</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.export.exporttables" uuid="{a2592a84-12d3-43c2-9eaa-25a208cf9f2a}" width="50.0" x="2073.5" y="1912.0">
    <label>Export xlsx</label>
    <description>Export Tables</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(c) 2013 Combine AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"plot": {"description": "Extension of plot file output", "passthrough": false, "list": ["-", "eps", "pdf", "svg", "png"], "value": [0], "label": "Plot output extension", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 4}, "active_exporter": {"description": "", "value": "XLSX", "label": "", "editor": null, "type": "string", "order": 0}, "filename": {"description": "Filename without extension.", "value": "exported_dates_and_times", "label": "Filename", "editor": null, "type": "string", "order": 3}, "custom_exporter_data": {"XLSX": {"table_names": {"label": "Use table names as filenames", "type": "boolean", "editor": null, "value": false, "description": "Use table names as filenames"}, "label": "", "header": {"label": "Export header", "type": "boolean", "editor": null, "value": true, "description": "Export column names"}, "to_sheets": {"label": "Export data to sheets", "type": "boolean", "editor": null, "value": false, "description": "Select if incoming Tables are going to to be exported to sheets in a single file or to a single sheet inmultiple files."}, "type": "group", "filename_extension": {"label": "Filename extension", "type": "string", "editor": null, "value": "xlsx", "description": ""}}, "SQLite": {"label": "", "type": "group", "filename_extension": {"label": "Filename extension", "type": "string", "editor": null, "value": "db", "description": ""}}, "HDF5": {"table_names": {"label": "Use table names as filenames", "type": "boolean", "editor": null, "value": false, "description": "Use table names as filenames"}, "label": "", "type": "group", "filename_extension": {"label": "Filename extension", "type": "string", "editor": null, "value": "sydata", "description": ""}}, "XLS": {"header": {"label": "Export header", "type": "boolean", "editor": null, "value": true, "description": "Export column names"}, "label": "", "type": "group", "filename_extension": {"label": "Filename extension", "type": "string", "editor": null, "value": "xls", "description": ""}}, "label": "", "SQL": {"odbc": {"description": "ODBC method to use.", "passthrough": false, "list": ["default", "pyodbc", "ceODBC"], "value": [0], "label": "ODBC method", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "use_nvarchar_size": {"label": "Use nvarchar(size)", "type": "boolean", "editor": null, "value": false, "description": "Use nvarchar(size) instead of nvarchar(MAX)."}, "label": "", "table_name": {"label": "Table name", "type": "string", "editor": null, "value": "", "description": "The table name used when exporting."}, "drop_table": {"label": "Drop table", "type": "boolean", "editor": null, "value": false, "description": "Drop table before adding data."}, "connection_string": {"label": "Connection string", "type": "string", "editor": null, "value": "", "description": "String used by pyodbc to make a connection."}, "type": "group"}, "CSV": {"table_names": {"label": "Use table names as filenames", "type": "boolean", "editor": null, "value": false, "description": "Use table names as filenames"}, "encoding": {"description": "Character encoding determines how different characters are represented when written to disc, sent over a network, etc.", "passthrough": false, "list": ["Western (ASCII)", "Western (ISO 8859-1)", "Western (ISO 8859-15)", "Western (Windows 1252)", "UTF-8"], "value": [4], "label": "Character encoding", "editor": {"type": "combobox"}, "value_names": [], "type": "list"}, "label": "", "header": {"label": "Export header", "type": "boolean", "editor": null, "value": true, "description": "Export column names"}, "type": "group", "filename_extension": {"label": "Filename extension", "type": "string", "editor": null, "value": "csv", "description": ""}}, "type": "group", "order": 1}, "directory": {"description": "Select the directory where to export the files.", "value": ".", "label": "Output directory", "editor": {"type": "dirname"}, "type": "string", "order": 2}, "type": "group"}]]></parameters>
    <ports>
      <input key="port0" requiresdata="False" scheme="hdf5" type="tables" uuid="{78f55a16-cc1b-4b0a-bb4f-d1c941221f9c}">
        <label>Tables</label>
        <description>Tables</description>
      </input>
      <output key="port0" requiresdata="False" scheme="text" type="datasources" uuid="{bd6d29b9-f681-41dc-85d6-1e60993e27ca}">
        <label>Datasources</label>
        <description>Datasources</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.datasources.filedatasource" uuid="{b03e2212-aea9-4e79-8e9b-e76f3c8ab443}" width="50.0" x="1748.5" y="2012.0">
    <label>xls</label>
    <description>Select a data source.</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(C) 2013 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"use_relative_path": {"description": "Use the relative path to the file.", "value": true, "label": "Use relative path", "editor": null, "type": "boolean", "order": 0}, "db_password": {"description": "A valid password for the selected user.", "value": "", "label": "Password", "editor": null, "type": "string", "order": 6}, "db_driver": {"description": "Database driver to use.", "passthrough": false, "list": ["SQL Server"], "value": [0], "label": "Database driver", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 2}, "db_connection_string": {"description": "A connection string that will override other settings.", "value": "", "label": "Connection string", "editor": null, "type": "string", "order": 7}, "db_user": {"description": "A valid database user.", "value": "", "label": "User", "editor": null, "type": "string", "order": 5}, "db_databasename": {"description": "The name of the database.", "value": "", "label": "Database name", "editor": null, "type": "string", "order": 4}, "db_servername": {"description": "A valid name to a database server.", "value": "", "label": "Server name", "editor": null, "type": "string", "order": 3}, "filename": {"description": "A filename including path if needed", "value": "data/dates_and_times.xls", "label": "Filename", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "type": "string", "order": 1}, "type": "group", "datasource_type": {"description": "Type of datasource.", "passthrough": false, "list": ["File", "Database"], "value": [0], "label": "Datasource type", "editor": null, "value_names": [], "type": "list", "order": 8}}]]></parameters>
    <ports>
      <output key="port1" requiresdata="False" scheme="text" type="datasource" uuid="{f22651c4-5e0e-42ab-81a3-08ec33792615}">
        <label>DataSource</label>
        <description>DataSource</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.datasources.filedatasource" uuid="{cf9f2fd3-eed9-4fff-b2d8-7bba58573d05}" width="50.0" x="1748.5" y="1912.0">
    <label>xlsx</label>
    <description>Select a data source.</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(C) 2013 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"db_password": {"description": "A valid password for the selected user.", "value": "", "label": "Password", "editor": null, "type": "string", "order": 6}, "filename": {"description": "A filename including path if needed", "value": "data/dates_and_times.xls", "label": "Filename", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "type": "string", "order": 1}, "db_driver": {"description": "Database driver to use.", "passthrough": false, "list": ["SQL Server"], "value": [0], "label": "Database driver", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 2}, "db_connection_string": {"description": "A connection string that will override other settings.", "value": "", "label": "Connection string", "editor": null, "type": "string", "order": 7}, "db_user": {"description": "A valid database user.", "value": "", "label": "User", "editor": null, "type": "string", "order": 5}, "db_databasename": {"description": "The name of the database.", "value": "", "label": "Database name", "editor": null, "type": "string", "order": 4}, "db_servername": {"description": "A valid name to a database server.", "value": "", "label": "Server name", "editor": null, "type": "string", "order": 3}, "use_relative_path": {"description": "Use the relative path to the file.", "value": true, "label": "Use relative path", "editor": null, "type": "boolean", "order": 0}, "type": "group", "datasource_type": {"description": "Type of datasource.", "passthrough": false, "list": ["File", "Database"], "value": [0], "label": "Datasource type", "editor": null, "value_names": [], "type": "list", "order": 8}}]]></parameters>
    <ports>
      <output key="port1" requiresdata="False" scheme="text" type="datasource" uuid="{1cfb3cb1-16d1-4170-b820-d2f62691b007}">
        <label>DataSource</label>
        <description>DataSource</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.table2tables" uuid="{d2013b24-5561-4b83-b71e-122a0697aec9}" width="50.0" x="1948.5" y="1912.0">
    <label>Table to Tables</label>
    <description>Convert a single Table item to a list of Tables.</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(c) 2013 Combine AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{af4fba66-3064-41fa-9afc-0e0e349f67fc}">
        <label>Table</label>
        <description>Table</description>
      </input>
      <output key="port1" requiresdata="False" scheme="hdf5" type="tables" uuid="{27dd2774-8363-4015-a55d-a617c4a76661}">
        <label>OutTable</label>
        <description>OutTable</description>
      </output>
    </ports>
  </node>
  <connection uuid="{159025ed-ec46-48ac-ba20-ccee298b6ef8}">
    <source node="{b03e2212-aea9-4e79-8e9b-e76f3c8ab443}" port="{f22651c4-5e0e-42ab-81a3-08ec33792615}"/>
    <destination node="{3c0bbca2-b330-4fa7-ae71-965e889d8dd7}" port="{c95a1b3f-b234-42ab-a694-473271201455}"/>
  </connection>
  <connection uuid="{1755211d-08db-4ee8-8781-cb72d72ba851}">
    <source node="{d2013b24-5561-4b83-b71e-122a0697aec9}" port="{27dd2774-8363-4015-a55d-a617c4a76661}"/>
    <destination node="{a2592a84-12d3-43c2-9eaa-25a208cf9f2a}" port="{78f55a16-cc1b-4b0a-bb4f-d1c941221f9c}"/>
  </connection>
  <connection uuid="{278442af-b520-44f5-b9b8-e910be046aa4}">
    <source node="{72df1b33-0f46-4ad7-a9c1-b292774cc6ac}" port="{3450c92d-deaf-4d7f-b3f3-c6ac12d860a0}"/>
    <destination node="{d2013b24-5561-4b83-b71e-122a0697aec9}" port="{af4fba66-3064-41fa-9afc-0e0e349f67fc}"/>
  </connection>
  <connection uuid="{2eb8a33f-2f4e-4845-b8f9-0860a2a61045}">
    <source node="{1a94c08f-aad4-4110-9ce6-2ebcaf7157e5}" port="{8ffcd809-7e1a-40ec-95ce-ed0d1b16c844}"/>
    <destination node="{6255b132-186f-4d4a-9401-00f474a4f82b}" port="{97471718-6c9c-4e40-aa2a-503e6b7228de}"/>
  </connection>
  <connection uuid="{a53eb33e-c537-4498-a61d-6119ba3c511b}">
    <source node="{6255b132-186f-4d4a-9401-00f474a4f82b}" port="{b6c523f0-39a9-401c-8986-467dc574f2eb}"/>
    <destination node="{0e804dec-9318-4735-94b0-822d1f2a7f1a}" port="{09ceacb2-4de3-41d0-966d-7b2904113f1f}"/>
  </connection>
  <connection uuid="{c96f410c-feda-41e0-99c0-059b83f271b2}">
    <source node="{3c0bbca2-b330-4fa7-ae71-965e889d8dd7}" port="{857944aa-cdcb-4615-a7cb-cdcecf1f1376}"/>
    <destination node="{1a94c08f-aad4-4110-9ce6-2ebcaf7157e5}" port="{43933530-12fe-4357-8a88-e006ad55c258}"/>
  </connection>
  <connection uuid="{e598341a-ae6f-4426-bf65-c7d74b471a54}">
    <source node="{a2592a84-12d3-43c2-9eaa-25a208cf9f2a}" port="{bd6d29b9-f681-41dc-85d6-1e60993e27ca}"/>
    <destination node="{0cf90ac8-e37b-4258-936d-55ec79e4330f}" port="{65a9b54a-6d09-4ef2-a16c-55ece97a1be9}"/>
  </connection>
  <connection uuid="{f0df471b-ae50-4d9c-a122-7898019743be}">
    <source node="{cf9f2fd3-eed9-4fff-b2d8-7bba58573d05}" port="{1cfb3cb1-16d1-4170-b820-d2f62691b007}"/>
    <destination node="{72df1b33-0f46-4ad7-a9c1-b292774cc6ac}" port="{b54f678d-f359-4e38-8252-716e2bb9ff3a}"/>
  </connection>
</flow>
