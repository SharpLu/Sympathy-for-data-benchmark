<?xml version='1.0' encoding='ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" id="" is_locked="False" uuid="{3a977c6a-f83e-4cdd-9768-5468030ffe28}" width="50.0" x="0.0" y="0.0">
  <label>test_datetime_formats_convert</label>
  <description></description>
  <author>Unknown</author>
  <copyright></copyright>
  <version>1.0</version>
  <source></source>
  <aggregation type="json"><![CDATA[null]]></aggregation>
  <libraries type="json"><![CDATA[[]]]></libraries>
  <pythonpaths type="json"><![CDATA[[]]]></pythonpaths>
  <environment type="json"><![CDATA[{}]]></environment>
  <parameters type="json"><![CDATA[{"environment": {}}]]></parameters>
  <ports/>
  <node height="50.0" id="org.sysess.sympathy.list.itemtolist" uuid="{04e24cc3-de17-4561-bb54-3409e42433d8}" width="50.0" x="2125.0" y="1500.0">
    <label>Item to List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@sysess.org&gt;</author>
    <copyright>(C) 2015 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="item" requiresdata="False" scheme="hdf5" type="table" uuid="{13a50c4c-c497-4d5e-9d94-30a0a13c4562}">
        <label>Input Item</label>
        <description>Input Item</description>
      </input>
      <output key="list" requiresdata="False" scheme="hdf5" type="[table]" uuid="{61a22df6-7e07-4231-af54-1283f731b19e}">
        <label>Item as List</label>
        <description>Item as List</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.functionselectortablemultiplewithextra" uuid="{1d5a6399-2848-4b5a-bf3a-1b371a35e0b0}" width="50.0" x="2725.0" y="1700.0">
    <label>F(x) Tables With Extra Input</label>
    <description>Select and apply functions to Tables.</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(C) 2012 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "clean_output": {"description": "Do not copy the input data to the output.", "editor": null, "label": "Clean output", "order": 0, "type": "boolean", "value": true}, "selected_functions": {"description": "Select the functions to apply.", "label": "Select functions", "order": 1, "passthrough": false, "type": "list", "list": ["TesTDatetimeFormats"], "value": [0], "value_names": ["TesTDatetimeFormats"], "editor": {"buttons": true, "filter": true, "passthrough": true, "selection": "multi", "type": "listview"}}, "same_length_res": {"description": "Use this checkbox if you want to gather all the results generated from an incoming Table into a common output. This requires that the results will all have the same length. An exception will be raised if the lengths of the outgoing results differ.", "editor": null, "label": "Put results in common outputs", "order": 2, "type": "boolean", "value": true}}]]></parameters>
    <ports>
      <input key="port1" requiresdata="True" scheme="text" type="datasource" uuid="{faf870ea-2d6e-4618-b245-f4b4431a906a}">
        <label>Python *.py file</label>
        <description>Python *.py file</description>
      </input>
      <input key="extra" requiresdata="False" scheme="hdf5" type="table" uuid="{7b7d8c67-ea4e-4e0e-9626-04ac95c4e484}">
        <label>Specification</label>
        <description>Specification</description>
      </input>
      <input key="port2" requiresdata="False" scheme="hdf5" type="[table]" uuid="{103120a5-c00e-425b-af21-2fb016e19d2f}">
        <label>Input Tables</label>
        <description>Input Tables</description>
      </input>
      <output key="port3" requiresdata="False" scheme="hdf5" type="[table]" uuid="{820f8d40-bb61-47e8-9191-2b1e65a542a5}">
        <label>Tables with function(s) applied</label>
        <description>Tables with function(s) applied</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.importtable" uuid="{2b9c4292-59c2-4d04-ba31-bf1edff0e621}" width="50.0" x="1850.0" y="1700.0">
    <label>Table</label>
    <description>Data source as a table</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(C) 2013 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "active_importer": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "Auto"}, "custom_importer_data": {"label": "", "order": 1, "type": "group", "Auto": {"label": "", "order": 0, "type": "group"}}, "fail_strategy": {"description": "", "label": "Action on import failure", "order": 2, "passthrough": false, "type": "list", "list": ["Exception", "Create Empty Entry"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}}]]></parameters>
    <ports>
      <input key="port1" requiresdata="True" scheme="text" type="datasource" uuid="{24f78d68-40d3-4279-ab91-34459ae567d0}">
        <label>Datasource</label>
        <description>Datasource</description>
      </input>
      <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{0432718d-89ad-45fb-98ff-ae4ea5b586e4}">
        <label>Imported Table</label>
        <description>Imported Table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.list.itemtolist" uuid="{3c42b9fb-2e0e-4471-b81a-5e876b0ee69c}" width="50.0" x="2125.0" y="2000.0">
    <label>Item to List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@sysess.org&gt;</author>
    <copyright>(C) 2015 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="item" requiresdata="False" scheme="hdf5" type="table" uuid="{9e8b359b-0758-456d-8820-3f88fa63b3d0}">
        <label>Input Item</label>
        <description>Input Item</description>
      </input>
      <output key="list" requiresdata="False" scheme="hdf5" type="[table]" uuid="{db923e06-1df9-4cf3-8f1c-0c3ec23452f6}">
        <label>Item as List</label>
        <description>Item as List</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.importtablemultiple" uuid="{3ead9342-cdfe-4adb-b038-a642adda6893}" width="50.0" x="2425.0" y="1750.0">
    <label>Tables</label>
    <description>Import datasources as Tables.</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(C) 2013 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "active_importer": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "CSV"}, "custom_importer_data": {"label": "", "order": 1, "type": "group", "Auto": {"label": "", "order": 0, "type": "group"}, "CSV": {"label": "", "type": "group", "data_end_row": {"description": "The data rows.", "label": "", "type": "integer", "value": 0, "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "type": "integer", "value": 2, "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}}, "delimiter": {"description": "", "editor": null, "label": "", "type": "string", "value": ";"}, "description_row": {"description": "The row where the descriptions are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "descriptions": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}, "double_quotations": {"description": "Remove double quotations in importation.", "editor": null, "label": "Remove double quotations", "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "editor": null, "label": "", "type": "boolean", "value": true}, "exceptions": {"description": "Select method to handle eventual errors", "label": "How to handle failed importation:", "passthrough": false, "type": "list", "list": ["Raise Exceptions", "Partially read file", "Read file without delimiters"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}, "header_row": {"description": "The row where the headers are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "headers": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "type": "integer", "value": 20, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "other_delimiter": {"description": "Enter other delimiter than the standard ones.", "editor": null, "label": "", "type": "string", "value": " "}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "type": "integer", "value": 1, "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}}, "read_selection": {"description": "Select how to read the data", "label": "", "passthrough": false, "type": "list", "list": ["Read to the end of file", "Read specified number of rows", "Read to specified number of rows from the end"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}, "source_coding": {"description": "", "editor": null, "label": "", "type": "string", "value": "utf_8"}, "transposed": {"description": "Transpose the data.", "editor": null, "label": "Transpose input data", "type": "boolean", "value": false}, "unit_row": {"description": "The row where the units are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "units": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}}, "HDF5": {"label": "", "type": "group", "path_list": {"description": "The paths selected to import data from.", "label": "Selected paths", "passthrough": false, "type": "list", "list": [], "value": [], "value_names": [], "editor": {"type": "combobox"}}}, "SQL": {"label": "", "type": "group", "odbc": {"description": "ODBC method to use.", "label": "ODBC method", "order": 0, "passthrough": false, "type": "list", "list": ["default", "pyodbc", "ceODBC"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}, "custom_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": false}, "join_column_selection": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "join_columns": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "join_tables": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "lineedit_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": false}, "preview_query": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "query_str": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "table_columns": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "table_names": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "table_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": true}, "where_add_comparison": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "where_column_combo": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "where_comparison_combo": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": ["=", "<", ">", ">=", "<=", "!=", " LIKE ", " GLOB ", " BETWEEN "], "value": [0], "value_names": []}, "where_condition": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "where_condition_list": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}}, "Table": {"label": "", "type": "group"}, "XLS": {"label": "", "type": "group", "data_end_row": {"description": "The last data row.", "label": "", "type": "integer", "value": 0, "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "type": "integer", "value": 2, "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}}, "description_row": {"description": "The row where the descriptions are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "descriptions": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "editor": null, "label": "", "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "headers": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "type": "integer", "value": 20, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "read_selection": {"description": "Select how to read the data", "label": "", "passthrough": false, "type": "list", "list": ["Read to the end of file", "Read specified number of rows", "Read to specified number of rows from the end"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}, "transposed": {"description": "Transpose the data.", "editor": null, "label": "Transpose input", "type": "boolean", "value": false}, "unit_row": {"description": "The row where the units are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "units": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}, "worksheet_name": {"description": "The worksheet to import from.", "label": "Select worksheet", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": [], "editor": {"type": "combobox"}}}}, "fail_strategy": {"description": "", "label": "Action on import failure", "order": 2, "passthrough": false, "type": "list", "list": ["Exception", "Create Empty Entry", "Skip File"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}}]]></parameters>
    <ports>
      <input key="port1" requiresdata="True" scheme="text" type="[datasource]" uuid="{92f76561-7883-48ad-a818-2bd15d4d7126}">
        <label>Datasource</label>
        <description>Datasource</description>
      </input>
      <output key="port1" requiresdata="False" scheme="hdf5" type="[table]" uuid="{8e10c80c-3601-4ef7-a4de-c5d9a1238916}">
        <label>Imported Tables</label>
        <description>Imported Tables</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.importtablemultiple" uuid="{48fb5a39-3d94-4977-958f-124b9ce77b8a}" width="50.0" x="2425.0" y="2000.0">
    <label>Tables</label>
    <description>Import datasources as Tables.</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(C) 2013 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "active_importer": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "CSV"}, "custom_importer_data": {"label": "", "order": 1, "type": "group", "Auto": {"label": "", "order": 0, "type": "group"}, "CSV": {"label": "", "type": "group", "data_end_row": {"description": "The data rows.", "label": "", "type": "integer", "value": 0, "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "type": "integer", "value": 2, "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}}, "delimiter": {"description": "", "editor": null, "label": "", "type": "string", "value": ";"}, "description_row": {"description": "The row where the descriptions are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "descriptions": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}, "double_quotations": {"description": "Remove double quotations in importation.", "editor": null, "label": "Remove double quotations", "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "editor": null, "label": "", "type": "boolean", "value": true}, "exceptions": {"description": "Select method to handle eventual errors", "label": "How to handle failed importation:", "passthrough": false, "type": "list", "list": ["Raise Exceptions", "Partially read file", "Read file without delimiters"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}, "header_row": {"description": "The row where the headers are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "headers": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "type": "integer", "value": 20, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "other_delimiter": {"description": "Enter other delimiter than the standard ones.", "editor": null, "label": "", "type": "string", "value": " "}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "type": "integer", "value": 1, "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}}, "read_selection": {"description": "Select how to read the data", "label": "", "passthrough": false, "type": "list", "list": ["Read to the end of file", "Read specified number of rows", "Read to specified number of rows from the end"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}, "source_coding": {"description": "", "editor": null, "label": "", "type": "string", "value": "utf_8"}, "transposed": {"description": "Transpose the data.", "editor": null, "label": "Transpose input data", "type": "boolean", "value": false}, "unit_row": {"description": "The row where the units are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "units": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}}, "HDF5": {"label": "", "type": "group", "path_list": {"description": "The paths selected to import data from.", "label": "Selected paths", "passthrough": false, "type": "list", "list": [], "value": [], "value_names": [], "editor": {"type": "combobox"}}}, "SQL": {"label": "", "type": "group", "odbc": {"description": "ODBC method to use.", "label": "ODBC method", "order": 0, "passthrough": false, "type": "list", "list": ["default", "pyodbc", "ceODBC"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}, "custom_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": false}, "join_column_selection": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "join_columns": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "join_tables": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "lineedit_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": false}, "preview_query": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "query_str": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "table_columns": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "table_names": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "table_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": true}, "where_add_comparison": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "where_column_combo": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "where_comparison_combo": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": ["=", "<", ">", ">=", "<=", "!=", " LIKE ", " GLOB ", " BETWEEN "], "value": [0], "value_names": []}, "where_condition": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "where_condition_list": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}}, "Table": {"label": "", "type": "group"}, "XLS": {"label": "", "type": "group", "data_end_row": {"description": "The last data row.", "label": "", "type": "integer", "value": 0, "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "type": "integer", "value": 2, "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}}, "description_row": {"description": "The row where the descriptions are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "descriptions": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "editor": null, "label": "", "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "headers": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "type": "integer", "value": 20, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "read_selection": {"description": "Select how to read the data", "label": "", "passthrough": false, "type": "list", "list": ["Read to the end of file", "Read specified number of rows", "Read to specified number of rows from the end"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}, "transposed": {"description": "Transpose the data.", "editor": null, "label": "Transpose input", "type": "boolean", "value": false}, "unit_row": {"description": "The row where the units are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "units": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}, "worksheet_name": {"description": "The worksheet to import from.", "label": "Select worksheet", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": [], "editor": {"type": "combobox"}}}}, "fail_strategy": {"description": "", "label": "Action on import failure", "order": 2, "passthrough": false, "type": "list", "list": ["Exception", "Create Empty Entry", "Skip File"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}}]]></parameters>
    <ports>
      <input key="port1" requiresdata="True" scheme="text" type="[datasource]" uuid="{5c64f819-767a-465d-97c2-a53655ff62f8}">
        <label>Datasource</label>
        <description>Datasource</description>
      </input>
      <output key="port1" requiresdata="False" scheme="hdf5" type="[table]" uuid="{e1ee3952-66d6-4983-a0e4-5fc531768e7c}">
        <label>Imported Tables</label>
        <description>Imported Tables</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.datasources.filedatasource" uuid="{4e115457-69d4-40aa-a7b9-c2c3fa5ee788}" width="50.0" x="1700.0" y="1950.0">
    <label>Datasource</label>
    <description>Select a data source.</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(C) 2013 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "use_relative_path": {"description": "Use the relative path to the file.", "editor": null, "label": "Use relative path", "order": 0, "type": "boolean", "value": true}, "filename": {"description": "A filename including path if needed", "label": "Filename", "order": 1, "type": "string", "value": "test_datetime_formats.csv", "editor": {"type": "filename", "filter": ["Any files (*)"]}}, "db_driver": {"description": "Database driver to use.", "label": "Database driver", "order": 2, "passthrough": false, "type": "list", "list": ["SQL Server"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}, "db_servername": {"description": "A valid name to a database server.", "editor": null, "label": "Server name", "order": 3, "type": "string", "value": ""}, "db_databasename": {"description": "The name of the database.", "editor": null, "label": "Database name", "order": 4, "type": "string", "value": ""}, "db_user": {"description": "A valid database user.", "editor": null, "label": "User", "order": 5, "type": "string", "value": ""}, "db_password": {"description": "A valid password for the selected user.", "editor": null, "label": "Password", "order": 6, "type": "string", "value": ""}, "db_connection_string": {"description": "A connection string that will override other settings.", "editor": null, "label": "Connection string", "order": 7, "type": "string", "value": ""}, "datasource_type": {"description": "Type of datasource.", "editor": null, "label": "Datasource type", "order": 8, "passthrough": false, "type": "list", "list": ["File", "Database"], "value": [0], "value_names": []}}]]></parameters>
    <ports>
      <output key="port1" requiresdata="False" scheme="text" type="datasource" uuid="{d9647d45-85d2-4231-a6ef-262dcedf638c}">
        <label>Datasource</label>
        <description>Datasource</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.datasources.filedatasource" uuid="{51b2bfaa-3a44-42b7-86b5-bcfdb45003f8}" width="50.0" x="2575.0" y="1650.0">
    <label>Datasource</label>
    <description>Select a data source.</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(C) 2013 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "use_relative_path": {"description": "Use the relative path to the file.", "editor": null, "label": "Use relative path", "order": 0, "type": "boolean", "value": true}, "filename": {"description": "A filename including path if needed", "label": "Filename", "order": 1, "type": "string", "value": "test_datatime_functions.py", "editor": {"type": "filename", "filter": ["Any files (*)"]}}, "db_driver": {"description": "Database driver to use.", "label": "Database driver", "order": 2, "passthrough": false, "type": "list", "list": ["SQL Server"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}, "db_servername": {"description": "A valid name to a database server.", "editor": null, "label": "Server name", "order": 3, "type": "string", "value": ""}, "db_databasename": {"description": "The name of the database.", "editor": null, "label": "Database name", "order": 4, "type": "string", "value": ""}, "db_user": {"description": "A valid database user.", "editor": null, "label": "User", "order": 5, "type": "string", "value": ""}, "db_password": {"description": "A valid password for the selected user.", "editor": null, "label": "Password", "order": 6, "type": "string", "value": ""}, "db_connection_string": {"description": "A connection string that will override other settings.", "editor": null, "label": "Connection string", "order": 7, "type": "string", "value": ""}, "datasource_type": {"description": "Type of datasource.", "editor": null, "label": "Datasource type", "order": 8, "passthrough": false, "type": "list", "list": ["File", "Database"], "value": [0], "value_names": []}}]]></parameters>
    <ports>
      <output key="port1" requiresdata="False" scheme="text" type="datasource" uuid="{b502d295-bb4f-4f8a-b5b9-277b5c92d14e}">
        <label>Datasource</label>
        <description>Datasource</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.functionselectortablemultiplewithextra" uuid="{6c04a001-e69c-4b23-975c-bea0493aa3bf}" width="50.0" x="2725.0" y="1450.0">
    <label>F(x) Tables With Extra Input</label>
    <description>Select and apply functions to Tables.</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(C) 2012 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "clean_output": {"description": "Do not copy the input data to the output.", "editor": null, "label": "Clean output", "order": 0, "type": "boolean", "value": true}, "selected_functions": {"description": "Select the functions to apply.", "label": "Select functions", "order": 1, "passthrough": false, "type": "list", "list": ["TesTDatetimeFormats"], "value": [0], "value_names": ["TesTDatetimeFormats"], "editor": {"buttons": true, "filter": true, "passthrough": true, "selection": "multi", "type": "listview"}}, "same_length_res": {"description": "Use this checkbox if you want to gather all the results generated from an incoming Table into a common output. This requires that the results will all have the same length. An exception will be raised if the lengths of the outgoing results differ.", "editor": null, "label": "Put results in common outputs", "order": 2, "type": "boolean", "value": true}}]]></parameters>
    <ports>
      <input key="port1" requiresdata="True" scheme="text" type="datasource" uuid="{57a73982-a0fd-4853-8735-e82a21204dbe}">
        <label>Python *.py file</label>
        <description>Python *.py file</description>
      </input>
      <input key="extra" requiresdata="False" scheme="hdf5" type="table" uuid="{4429c66a-9793-4557-b466-fc29a7557189}">
        <label>Specification</label>
        <description>Specification</description>
      </input>
      <input key="port2" requiresdata="False" scheme="hdf5" type="[table]" uuid="{671373eb-3b14-40b5-b08d-06deb7c33bfc}">
        <label>Input Tables</label>
        <description>Input Tables</description>
      </input>
      <output key="port3" requiresdata="False" scheme="hdf5" type="[table]" uuid="{b6023f8a-0ff1-46e0-bea8-154e39ba7a22}">
        <label>Tables with function(s) applied</label>
        <description>Tables with function(s) applied</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.importtable" uuid="{80ec1d4f-19ee-4ac6-8fa8-46888041eb30}" width="50.0" x="1850.0" y="1450.0">
    <label>Table</label>
    <description>Data source as a table</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(C) 2013 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "active_importer": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "Auto"}, "custom_importer_data": {"label": "", "order": 1, "type": "group", "Auto": {"label": "", "order": 0, "type": "group"}}, "fail_strategy": {"description": "", "label": "Action on import failure", "order": 2, "passthrough": false, "type": "list", "list": ["Exception", "Create Empty Entry"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}}]]></parameters>
    <ports>
      <input key="port1" requiresdata="True" scheme="text" type="datasource" uuid="{2baa6b27-a143-45a8-b7f6-c8bd631d441d}">
        <label>Datasource</label>
        <description>Datasource</description>
      </input>
      <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{4a7dac90-74f2-487b-aa0c-093262a57689}">
        <label>Imported Table</label>
        <description>Imported Table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.list.itemtolist" uuid="{819df186-4bd6-4b8a-a5a6-ee2ce34b95f1}" width="50.0" x="2125.0" y="1750.0">
    <label>Item to List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@sysess.org&gt;</author>
    <copyright>(C) 2015 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="item" requiresdata="False" scheme="hdf5" type="table" uuid="{dc4673c2-60f9-423b-bbc2-f47c2ee9fed5}">
        <label>Input Item</label>
        <description>Input Item</description>
      </input>
      <output key="list" requiresdata="False" scheme="hdf5" type="[table]" uuid="{db6379c9-ad66-4f07-8092-b3b73029e8aa}">
        <label>Item as List</label>
        <description>Item as List</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.export.exporttables" uuid="{8434fb1e-3bda-4361-ac9c-7ddfccb9dea9}" width="50.0" x="2275.0" y="1750.0">
    <label>Export Tables</label>
    <description>Export Tables</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(c) 2013 Combine AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "active_exporter": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "CSV"}, "custom_exporter_data": {"label": "", "order": 1, "type": "group", "CSV": {"label": "", "type": "group", "encoding": {"description": "Character encoding determines how different characters are represented when written to disc, sent over a network, etc.", "label": "Character encoding", "passthrough": false, "type": "list", "list": ["Western (ASCII)", "Western (ISO 8859-1)", "Western (ISO 8859-15)", "Western (Windows 1252)", "UTF-8"], "value": [4], "value_names": [], "editor": {"type": "combobox"}}, "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "csv"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}}, "HDF5": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "sydata"}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}}, "SQL": {"label": "", "type": "group", "odbc": {"description": "ODBC method to use.", "label": "ODBC method", "order": 0, "passthrough": false, "type": "list", "list": ["default", "pyodbc", "ceODBC"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}, "connection_string": {"description": "String used by pyodbc to make a connection.", "editor": null, "label": "Connection string", "type": "string", "value": ""}, "drop_table": {"description": "Drop table before adding data.", "editor": null, "label": "Drop table", "type": "boolean", "value": false}, "table_name": {"description": "The table name used when exporting.", "editor": null, "label": "Table name", "type": "string", "value": ""}, "use_nvarchar_size": {"description": "Use nvarchar(size) instead of nvarchar(MAX).", "editor": null, "label": "Use nvarchar(size)", "type": "boolean", "value": false}}, "SQLite": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "db"}}, "XLS": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "xls"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}}, "XLSX": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "xlsx"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}, "to_plot": {"description": "Select if incoming Tables with plot data should be embedded in the output file.", "editor": null, "label": "Embed plot in output file(s)", "type": "boolean", "value": true}, "to_sheets": {"description": "Select if incoming Tables are going to to be exported to sheets in a single file or to a single sheet inmultiple files.", "editor": null, "label": "Export data to sheets", "type": "boolean", "value": false}}}, "directory": {"description": "Select the directory where to export the files.", "label": "Output directory", "order": 2, "type": "string", "value": ".", "editor": {"type": "dirname"}}, "filename": {"description": "Filename without extension.", "editor": null, "label": "Filename", "order": 3, "type": "string", "value": "test_datetime_formats_3"}, "plot": {"description": "If there is a plot attribute in the input tables(s), create a separate file with the plot.", "label": "Output separate plot file with the following extension:", "order": 4, "passthrough": false, "type": "list", "list": ["-", "eps", "pdf", "svg", "png"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}}]]></parameters>
    <ports>
      <input key="port0" requiresdata="False" scheme="hdf5" type="[table]" uuid="{c5373a4b-b28c-4a03-b461-794194dfb966}">
        <label>Tables to be exported</label>
        <description>Tables to be exported</description>
      </input>
      <output key="port0" requiresdata="False" scheme="text" type="[datasource]" uuid="{977ee9e4-c0ea-4631-afa8-a84d6179f2b2}">
        <label>Datasources of exported files</label>
        <description>Datasources of exported files</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.datasources.filedatasource" uuid="{86d00a2d-d551-464f-beb0-a84aa4ec69ee}" width="50.0" x="2575.0" y="1400.0">
    <label>Datasource</label>
    <description>Select a data source.</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(C) 2013 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "use_relative_path": {"description": "Use the relative path to the file.", "editor": null, "label": "Use relative path", "order": 0, "type": "boolean", "value": true}, "filename": {"description": "A filename including path if needed", "label": "Filename", "order": 1, "type": "string", "value": "test_datatime_functions.py", "editor": {"type": "filename", "filter": ["Any files (*)"]}}, "db_driver": {"description": "Database driver to use.", "label": "Database driver", "order": 2, "passthrough": false, "type": "list", "list": ["SQL Server"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}, "db_servername": {"description": "A valid name to a database server.", "editor": null, "label": "Server name", "order": 3, "type": "string", "value": ""}, "db_databasename": {"description": "The name of the database.", "editor": null, "label": "Database name", "order": 4, "type": "string", "value": ""}, "db_user": {"description": "A valid database user.", "editor": null, "label": "User", "order": 5, "type": "string", "value": ""}, "db_password": {"description": "A valid password for the selected user.", "editor": null, "label": "Password", "order": 6, "type": "string", "value": ""}, "db_connection_string": {"description": "A connection string that will override other settings.", "editor": null, "label": "Connection string", "order": 7, "type": "string", "value": ""}, "datasource_type": {"description": "Type of datasource.", "editor": null, "label": "Datasource type", "order": 8, "passthrough": false, "type": "list", "list": ["File", "Database"], "value": [0], "value_names": []}}]]></parameters>
    <ports>
      <output key="port1" requiresdata="False" scheme="text" type="datasource" uuid="{5e563312-4e81-438b-a30c-ac30ce98059c}">
        <label>Datasource</label>
        <description>Datasource</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.converttablescolumns" uuid="{876e4e71-ab58-4e62-b6de-fff6f467621b}" width="50.0" x="2575.0" y="1750.0">
    <label>Convert columns in Tables</label>
    <description>Convert selected columns in Tables to new data types.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@sysess.org&gt;</author>
    <copyright>(c) 2013 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "in_column_list": {"description": "Select the columns to use", "label": "Select columns", "order": 0, "passthrough": false, "type": "list", "list": ["%Y-%m-%d", "%Y-%m-%d %H", "%Y-%m-%d %H+00:00", "%Y-%m-%d %H:%M", "%Y-%m-%d %H:%M+00:00", "%Y-%m-%d %H:%M:%S", "%Y-%m-%d %H:%M:%S+00:00", "%Y-%m-%d %H:%M:%S.%f", "%Y-%m-%d %H:%M:%S.%f+00:00", "%Y-%m-%d %H:%M:%S.%fZ", "%Y-%m-%d %H:%M:%SZ", "%Y-%m-%d %H:%MZ", "%Y-%m-%d %HZ", "%Y-%m-%dT%H", "%Y-%m-%dT%H+00:00", "%Y-%m-%dT%H:%M", "%Y-%m-%dT%H:%M+00:00", "%Y-%m-%dT%H:%M:%S", "%Y-%m-%dT%H:%M:%S+00:00", "%Y-%m-%dT%H:%M:%S.%f", "%Y-%m-%dT%H:%M:%S.%f+00:00", "%Y-%m-%dT%H:%M:%S.%fZ", "%Y-%m-%dT%H:%M:%SZ", "%Y-%m-%dT%H:%MZ", "%Y-%m-%dT%HZ"], "value": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "value_names": ["%Y-%m-%d", "%Y-%m-%d %H", "%Y-%m-%d %H+00:00", "%Y-%m-%d %H:%M", "%Y-%m-%d %H:%M+00:00", "%Y-%m-%d %H:%M:%S", "%Y-%m-%d %H:%M:%S+00:00", "%Y-%m-%d %H:%M:%S.%f", "%Y-%m-%d %H:%M:%S.%f+00:00", "%Y-%m-%d %H:%M:%S.%fZ", "%Y-%m-%d %H:%M:%SZ", "%Y-%m-%d %H:%MZ", "%Y-%m-%d %HZ", "%Y-%m-%dT%H", "%Y-%m-%dT%H+00:00", "%Y-%m-%dT%H:%M", "%Y-%m-%dT%H:%M+00:00", "%Y-%m-%dT%H:%M:%S", "%Y-%m-%dT%H:%M:%S+00:00", "%Y-%m-%dT%H:%M:%S.%f", "%Y-%m-%dT%H:%M:%S.%f+00:00", "%Y-%m-%dT%H:%M:%S.%fZ", "%Y-%m-%dT%H:%M:%SZ", "%Y-%m-%dT%H:%MZ", "%Y-%m-%dT%HZ"], "editor": {"buttons": true, "invertbutton": true, "selection": "multi", "type": "listview"}}, "in_type_list": {"description": "Select the type to use", "label": "Select type", "order": 1, "passthrough": false, "type": "list", "list": ["bool", "datetime (UTC)", "datetime (naive)", "float", "int", "str", "unicode"], "value": [2], "value_names": ["datetime (naive)"], "editor": {"selection": "single", "type": "listview"}}, "out_column_list": {"description": "Selected columns to convert", "label": "Convert columns", "order": 2, "passthrough": false, "type": "list", "list": [], "value": ["%Y-%m-%d", "%Y-%m-%d %H", "%Y-%m-%d %H+00:00", "%Y-%m-%d %H:%M", "%Y-%m-%d %H:%M+00:00", "%Y-%m-%d %H:%M:%S", "%Y-%m-%d %H:%M:%S+00:00", "%Y-%m-%d %H:%M:%S.%f", "%Y-%m-%d %H:%M:%S.%f+00:00", "%Y-%m-%d %H:%M:%S.%fZ", "%Y-%m-%d %H:%M:%SZ", "%Y-%m-%d %H:%MZ", "%Y-%m-%d %HZ", "%Y-%m-%dT%H", "%Y-%m-%dT%H+00:00", "%Y-%m-%dT%H:%M", "%Y-%m-%dT%H:%M+00:00", "%Y-%m-%dT%H:%M:%S", "%Y-%m-%dT%H:%M:%S+00:00", "%Y-%m-%dT%H:%M:%S.%f", "%Y-%m-%dT%H:%M:%S.%f+00:00", "%Y-%m-%dT%H:%M:%S.%fZ", "%Y-%m-%dT%H:%M:%SZ", "%Y-%m-%dT%H:%MZ", "%Y-%m-%dT%HZ"], "value_names": [], "editor": {"selection": "multi", "type": "listview"}}, "out_type_list": {"description": "Selected types to use", "label": "Convert types", "order": 3, "passthrough": false, "type": "list", "list": [], "value": ["Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn"], "value_names": [], "editor": {"selection": "multi", "type": "listview"}}}]]></parameters>
    <ports>
      <input key="port1" requiresdata="False" scheme="hdf5" type="[table]" uuid="{d3dc35ae-bf00-44e8-a392-034792e43fe2}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="port2" requiresdata="False" scheme="hdf5" type="[table]" uuid="{2c477026-9fae-45dc-b5c8-6c7d56ad2543}">
        <label>Tables with converted columns</label>
        <description>Tables with converted columns</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.converttablescolumns" uuid="{8775779a-04e6-41ae-9301-2562dde98359}" width="50.0" x="2575.0" y="2000.0">
    <label>Convert columns in Tables</label>
    <description>Convert selected columns in Tables to new data types.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@sysess.org&gt;</author>
    <copyright>(c) 2013 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "in_column_list": {"description": "Select the columns to use", "label": "Select columns", "order": 0, "passthrough": false, "type": "list", "list": ["%Y-%m-%d", "%Y-%m-%d %H", "%Y-%m-%d %H+00:00", "%Y-%m-%d %H:%M", "%Y-%m-%d %H:%M+00:00", "%Y-%m-%d %H:%M:%S", "%Y-%m-%d %H:%M:%S+00:00", "%Y-%m-%d %H:%M:%S.%f", "%Y-%m-%d %H:%M:%S.%f+00:00", "%Y-%m-%d %H:%M:%S.%fZ", "%Y-%m-%d %H:%M:%SZ", "%Y-%m-%d %H:%MZ", "%Y-%m-%d %HZ", "%Y-%m-%dT%H", "%Y-%m-%dT%H+00:00", "%Y-%m-%dT%H:%M", "%Y-%m-%dT%H:%M+00:00", "%Y-%m-%dT%H:%M:%S", "%Y-%m-%dT%H:%M:%S+00:00", "%Y-%m-%dT%H:%M:%S.%f", "%Y-%m-%dT%H:%M:%S.%f+00:00", "%Y-%m-%dT%H:%M:%S.%fZ", "%Y-%m-%dT%H:%M:%SZ", "%Y-%m-%dT%H:%MZ", "%Y-%m-%dT%HZ"], "value": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "value_names": ["%Y-%m-%d", "%Y-%m-%d %H", "%Y-%m-%d %H+00:00", "%Y-%m-%d %H:%M", "%Y-%m-%d %H:%M+00:00", "%Y-%m-%d %H:%M:%S", "%Y-%m-%d %H:%M:%S+00:00", "%Y-%m-%d %H:%M:%S.%f", "%Y-%m-%d %H:%M:%S.%f+00:00", "%Y-%m-%d %H:%M:%S.%fZ", "%Y-%m-%d %H:%M:%SZ", "%Y-%m-%d %H:%MZ", "%Y-%m-%d %HZ", "%Y-%m-%dT%H", "%Y-%m-%dT%H+00:00", "%Y-%m-%dT%H:%M", "%Y-%m-%dT%H:%M+00:00", "%Y-%m-%dT%H:%M:%S", "%Y-%m-%dT%H:%M:%S+00:00", "%Y-%m-%dT%H:%M:%S.%f", "%Y-%m-%dT%H:%M:%S.%f+00:00", "%Y-%m-%dT%H:%M:%S.%fZ", "%Y-%m-%dT%H:%M:%SZ", "%Y-%m-%dT%H:%MZ", "%Y-%m-%dT%HZ"], "editor": {"buttons": true, "invertbutton": true, "selection": "multi", "type": "listview"}}, "in_type_list": {"description": "Select the type to use", "label": "Select type", "order": 1, "passthrough": false, "type": "list", "list": ["str", "bool", "datetime", "float", "int", "unicode"], "value": [2], "value_names": ["datetime"], "editor": {"selection": "single", "type": "listview"}}, "out_column_list": {"description": "Selected columns to convert", "label": "Convert columns", "order": 2, "passthrough": false, "type": "list", "list": [], "value": ["%Y-%m-%d", "%Y-%m-%d %H", "%Y-%m-%d %H+00:00", "%Y-%m-%d %H:%M", "%Y-%m-%d %H:%M+00:00", "%Y-%m-%d %H:%M:%S", "%Y-%m-%d %H:%M:%S+00:00", "%Y-%m-%d %H:%M:%S.%f", "%Y-%m-%d %H:%M:%S.%f+00:00", "%Y-%m-%d %H:%M:%S.%fZ", "%Y-%m-%d %H:%M:%SZ", "%Y-%m-%d %H:%MZ", "%Y-%m-%d %HZ", "%Y-%m-%dT%H", "%Y-%m-%dT%H+00:00", "%Y-%m-%dT%H:%M", "%Y-%m-%dT%H:%M+00:00", "%Y-%m-%dT%H:%M:%S", "%Y-%m-%dT%H:%M:%S+00:00", "%Y-%m-%dT%H:%M:%S.%f", "%Y-%m-%dT%H:%M:%S.%f+00:00", "%Y-%m-%dT%H:%M:%S.%fZ", "%Y-%m-%dT%H:%M:%SZ", "%Y-%m-%dT%H:%MZ", "%Y-%m-%dT%HZ"], "value_names": [], "editor": {"selection": "multi", "type": "listview"}}, "out_type_list": {"description": "Selected types to use", "label": "Convert types", "order": 3, "passthrough": false, "type": "list", "list": [], "value": ["datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime"], "value_names": [], "editor": {"selection": "multi", "type": "listview"}}}]]></parameters>
    <ports>
      <input key="port1" requiresdata="False" scheme="hdf5" type="[table]" uuid="{843cd2ff-7a0f-484c-81d5-af762495930e}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="port2" requiresdata="False" scheme="hdf5" type="[table]" uuid="{472c5016-6077-471c-8a3f-4d185f903e44}">
        <label>Tables with converted columns</label>
        <description>Tables with converted columns</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.converttablescolumns" uuid="{8b032481-1691-4473-b8f1-8a7905586ddf}" width="50.0" x="2575.0" y="1500.0">
    <label>Convert columns in Tables</label>
    <description>Convert selected columns in Tables to new data types.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@sysess.org&gt;</author>
    <copyright>(c) 2013 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "in_column_list": {"description": "Select the columns to use", "label": "Select columns", "order": 0, "passthrough": false, "type": "list", "list": ["%Y-%m-%d", "%Y-%m-%d %H", "%Y-%m-%d %H+00:00", "%Y-%m-%d %H:%M", "%Y-%m-%d %H:%M+00:00", "%Y-%m-%d %H:%M:%S", "%Y-%m-%d %H:%M:%S+00:00", "%Y-%m-%d %H:%M:%S.%f", "%Y-%m-%d %H:%M:%S.%f+00:00", "%Y-%m-%d %H:%M:%S.%fZ", "%Y-%m-%d %H:%M:%SZ", "%Y-%m-%d %H:%MZ", "%Y-%m-%d %HZ", "%Y-%m-%dT%H", "%Y-%m-%dT%H+00:00", "%Y-%m-%dT%H:%M", "%Y-%m-%dT%H:%M+00:00", "%Y-%m-%dT%H:%M:%S", "%Y-%m-%dT%H:%M:%S+00:00", "%Y-%m-%dT%H:%M:%S.%f", "%Y-%m-%dT%H:%M:%S.%f+00:00", "%Y-%m-%dT%H:%M:%S.%fZ", "%Y-%m-%dT%H:%M:%SZ", "%Y-%m-%dT%H:%MZ", "%Y-%m-%dT%HZ"], "value": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "value_names": ["%Y-%m-%d", "%Y-%m-%d %H", "%Y-%m-%d %H+00:00", "%Y-%m-%d %H:%M", "%Y-%m-%d %H:%M+00:00", "%Y-%m-%d %H:%M:%S", "%Y-%m-%d %H:%M:%S+00:00", "%Y-%m-%d %H:%M:%S.%f", "%Y-%m-%d %H:%M:%S.%f+00:00", "%Y-%m-%d %H:%M:%S.%fZ", "%Y-%m-%d %H:%M:%SZ", "%Y-%m-%d %H:%MZ", "%Y-%m-%d %HZ", "%Y-%m-%dT%H", "%Y-%m-%dT%H+00:00", "%Y-%m-%dT%H:%M", "%Y-%m-%dT%H:%M+00:00", "%Y-%m-%dT%H:%M:%S", "%Y-%m-%dT%H:%M:%S+00:00", "%Y-%m-%dT%H:%M:%S.%f", "%Y-%m-%dT%H:%M:%S.%f+00:00", "%Y-%m-%dT%H:%M:%S.%fZ", "%Y-%m-%dT%H:%M:%SZ", "%Y-%m-%dT%H:%MZ", "%Y-%m-%dT%HZ"], "editor": {"buttons": true, "invertbutton": true, "selection": "multi", "type": "listview"}}, "in_type_list": {"description": "Select the type to use", "label": "Select type", "order": 1, "passthrough": false, "type": "list", "list": ["bool", "datetime (UTC)", "datetime (naive)", "float", "int", "str", "unicode"], "value": [1], "value_names": ["datetime (UTC)"], "editor": {"selection": "single", "type": "listview"}}, "out_column_list": {"description": "Selected columns to convert", "label": "Convert columns", "order": 2, "passthrough": false, "type": "list", "list": [], "value": ["%Y-%m-%d", "%Y-%m-%d %H", "%Y-%m-%d %H+00:00", "%Y-%m-%d %H:%M", "%Y-%m-%d %H:%M+00:00", "%Y-%m-%d %H:%M:%S", "%Y-%m-%d %H:%M:%S+00:00", "%Y-%m-%d %H:%M:%S.%f", "%Y-%m-%d %H:%M:%S.%f+00:00", "%Y-%m-%d %H:%M:%S.%fZ", "%Y-%m-%d %H:%M:%SZ", "%Y-%m-%d %H:%MZ", "%Y-%m-%d %HZ", "%Y-%m-%dT%H", "%Y-%m-%dT%H+00:00", "%Y-%m-%dT%H:%M", "%Y-%m-%dT%H:%M+00:00", "%Y-%m-%dT%H:%M:%S", "%Y-%m-%dT%H:%M:%S+00:00", "%Y-%m-%dT%H:%M:%S.%f", "%Y-%m-%dT%H:%M:%S.%f+00:00", "%Y-%m-%dT%H:%M:%S.%fZ", "%Y-%m-%dT%H:%M:%SZ", "%Y-%m-%dT%H:%MZ", "%Y-%m-%dT%HZ"], "value_names": [], "editor": {"selection": "multi", "type": "listview"}}, "out_type_list": {"description": "Selected types to use", "label": "Convert types", "order": 3, "passthrough": false, "type": "list", "list": [], "value": ["Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu"], "value_names": [], "editor": {"selection": "multi", "type": "listview"}}}]]></parameters>
    <ports>
      <input key="port1" requiresdata="False" scheme="hdf5" type="[table]" uuid="{f063365a-694a-4334-afb8-6ce7bfbec658}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="port2" requiresdata="False" scheme="hdf5" type="[table]" uuid="{b1237382-d93c-4ca3-ab49-79059237cec9}">
        <label>Tables with converted columns</label>
        <description>Tables with converted columns</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.functionselectortablemultiplewithextra" uuid="{8d7111a4-2a0f-462e-b651-9ddc4e8607d7}" width="50.0" x="2725.0" y="1950.0">
    <label>F(x) Tables With Extra Input</label>
    <description>Select and apply functions to Tables.</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(C) 2012 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "clean_output": {"description": "Do not copy the input data to the output.", "editor": null, "label": "Clean output", "order": 0, "type": "boolean", "value": true}, "selected_functions": {"description": "Select the functions to apply.", "label": "Select functions", "order": 1, "passthrough": false, "type": "list", "list": ["TesTDatetimeFormats"], "value": [0], "value_names": ["TesTDatetimeFormats"], "editor": {"buttons": true, "filter": true, "passthrough": true, "selection": "multi", "type": "listview"}}, "same_length_res": {"description": "Use this checkbox if you want to gather all the results generated from an incoming Table into a common output. This requires that the results will all have the same length. An exception will be raised if the lengths of the outgoing results differ.", "editor": null, "label": "Put results in common outputs", "order": 2, "type": "boolean", "value": true}}]]></parameters>
    <ports>
      <input key="port1" requiresdata="True" scheme="text" type="datasource" uuid="{48801ad5-fee7-49e7-a7a4-8f331f7b9d18}">
        <label>Python *.py file</label>
        <description>Python *.py file</description>
      </input>
      <input key="extra" requiresdata="False" scheme="hdf5" type="table" uuid="{7a79d0a0-79fe-4c26-845f-a76f6feab93f}">
        <label>Specification</label>
        <description>Specification</description>
      </input>
      <input key="port2" requiresdata="False" scheme="hdf5" type="[table]" uuid="{7b0c338a-56ac-4174-8a89-3ab196680ec9}">
        <label>Input Tables</label>
        <description>Input Tables</description>
      </input>
      <output key="port3" requiresdata="False" scheme="hdf5" type="[table]" uuid="{585eda82-2e76-4a66-ab33-364c4000d347}">
        <label>Tables with function(s) applied</label>
        <description>Tables with function(s) applied</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.datasources.filedatasource" uuid="{a7aa7cd0-5fbd-4d33-bf59-bfcec0e9c5e3}" width="50.0" x="2575.0" y="1900.0">
    <label>Datasource</label>
    <description>Select a data source.</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(C) 2013 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "use_relative_path": {"description": "Use the relative path to the file.", "editor": null, "label": "Use relative path", "order": 0, "type": "boolean", "value": true}, "filename": {"description": "A filename including path if needed", "label": "Filename", "order": 1, "type": "string", "value": "test_datatime_functions.py", "editor": {"type": "filename", "filter": ["Any files (*)"]}}, "db_driver": {"description": "Database driver to use.", "label": "Database driver", "order": 2, "passthrough": false, "type": "list", "list": ["SQL Server"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}, "db_servername": {"description": "A valid name to a database server.", "editor": null, "label": "Server name", "order": 3, "type": "string", "value": ""}, "db_databasename": {"description": "The name of the database.", "editor": null, "label": "Database name", "order": 4, "type": "string", "value": ""}, "db_user": {"description": "A valid database user.", "editor": null, "label": "User", "order": 5, "type": "string", "value": ""}, "db_password": {"description": "A valid password for the selected user.", "editor": null, "label": "Password", "order": 6, "type": "string", "value": ""}, "db_connection_string": {"description": "A connection string that will override other settings.", "editor": null, "label": "Connection string", "order": 7, "type": "string", "value": ""}, "datasource_type": {"description": "Type of datasource.", "editor": null, "label": "Datasource type", "order": 8, "passthrough": false, "type": "list", "list": ["File", "Database"], "value": [0], "value_names": []}}]]></parameters>
    <ports>
      <output key="port1" requiresdata="False" scheme="text" type="datasource" uuid="{1be053c2-bd55-4b55-836f-6787c694a201}">
        <label>Datasource</label>
        <description>Datasource</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.datasources.filedatasource" uuid="{b4600739-882c-4a78-bdca-4d59bdc4253b}" width="50.0" x="1700.0" y="1450.0">
    <label>Datasource</label>
    <description>Select a data source.</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(C) 2013 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "use_relative_path": {"description": "Use the relative path to the file.", "editor": null, "label": "Use relative path", "order": 0, "type": "boolean", "value": true}, "filename": {"description": "A filename including path if needed", "label": "Filename", "order": 1, "type": "string", "value": "test_datetime_formats.csv", "editor": {"type": "filename", "filter": ["Any files (*)"]}}, "db_driver": {"description": "Database driver to use.", "label": "Database driver", "order": 2, "passthrough": false, "type": "list", "list": ["SQL Server"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}, "db_servername": {"description": "A valid name to a database server.", "editor": null, "label": "Server name", "order": 3, "type": "string", "value": ""}, "db_databasename": {"description": "The name of the database.", "editor": null, "label": "Database name", "order": 4, "type": "string", "value": ""}, "db_user": {"description": "A valid database user.", "editor": null, "label": "User", "order": 5, "type": "string", "value": ""}, "db_password": {"description": "A valid password for the selected user.", "editor": null, "label": "Password", "order": 6, "type": "string", "value": ""}, "db_connection_string": {"description": "A connection string that will override other settings.", "editor": null, "label": "Connection string", "order": 7, "type": "string", "value": ""}, "datasource_type": {"description": "Type of datasource.", "editor": null, "label": "Datasource type", "order": 8, "passthrough": false, "type": "list", "list": ["File", "Database"], "value": [0], "value_names": []}}]]></parameters>
    <ports>
      <output key="port1" requiresdata="False" scheme="text" type="datasource" uuid="{13929fcf-6f32-410f-a9c1-1ccea72f63fc}">
        <label>Datasource</label>
        <description>Datasource</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.datasources.filedatasource" uuid="{da87ffd3-b0be-426a-a531-d7e73d713714}" width="50.0" x="1700.0" y="1700.0">
    <label>Datasource</label>
    <description>Select a data source.</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(C) 2013 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "use_relative_path": {"description": "Use the relative path to the file.", "editor": null, "label": "Use relative path", "order": 0, "type": "boolean", "value": true}, "filename": {"description": "A filename including path if needed", "label": "Filename", "order": 1, "type": "string", "value": "test_datetime_formats.csv", "editor": {"type": "filename", "filter": ["Any files (*)"]}}, "db_driver": {"description": "Database driver to use.", "label": "Database driver", "order": 2, "passthrough": false, "type": "list", "list": ["SQL Server"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}, "db_servername": {"description": "A valid name to a database server.", "editor": null, "label": "Server name", "order": 3, "type": "string", "value": ""}, "db_databasename": {"description": "The name of the database.", "editor": null, "label": "Database name", "order": 4, "type": "string", "value": ""}, "db_user": {"description": "A valid database user.", "editor": null, "label": "User", "order": 5, "type": "string", "value": ""}, "db_password": {"description": "A valid password for the selected user.", "editor": null, "label": "Password", "order": 6, "type": "string", "value": ""}, "db_connection_string": {"description": "A connection string that will override other settings.", "editor": null, "label": "Connection string", "order": 7, "type": "string", "value": ""}, "datasource_type": {"description": "Type of datasource.", "editor": null, "label": "Datasource type", "order": 8, "passthrough": false, "type": "list", "list": ["File", "Database"], "value": [0], "value_names": []}}]]></parameters>
    <ports>
      <output key="port1" requiresdata="False" scheme="text" type="datasource" uuid="{90b36e55-624c-46c2-9527-b1f519e15f03}">
        <label>Datasource</label>
        <description>Datasource</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.export.exporttables" uuid="{df80ef3d-bab0-47b4-89d3-25fa0bf796d5}" width="50.0" x="2275.0" y="1500.0">
    <label>Export Tables</label>
    <description>Export Tables</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(c) 2013 Combine AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "active_exporter": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "CSV"}, "custom_exporter_data": {"label": "", "order": 1, "type": "group", "CSV": {"label": "", "type": "group", "encoding": {"description": "Character encoding determines how different characters are represented when written to disc, sent over a network, etc.", "label": "Character encoding", "passthrough": false, "type": "list", "list": ["Western (ASCII)", "Western (ISO 8859-1)", "Western (ISO 8859-15)", "Western (Windows 1252)", "UTF-8"], "value": [4], "value_names": [], "editor": {"type": "combobox"}}, "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "csv"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}}, "HDF5": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "sydata"}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}}, "SQL": {"label": "", "type": "group", "odbc": {"description": "ODBC method to use.", "label": "ODBC method", "order": 0, "passthrough": false, "type": "list", "list": ["default", "pyodbc", "ceODBC"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}, "connection_string": {"description": "String used by pyodbc to make a connection.", "editor": null, "label": "Connection string", "type": "string", "value": ""}, "drop_table": {"description": "Drop table before adding data.", "editor": null, "label": "Drop table", "type": "boolean", "value": false}, "table_name": {"description": "The table name used when exporting.", "editor": null, "label": "Table name", "type": "string", "value": ""}, "use_nvarchar_size": {"description": "Use nvarchar(size) instead of nvarchar(MAX).", "editor": null, "label": "Use nvarchar(size)", "type": "boolean", "value": false}}, "SQLite": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "db"}}, "XLS": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "xls"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}}, "XLSX": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "xlsx"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}, "to_plot": {"description": "Select if incoming Tables with plot data should be embedded in the output file.", "editor": null, "label": "Embed plot in output file(s)", "type": "boolean", "value": true}, "to_sheets": {"description": "Select if incoming Tables are going to to be exported to sheets in a single file or to a single sheet inmultiple files.", "editor": null, "label": "Export data to sheets", "type": "boolean", "value": false}}}, "directory": {"description": "Select the directory where to export the files.", "label": "Output directory", "order": 2, "type": "string", "value": ".", "editor": {"type": "dirname"}}, "filename": {"description": "Filename without extension.", "editor": null, "label": "Filename", "order": 3, "type": "string", "value": "test_datetime_formats_2"}, "plot": {"description": "If there is a plot attribute in the input tables(s), create a separate file with the plot.", "label": "Output separate plot file with the following extension:", "order": 4, "passthrough": false, "type": "list", "list": ["-", "eps", "pdf", "svg", "png"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}}]]></parameters>
    <ports>
      <input key="port0" requiresdata="False" scheme="hdf5" type="[table]" uuid="{c2f4e67f-0df6-40bf-893a-24061c858cc1}">
        <label>Tables to be exported</label>
        <description>Tables to be exported</description>
      </input>
      <output key="port0" requiresdata="False" scheme="text" type="[datasource]" uuid="{b0530e30-0331-4c65-85c5-f56385278147}">
        <label>Datasources of exported files</label>
        <description>Datasources of exported files</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.importtable" uuid="{e6eeab83-455a-49a7-a07e-0e257b339bea}" width="50.0" x="1850.0" y="1950.0">
    <label>Table</label>
    <description>Data source as a table</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(C) 2013 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "active_importer": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "Auto"}, "custom_importer_data": {"label": "", "order": 1, "type": "group", "Auto": {"label": "", "order": 0, "type": "group"}}, "fail_strategy": {"description": "", "label": "Action on import failure", "order": 2, "passthrough": false, "type": "list", "list": ["Exception", "Create Empty Entry"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}}]]></parameters>
    <ports>
      <input key="port1" requiresdata="True" scheme="text" type="datasource" uuid="{f60ee7b2-c781-4f19-83b8-f24c15bd7268}">
        <label>Datasource</label>
        <description>Datasource</description>
      </input>
      <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{8a6ccdfa-1058-4504-8561-0ad791b69b0d}">
        <label>Imported Table</label>
        <description>Imported Table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.export.exporttables" uuid="{f143e7bc-f3ba-4bd8-a92c-3b0935d76a1b}" width="50.0" x="2275.0" y="2000.0">
    <label>Export Tables</label>
    <description>Export Tables</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(c) 2013 Combine AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "active_exporter": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "CSV"}, "custom_exporter_data": {"label": "", "order": 1, "type": "group", "CSV": {"label": "", "type": "group", "encoding": {"description": "Character encoding determines how different characters are represented when written to disc, sent over a network, etc.", "label": "Character encoding", "passthrough": false, "type": "list", "list": ["Western (ASCII)", "Western (ISO 8859-1)", "Western (ISO 8859-15)", "Western (Windows 1252)", "UTF-8"], "value": [4], "value_names": [], "editor": {"type": "combobox"}}, "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "csv"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}}, "HDF5": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "sydata"}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}}, "SQL": {"label": "", "type": "group", "odbc": {"description": "ODBC method to use.", "label": "ODBC method", "order": 0, "passthrough": false, "type": "list", "list": ["default", "pyodbc", "ceODBC"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}, "connection_string": {"description": "String used by pyodbc to make a connection.", "editor": null, "label": "Connection string", "type": "string", "value": ""}, "drop_table": {"description": "Drop table before adding data.", "editor": null, "label": "Drop table", "type": "boolean", "value": false}, "table_name": {"description": "The table name used when exporting.", "editor": null, "label": "Table name", "type": "string", "value": ""}, "use_nvarchar_size": {"description": "Use nvarchar(size) instead of nvarchar(MAX).", "editor": null, "label": "Use nvarchar(size)", "type": "boolean", "value": false}}, "SQLite": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "db"}}, "XLS": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "xls"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}}, "XLSX": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "xlsx"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}, "to_plot": {"description": "Select if incoming Tables with plot data should be embedded in the output file.", "editor": null, "label": "Embed plot in output file(s)", "type": "boolean", "value": true}, "to_sheets": {"description": "Select if incoming Tables are going to to be exported to sheets in a single file or to a single sheet inmultiple files.", "editor": null, "label": "Export data to sheets", "type": "boolean", "value": false}}}, "directory": {"description": "Select the directory where to export the files.", "label": "Output directory", "order": 2, "type": "string", "value": ".", "editor": {"type": "dirname"}}, "filename": {"description": "Filename without extension.", "editor": null, "label": "Filename", "order": 3, "type": "string", "value": "test_datetime_formats_4"}, "plot": {"description": "If there is a plot attribute in the input tables(s), create a separate file with the plot.", "label": "Output separate plot file with the following extension:", "order": 4, "passthrough": false, "type": "list", "list": ["-", "eps", "pdf", "svg", "png"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}}]]></parameters>
    <ports>
      <input key="port0" requiresdata="False" scheme="hdf5" type="[table]" uuid="{4b3f889c-b6cc-4739-b47d-45f1d92d3f1b}">
        <label>Tables to be exported</label>
        <description>Tables to be exported</description>
      </input>
      <output key="port0" requiresdata="False" scheme="text" type="[datasource]" uuid="{1868a4c9-3111-476f-839b-c7afa2fc305a}">
        <label>Datasources of exported files</label>
        <description>Datasources of exported files</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.converttablecolumns" uuid="{f38b8f12-d6d6-4143-a270-d52b21a50fae}" width="50.0" x="2000.0" y="1950.0">
    <label>Convert columns in Table</label>
    <description>Convert selected columns in Table to new data types.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@sysess.org&gt;</author>
    <copyright>(c) 2013 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "in_column_list": {"description": "Select the columns to use", "label": "Select columns", "order": 0, "passthrough": false, "type": "list", "list": ["%Y-%m-%d", "%Y-%m-%d %H", "%Y-%m-%d %H+00:00", "%Y-%m-%d %H:%M", "%Y-%m-%d %H:%M+00:00", "%Y-%m-%d %H:%M:%S", "%Y-%m-%d %H:%M:%S+00:00", "%Y-%m-%d %H:%M:%S.%f", "%Y-%m-%d %H:%M:%S.%f+00:00", "%Y-%m-%d %H:%M:%S.%fZ", "%Y-%m-%d %H:%M:%SZ", "%Y-%m-%d %H:%MZ", "%Y-%m-%d %HZ", "%Y-%m-%dT%H", "%Y-%m-%dT%H+00:00", "%Y-%m-%dT%H:%M", "%Y-%m-%dT%H:%M+00:00", "%Y-%m-%dT%H:%M:%S", "%Y-%m-%dT%H:%M:%S+00:00", "%Y-%m-%dT%H:%M:%S.%f", "%Y-%m-%dT%H:%M:%S.%f+00:00", "%Y-%m-%dT%H:%M:%S.%fZ", "%Y-%m-%dT%H:%M:%SZ", "%Y-%m-%dT%H:%MZ", "%Y-%m-%dT%HZ"], "value": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "value_names": ["%Y-%m-%d", "%Y-%m-%d %H", "%Y-%m-%d %H+00:00", "%Y-%m-%d %H:%M", "%Y-%m-%d %H:%M+00:00", "%Y-%m-%d %H:%M:%S", "%Y-%m-%d %H:%M:%S+00:00", "%Y-%m-%d %H:%M:%S.%f", "%Y-%m-%d %H:%M:%S.%f+00:00", "%Y-%m-%d %H:%M:%S.%fZ", "%Y-%m-%d %H:%M:%SZ", "%Y-%m-%d %H:%MZ", "%Y-%m-%d %HZ", "%Y-%m-%dT%H", "%Y-%m-%dT%H+00:00", "%Y-%m-%dT%H:%M", "%Y-%m-%dT%H:%M+00:00", "%Y-%m-%dT%H:%M:%S", "%Y-%m-%dT%H:%M:%S+00:00", "%Y-%m-%dT%H:%M:%S.%f", "%Y-%m-%dT%H:%M:%S.%f+00:00", "%Y-%m-%dT%H:%M:%S.%fZ", "%Y-%m-%dT%H:%M:%SZ", "%Y-%m-%dT%H:%MZ", "%Y-%m-%dT%HZ"], "editor": {"buttons": true, "invertbutton": true, "selection": "multi", "type": "listview"}}, "in_type_list": {"description": "Select the type to use", "label": "Select type", "order": 1, "passthrough": false, "type": "list", "list": ["str", "bool", "datetime", "float", "int", "unicode"], "value": [2], "value_names": ["datetime"], "editor": {"selection": "single", "type": "listview"}}, "out_column_list": {"description": "Selected columns to convert", "label": "Convert columns", "order": 2, "passthrough": false, "type": "list", "list": [], "value": ["%Y-%m-%d", "%Y-%m-%d %H", "%Y-%m-%d %H+00:00", "%Y-%m-%d %H:%M", "%Y-%m-%d %H:%M+00:00", "%Y-%m-%d %H:%M:%S", "%Y-%m-%d %H:%M:%S+00:00", "%Y-%m-%d %H:%M:%S.%f", "%Y-%m-%d %H:%M:%S.%f+00:00", "%Y-%m-%d %H:%M:%S.%fZ", "%Y-%m-%d %H:%M:%SZ", "%Y-%m-%d %H:%MZ", "%Y-%m-%d %HZ", "%Y-%m-%dT%H", "%Y-%m-%dT%H+00:00", "%Y-%m-%dT%H:%M", "%Y-%m-%dT%H:%M+00:00", "%Y-%m-%dT%H:%M:%S", "%Y-%m-%dT%H:%M:%S+00:00", "%Y-%m-%dT%H:%M:%S.%f", "%Y-%m-%dT%H:%M:%S.%f+00:00", "%Y-%m-%dT%H:%M:%S.%fZ", "%Y-%m-%dT%H:%M:%SZ", "%Y-%m-%dT%H:%MZ", "%Y-%m-%dT%HZ"], "value_names": [], "editor": {"selection": "multi", "type": "listview"}}, "out_type_list": {"description": "Selected types to use", "label": "Convert types", "order": 3, "passthrough": false, "type": "list", "list": [], "value": ["datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime", "datetime"], "value_names": [], "editor": {"selection": "multi", "type": "listview"}}}]]></parameters>
    <ports>
      <input key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{7dbeaf12-b016-4644-8f79-cb34030e7dfb}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="port2" requiresdata="False" scheme="hdf5" type="table" uuid="{d68d2bec-cd00-4078-9c60-d9c3ce329556}">
        <label>Table with converted columns</label>
        <description>Table with converted columns</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.importtablemultiple" uuid="{f863b712-d79a-41d6-be12-989a56e050af}" width="50.0" x="2425.0" y="1500.0">
    <label>Tables</label>
    <description>Import datasources as Tables.</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(C) 2013 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "active_importer": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "CSV"}, "custom_importer_data": {"label": "", "order": 1, "type": "group", "Auto": {"label": "", "order": 0, "type": "group"}, "CSV": {"label": "", "type": "group", "data_end_row": {"description": "The data rows.", "label": "", "type": "integer", "value": 0, "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "type": "integer", "value": 2, "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}}, "delimiter": {"description": "", "editor": null, "label": "", "type": "string", "value": ";"}, "description_row": {"description": "The row where the descriptions are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "descriptions": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}, "double_quotations": {"description": "Remove double quotations in importation.", "editor": null, "label": "Remove double quotations", "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "editor": null, "label": "", "type": "boolean", "value": true}, "exceptions": {"description": "Select method to handle eventual errors", "label": "How to handle failed importation:", "passthrough": false, "type": "list", "list": ["Raise Exceptions", "Partially read file", "Read file without delimiters"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}, "header_row": {"description": "The row where the headers are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "headers": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "type": "integer", "value": 20, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "other_delimiter": {"description": "Enter other delimiter than the standard ones.", "editor": null, "label": "", "type": "string", "value": " "}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "type": "integer", "value": 1, "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}}, "read_selection": {"description": "Select how to read the data", "label": "", "passthrough": false, "type": "list", "list": ["Read to the end of file", "Read specified number of rows", "Read to specified number of rows from the end"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}, "source_coding": {"description": "", "editor": null, "label": "", "type": "string", "value": "utf_8"}, "transposed": {"description": "Transpose the data.", "editor": null, "label": "Transpose input data", "type": "boolean", "value": false}, "unit_row": {"description": "The row where the units are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "units": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}}, "HDF5": {"label": "", "type": "group", "path_list": {"description": "The paths selected to import data from.", "label": "Selected paths", "passthrough": false, "type": "list", "list": [], "value": [], "value_names": [], "editor": {"type": "combobox"}}}, "SQL": {"label": "", "type": "group", "odbc": {"description": "ODBC method to use.", "label": "ODBC method", "order": 0, "passthrough": false, "type": "list", "list": ["default", "pyodbc", "ceODBC"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}, "custom_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": false}, "join_column_selection": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "join_columns": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "join_tables": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "lineedit_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": false}, "preview_query": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "query_str": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "table_columns": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "table_names": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "table_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": true}, "where_add_comparison": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "where_column_combo": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "where_comparison_combo": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": ["=", "<", ">", ">=", "<=", "!=", " LIKE ", " GLOB ", " BETWEEN "], "value": [0], "value_names": []}, "where_condition": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "where_condition_list": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}}, "Table": {"label": "", "type": "group"}, "XLS": {"label": "", "type": "group", "data_end_row": {"description": "The last data row.", "label": "", "type": "integer", "value": 0, "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "type": "integer", "value": 2, "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}}, "description_row": {"description": "The row where the descriptions are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "descriptions": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "editor": null, "label": "", "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "headers": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "type": "integer", "value": 20, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "read_selection": {"description": "Select how to read the data", "label": "", "passthrough": false, "type": "list", "list": ["Read to the end of file", "Read specified number of rows", "Read to specified number of rows from the end"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}, "transposed": {"description": "Transpose the data.", "editor": null, "label": "Transpose input", "type": "boolean", "value": false}, "unit_row": {"description": "The row where the units are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "units": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}, "worksheet_name": {"description": "The worksheet to import from.", "label": "Select worksheet", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": [], "editor": {"type": "combobox"}}}}, "fail_strategy": {"description": "", "label": "Action on import failure", "order": 2, "passthrough": false, "type": "list", "list": ["Exception", "Create Empty Entry", "Skip File"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}}]]></parameters>
    <ports>
      <input key="port1" requiresdata="True" scheme="text" type="[datasource]" uuid="{cfd09c4a-5bcc-4143-9412-261201cd96ee}">
        <label>Datasource</label>
        <description>Datasource</description>
      </input>
      <output key="port1" requiresdata="False" scheme="hdf5" type="[table]" uuid="{f2d878e3-b126-49da-b4bb-f29bac2f5fa8}">
        <label>Imported Tables</label>
        <description>Imported Tables</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.converttablecolumns" uuid="{fddcbe0e-f5ff-40f2-b514-7aa81c8ee281}" width="50.0" x="2000.0" y="1450.0">
    <label>Convert columns in Table</label>
    <description>Convert selected columns in Table to new data types.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@sysess.org&gt;</author>
    <copyright>(c) 2013 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "in_column_list": {"description": "Select the columns to use", "label": "Select columns", "order": 0, "passthrough": false, "type": "list", "list": ["%Y-%m-%d", "%Y-%m-%d %H", "%Y-%m-%d %H+00:00", "%Y-%m-%d %H:%M", "%Y-%m-%d %H:%M+00:00", "%Y-%m-%d %H:%M:%S", "%Y-%m-%d %H:%M:%S+00:00", "%Y-%m-%d %H:%M:%S.%f", "%Y-%m-%d %H:%M:%S.%f+00:00", "%Y-%m-%d %H:%M:%S.%fZ", "%Y-%m-%d %H:%M:%SZ", "%Y-%m-%d %H:%MZ", "%Y-%m-%d %HZ", "%Y-%m-%dT%H", "%Y-%m-%dT%H+00:00", "%Y-%m-%dT%H:%M", "%Y-%m-%dT%H:%M+00:00", "%Y-%m-%dT%H:%M:%S", "%Y-%m-%dT%H:%M:%S+00:00", "%Y-%m-%dT%H:%M:%S.%f", "%Y-%m-%dT%H:%M:%S.%f+00:00", "%Y-%m-%dT%H:%M:%S.%fZ", "%Y-%m-%dT%H:%M:%SZ", "%Y-%m-%dT%H:%MZ", "%Y-%m-%dT%HZ"], "value": [], "value_names": [], "editor": {"buttons": true, "invertbutton": true, "selection": "multi", "type": "listview"}}, "in_type_list": {"description": "Select the type to use", "label": "Select type", "order": 1, "passthrough": false, "type": "list", "list": ["bool", "datetime (UTC)", "datetime (naive)", "float", "int", "str", "unicode"], "value": [], "value_names": [], "editor": {"selection": "single", "type": "listview"}}, "out_column_list": {"description": "Selected columns to convert", "label": "Convert columns", "order": 2, "passthrough": false, "type": "list", "list": [], "value": ["%Y-%m-%d", "%Y-%m-%d %H", "%Y-%m-%d %H+00:00", "%Y-%m-%d %H:%M", "%Y-%m-%d %H:%M+00:00", "%Y-%m-%d %H:%M:%S", "%Y-%m-%d %H:%M:%S+00:00", "%Y-%m-%d %H:%M:%S.%f", "%Y-%m-%d %H:%M:%S.%f+00:00", "%Y-%m-%d %H:%M:%S.%fZ", "%Y-%m-%d %H:%M:%SZ", "%Y-%m-%d %H:%MZ", "%Y-%m-%d %HZ", "%Y-%m-%dT%H", "%Y-%m-%dT%H+00:00", "%Y-%m-%dT%H:%M", "%Y-%m-%dT%H:%M+00:00", "%Y-%m-%dT%H:%M:%S", "%Y-%m-%dT%H:%M:%S+00:00", "%Y-%m-%dT%H:%M:%S.%f", "%Y-%m-%dT%H:%M:%S.%f+00:00", "%Y-%m-%dT%H:%M:%S.%fZ", "%Y-%m-%dT%H:%M:%SZ", "%Y-%m-%dT%H:%MZ", "%Y-%m-%dT%HZ"], "value_names": [], "editor": {"selection": "multi", "type": "listview"}}, "out_type_list": {"description": "Selected types to use", "label": "Convert types", "order": 3, "passthrough": false, "type": "list", "list": [], "value": ["Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu", "Mu"], "value_names": [], "editor": {"selection": "multi", "type": "listview"}}}]]></parameters>
    <ports>
      <input key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{7bd308a8-0306-4d9f-8b77-d75c534c7a0e}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="port2" requiresdata="False" scheme="hdf5" type="table" uuid="{a4246c05-39e0-4a0d-b154-7dae3c5864a5}">
        <label>Table with converted columns</label>
        <description>Table with converted columns</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.converttablecolumns" uuid="{ffd388d6-a118-4e41-8a3a-9af7100c304d}" width="50.0" x="2000.0" y="1700.0">
    <label>Convert columns in Table</label>
    <description>Convert selected columns in Table to new data types.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@sysess.org&gt;</author>
    <copyright>(c) 2013 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "in_column_list": {"description": "Select the columns to use", "label": "Select columns", "order": 0, "passthrough": false, "type": "list", "list": ["%Y-%m-%d", "%Y-%m-%d %H", "%Y-%m-%d %H+00:00", "%Y-%m-%d %H:%M", "%Y-%m-%d %H:%M+00:00", "%Y-%m-%d %H:%M:%S", "%Y-%m-%d %H:%M:%S+00:00", "%Y-%m-%d %H:%M:%S.%f", "%Y-%m-%d %H:%M:%S.%f+00:00", "%Y-%m-%d %H:%M:%S.%fZ", "%Y-%m-%d %H:%M:%SZ", "%Y-%m-%d %H:%MZ", "%Y-%m-%d %HZ", "%Y-%m-%dT%H", "%Y-%m-%dT%H+00:00", "%Y-%m-%dT%H:%M", "%Y-%m-%dT%H:%M+00:00", "%Y-%m-%dT%H:%M:%S", "%Y-%m-%dT%H:%M:%S+00:00", "%Y-%m-%dT%H:%M:%S.%f", "%Y-%m-%dT%H:%M:%S.%f+00:00", "%Y-%m-%dT%H:%M:%S.%fZ", "%Y-%m-%dT%H:%M:%SZ", "%Y-%m-%dT%H:%MZ", "%Y-%m-%dT%HZ"], "value": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "value_names": ["%Y-%m-%d", "%Y-%m-%d %H", "%Y-%m-%d %H+00:00", "%Y-%m-%d %H:%M", "%Y-%m-%d %H:%M+00:00", "%Y-%m-%d %H:%M:%S", "%Y-%m-%d %H:%M:%S+00:00", "%Y-%m-%d %H:%M:%S.%f", "%Y-%m-%d %H:%M:%S.%f+00:00", "%Y-%m-%d %H:%M:%S.%fZ", "%Y-%m-%d %H:%M:%SZ", "%Y-%m-%d %H:%MZ", "%Y-%m-%d %HZ", "%Y-%m-%dT%H", "%Y-%m-%dT%H+00:00", "%Y-%m-%dT%H:%M", "%Y-%m-%dT%H:%M+00:00", "%Y-%m-%dT%H:%M:%S", "%Y-%m-%dT%H:%M:%S+00:00", "%Y-%m-%dT%H:%M:%S.%f", "%Y-%m-%dT%H:%M:%S.%f+00:00", "%Y-%m-%dT%H:%M:%S.%fZ", "%Y-%m-%dT%H:%M:%SZ", "%Y-%m-%dT%H:%MZ", "%Y-%m-%dT%HZ"], "editor": {"buttons": true, "invertbutton": true, "selection": "multi", "type": "listview"}}, "in_type_list": {"description": "Select the type to use", "label": "Select type", "order": 1, "passthrough": false, "type": "list", "list": ["bool", "datetime (UTC)", "datetime (naive)", "float", "int", "str", "unicode"], "value": [2], "value_names": ["datetime (naive)"], "editor": {"selection": "single", "type": "listview"}}, "out_column_list": {"description": "Selected columns to convert", "label": "Convert columns", "order": 2, "passthrough": false, "type": "list", "list": [], "value": ["%Y-%m-%d", "%Y-%m-%d %H", "%Y-%m-%d %H+00:00", "%Y-%m-%d %H:%M", "%Y-%m-%d %H:%M+00:00", "%Y-%m-%d %H:%M:%S", "%Y-%m-%d %H:%M:%S+00:00", "%Y-%m-%d %H:%M:%S.%f", "%Y-%m-%d %H:%M:%S.%f+00:00", "%Y-%m-%d %H:%M:%S.%fZ", "%Y-%m-%d %H:%M:%SZ", "%Y-%m-%d %H:%MZ", "%Y-%m-%d %HZ", "%Y-%m-%dT%H", "%Y-%m-%dT%H+00:00", "%Y-%m-%dT%H:%M", "%Y-%m-%dT%H:%M+00:00", "%Y-%m-%dT%H:%M:%S", "%Y-%m-%dT%H:%M:%S+00:00", "%Y-%m-%dT%H:%M:%S.%f", "%Y-%m-%dT%H:%M:%S.%f+00:00", "%Y-%m-%dT%H:%M:%S.%fZ", "%Y-%m-%dT%H:%M:%SZ", "%Y-%m-%dT%H:%MZ", "%Y-%m-%dT%HZ"], "value_names": [], "editor": {"selection": "multi", "type": "listview"}}, "out_type_list": {"description": "Selected types to use", "label": "Convert types", "order": 3, "passthrough": false, "type": "list", "list": [], "value": ["Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn", "Mn"], "value_names": [], "editor": {"selection": "multi", "type": "listview"}}}]]></parameters>
    <ports>
      <input key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{92bae3e7-6218-44f0-9767-afc4f20b2df5}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="port2" requiresdata="False" scheme="hdf5" type="table" uuid="{3ce6ff40-f1d5-4e92-b1bb-01e7889b5290}">
        <label>Table with converted columns</label>
        <description>Table with converted columns</description>
      </output>
    </ports>
  </node>
  <connection type="table" uuid="{0d378228-651b-4aca-99a4-f78d182683d5}">
    <source node="{ffd388d6-a118-4e41-8a3a-9af7100c304d}" port="{3ce6ff40-f1d5-4e92-b1bb-01e7889b5290}"/>
    <destination node="{819df186-4bd6-4b8a-a5a6-ee2ce34b95f1}" port="{dc4673c2-60f9-423b-bbc2-f47c2ee9fed5}"/>
  </connection>
  <connection type="[table]" uuid="{0d4328f7-d6e7-451e-96c1-afaf1c44bcb0}">
    <source node="{876e4e71-ab58-4e62-b6de-fff6f467621b}" port="{2c477026-9fae-45dc-b5c8-6c7d56ad2543}"/>
    <destination node="{1d5a6399-2848-4b5a-bf3a-1b371a35e0b0}" port="{103120a5-c00e-425b-af21-2fb016e19d2f}"/>
  </connection>
  <connection type="datasource" uuid="{0d875f4a-20f9-4792-8160-5539f02daed5}">
    <source node="{a7aa7cd0-5fbd-4d33-bf59-bfcec0e9c5e3}" port="{1be053c2-bd55-4b55-836f-6787c694a201}"/>
    <destination node="{8d7111a4-2a0f-462e-b651-9ddc4e8607d7}" port="{48801ad5-fee7-49e7-a7a4-8f331f7b9d18}"/>
  </connection>
  <connection type="table" uuid="{17bc3c92-2b5b-4980-b271-3e7a4d303d1a}">
    <source node="{f38b8f12-d6d6-4143-a270-d52b21a50fae}" port="{d68d2bec-cd00-4078-9c60-d9c3ce329556}"/>
    <destination node="{3c42b9fb-2e0e-4471-b81a-5e876b0ee69c}" port="{9e8b359b-0758-456d-8820-3f88fa63b3d0}"/>
  </connection>
  <connection type="[datasource]" uuid="{1bcc0d84-10bd-4971-9086-2ece0b62c09e}">
    <source node="{8434fb1e-3bda-4361-ac9c-7ddfccb9dea9}" port="{977ee9e4-c0ea-4631-afa8-a84d6179f2b2}"/>
    <destination node="{3ead9342-cdfe-4adb-b038-a642adda6893}" port="{92f76561-7883-48ad-a818-2bd15d4d7126}"/>
  </connection>
  <connection type="[table]" uuid="{2df8805b-49e4-485d-98af-016484514d15}">
    <source node="{3c42b9fb-2e0e-4471-b81a-5e876b0ee69c}" port="{db923e06-1df9-4cf3-8f1c-0c3ec23452f6}"/>
    <destination node="{f143e7bc-f3ba-4bd8-a92c-3b0935d76a1b}" port="{4b3f889c-b6cc-4739-b47d-45f1d92d3f1b}"/>
  </connection>
  <connection type="table" uuid="{2eaa1fbe-fcbf-4476-a696-40b367b9aee1}">
    <source node="{e6eeab83-455a-49a7-a07e-0e257b339bea}" port="{8a6ccdfa-1058-4504-8561-0ad791b69b0d}"/>
    <destination node="{f38b8f12-d6d6-4143-a270-d52b21a50fae}" port="{7dbeaf12-b016-4644-8f79-cb34030e7dfb}"/>
  </connection>
  <connection type="[datasource]" uuid="{3fd56187-7896-454b-ae09-27f2753b8e83}">
    <source node="{df80ef3d-bab0-47b4-89d3-25fa0bf796d5}" port="{b0530e30-0331-4c65-85c5-f56385278147}"/>
    <destination node="{f863b712-d79a-41d6-be12-989a56e050af}" port="{cfd09c4a-5bcc-4143-9412-261201cd96ee}"/>
  </connection>
  <connection type="datasource" uuid="{42d76175-b3bb-41dc-add0-f482a686b962}">
    <source node="{86d00a2d-d551-464f-beb0-a84aa4ec69ee}" port="{5e563312-4e81-438b-a30c-ac30ce98059c}"/>
    <destination node="{6c04a001-e69c-4b23-975c-bea0493aa3bf}" port="{57a73982-a0fd-4853-8735-e82a21204dbe}"/>
  </connection>
  <connection type="datasource" uuid="{4aecddcb-610f-4d4a-9b74-0cfa5807a096}">
    <source node="{da87ffd3-b0be-426a-a531-d7e73d713714}" port="{90b36e55-624c-46c2-9527-b1f519e15f03}"/>
    <destination node="{2b9c4292-59c2-4d04-ba31-bf1edff0e621}" port="{24f78d68-40d3-4279-ab91-34459ae567d0}"/>
  </connection>
  <connection type="[table]" uuid="{5530deea-9612-412b-8b5f-b99aad7885f8}">
    <source node="{8b032481-1691-4473-b8f1-8a7905586ddf}" port="{b1237382-d93c-4ca3-ab49-79059237cec9}"/>
    <destination node="{6c04a001-e69c-4b23-975c-bea0493aa3bf}" port="{671373eb-3b14-40b5-b08d-06deb7c33bfc}"/>
  </connection>
  <connection type="table" uuid="{5ea69574-debe-4bcc-9426-1eea728f9a4e}">
    <source node="{2b9c4292-59c2-4d04-ba31-bf1edff0e621}" port="{0432718d-89ad-45fb-98ff-ae4ea5b586e4}"/>
    <destination node="{ffd388d6-a118-4e41-8a3a-9af7100c304d}" port="{92bae3e7-6218-44f0-9767-afc4f20b2df5}"/>
  </connection>
  <connection type="table" uuid="{720ca4b8-7279-4daa-98a5-6ddd77c62ac9}">
    <source node="{80ec1d4f-19ee-4ac6-8fa8-46888041eb30}" port="{4a7dac90-74f2-487b-aa0c-093262a57689}"/>
    <destination node="{fddcbe0e-f5ff-40f2-b514-7aa81c8ee281}" port="{7bd308a8-0306-4d9f-8b77-d75c534c7a0e}"/>
  </connection>
  <connection type="table" uuid="{7404dc2d-6d33-431a-949e-ee79458b3b1f}">
    <source node="{fddcbe0e-f5ff-40f2-b514-7aa81c8ee281}" port="{a4246c05-39e0-4a0d-b154-7dae3c5864a5}"/>
    <destination node="{04e24cc3-de17-4561-bb54-3409e42433d8}" port="{13a50c4c-c497-4d5e-9d94-30a0a13c4562}"/>
  </connection>
  <connection type="[table]" uuid="{763bf47c-4f6b-4257-af69-3f109353f719}">
    <source node="{819df186-4bd6-4b8a-a5a6-ee2ce34b95f1}" port="{db6379c9-ad66-4f07-8092-b3b73029e8aa}"/>
    <destination node="{8434fb1e-3bda-4361-ac9c-7ddfccb9dea9}" port="{c5373a4b-b28c-4a03-b461-794194dfb966}"/>
  </connection>
  <connection type="[table]" uuid="{7661ae99-afb3-4b51-bd54-2ee01b6f3f07}">
    <source node="{48fb5a39-3d94-4977-958f-124b9ce77b8a}" port="{e1ee3952-66d6-4983-a0e4-5fc531768e7c}"/>
    <destination node="{8775779a-04e6-41ae-9301-2562dde98359}" port="{843cd2ff-7a0f-484c-81d5-af762495930e}"/>
  </connection>
  <connection type="table" uuid="{7a9a87fc-7da2-4f90-8546-f478bbd473d2}">
    <source node="{f38b8f12-d6d6-4143-a270-d52b21a50fae}" port="{d68d2bec-cd00-4078-9c60-d9c3ce329556}"/>
    <destination node="{8d7111a4-2a0f-462e-b651-9ddc4e8607d7}" port="{7a79d0a0-79fe-4c26-845f-a76f6feab93f}"/>
  </connection>
  <connection type="datasource" uuid="{84b79b35-aefa-49ec-ba9a-0b3d3f1521ec}">
    <source node="{4e115457-69d4-40aa-a7b9-c2c3fa5ee788}" port="{d9647d45-85d2-4231-a6ef-262dcedf638c}"/>
    <destination node="{e6eeab83-455a-49a7-a07e-0e257b339bea}" port="{f60ee7b2-c781-4f19-83b8-f24c15bd7268}"/>
  </connection>
  <connection type="datasource" uuid="{97d24d86-dbf3-4a89-b648-864efdfadf65}">
    <source node="{51b2bfaa-3a44-42b7-86b5-bcfdb45003f8}" port="{b502d295-bb4f-4f8a-b5b9-277b5c92d14e}"/>
    <destination node="{1d5a6399-2848-4b5a-bf3a-1b371a35e0b0}" port="{faf870ea-2d6e-4618-b245-f4b4431a906a}"/>
  </connection>
  <connection type="datasource" uuid="{9c45f10b-f9dc-4b7f-8aec-e9fcb3fce8c6}">
    <source node="{b4600739-882c-4a78-bdca-4d59bdc4253b}" port="{13929fcf-6f32-410f-a9c1-1ccea72f63fc}"/>
    <destination node="{80ec1d4f-19ee-4ac6-8fa8-46888041eb30}" port="{2baa6b27-a143-45a8-b7f6-c8bd631d441d}"/>
  </connection>
  <connection type="[table]" uuid="{aa84b518-a18c-498b-b234-235c3d2221e1}">
    <source node="{f863b712-d79a-41d6-be12-989a56e050af}" port="{f2d878e3-b126-49da-b4bb-f29bac2f5fa8}"/>
    <destination node="{8b032481-1691-4473-b8f1-8a7905586ddf}" port="{f063365a-694a-4334-afb8-6ce7bfbec658}"/>
  </connection>
  <connection type="table" uuid="{ab15e54f-e7a9-4929-acc7-c58cfba4c0d1}">
    <source node="{ffd388d6-a118-4e41-8a3a-9af7100c304d}" port="{3ce6ff40-f1d5-4e92-b1bb-01e7889b5290}"/>
    <destination node="{1d5a6399-2848-4b5a-bf3a-1b371a35e0b0}" port="{7b7d8c67-ea4e-4e0e-9626-04ac95c4e484}"/>
  </connection>
  <connection type="[table]" uuid="{c12c39e9-5f73-4fb7-bcd1-710722395702}">
    <source node="{04e24cc3-de17-4561-bb54-3409e42433d8}" port="{61a22df6-7e07-4231-af54-1283f731b19e}"/>
    <destination node="{df80ef3d-bab0-47b4-89d3-25fa0bf796d5}" port="{c2f4e67f-0df6-40bf-893a-24061c858cc1}"/>
  </connection>
  <connection type="[table]" uuid="{d7762350-c63e-43e3-92df-7fc6b348ee4f}">
    <source node="{8775779a-04e6-41ae-9301-2562dde98359}" port="{472c5016-6077-471c-8a3f-4d185f903e44}"/>
    <destination node="{8d7111a4-2a0f-462e-b651-9ddc4e8607d7}" port="{7b0c338a-56ac-4174-8a89-3ab196680ec9}"/>
  </connection>
  <connection type="[table]" uuid="{d870471f-41c0-4751-84aa-54dbf8e9e469}">
    <source node="{3ead9342-cdfe-4adb-b038-a642adda6893}" port="{8e10c80c-3601-4ef7-a4de-c5d9a1238916}"/>
    <destination node="{876e4e71-ab58-4e62-b6de-fff6f467621b}" port="{d3dc35ae-bf00-44e8-a392-034792e43fe2}"/>
  </connection>
  <connection type="table" uuid="{d9d88af5-d4ac-4237-aca0-6c8a63d1843b}">
    <source node="{fddcbe0e-f5ff-40f2-b514-7aa81c8ee281}" port="{a4246c05-39e0-4a0d-b154-7dae3c5864a5}"/>
    <destination node="{6c04a001-e69c-4b23-975c-bea0493aa3bf}" port="{4429c66a-9793-4557-b466-fc29a7557189}"/>
  </connection>
  <connection type="[datasource]" uuid="{ea78f665-fa5f-4112-a4af-8de75ff3bba4}">
    <source node="{f143e7bc-f3ba-4bd8-a92c-3b0935d76a1b}" port="{1868a4c9-3111-476f-839b-c7afa2fc305a}"/>
    <destination node="{48fb5a39-3d94-4977-958f-124b9ce77b8a}" port="{5c64f819-767a-465d-97c2-a53655ff62f8}"/>
  </connection>
  <text height="75.0" uuid="{5f5e7719-fea0-48f0-9d21-a2f57b985c34}" width="175.0" x="1475.0" y="1950.0">Legacy 'datetime' setting, meaning UTC.</text>
  <text height="75.0" uuid="{c6de52b4-1f62-4485-9ad5-45ec382153f6}" width="175.0" x="1475.0" y="1450.0">'datetime (UTC)'</text>
  <text height="75.0" uuid="{fb495765-2fa1-4849-ba00-7d6facb1c4cc}" width="175.0" x="1475.0" y="1700.0">'datetime (naive)'</text>
</flow>
