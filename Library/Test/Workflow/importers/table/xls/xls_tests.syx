<?xml version='1.0' encoding='ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" id="" is_locked="False" uuid="{41757c4d-80f1-4168-b65e-f9ea18472380}" width="50.0" x="0.0" y="0.0">
  <label>xls_tests.syx</label>
  <description></description>
  <author>Unknown</author>
  <copyright></copyright>
  <version>1.0</version>
  <source></source>
  <ports/>
  <aggregation type="json"><![CDATA[{}]]></aggregation>
  <parameters type="json"><![CDATA[{"environment": {}}]]></parameters>
  <flow cls="Flow" height="50.0" id="" is_locked="False" uuid="{8b9d8d8c-c6aa-4798-a341-dd6b0081e176}" width="50.0" x="2250.0" y="2400.0">
    <label>Test_of_transposed_xls</label>
    <description></description>
    <author>Unknown</author>
    <copyright></copyright>
    <version>1.0</version>
    <source></source>
    <ports/>
    <aggregation type="json"><![CDATA[{}]]></aggregation>
    <parameters type="json"><![CDATA[{"environment": {}, "data": {"environment": {}}, "type": "json"}]]></parameters>
    <node height="50.0" id="org.sysess.sympathy.data.table.table2tables" uuid="{01c083bb-7f8c-4b73-9826-78dd584079f2}" width="50.0" x="2425.0" y="2100.0">
      <label>Table2Tables</label>
      <description>Convert a single Table item to a list of Tables.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(c) 2013 Combine AB</copyright>
      <version>0.1</version>
      <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
      <ports>
        <input key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{c35fd21b-7fda-48f7-a398-995ece313e41}">
          <label>None</label>
          <description>None</description>
        </input>
        <output key="port1" requiresdata="False" scheme="hdf5" type="tables" uuid="{7f7b7208-5a9d-45ac-b059-b27aca9b5968}">
          <label>None</label>
          <description>None</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.table.importtable" uuid="{08c8f6e3-5585-4a54-97a2-19c6737cdca2}" width="50.0" x="1900.0" y="2075.0">
      <label>Table</label>
      <description>Data source as a table</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"custom_importer_data": {"XLS": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input", "type": "boolean", "order": 0, "value": true, "description": "Transpose the data."}, "data_start_row": {"description": "The first row where data is stored.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": -1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "worksheet_name": {"description": "The worksheet to import from.", "passthrough": false, "list": ["Sheet1", "Sheet2"], "value": [1], "label": "Select worksheet", "editor": {"type": "combobox"}, "value_names": ["Sheet2"], "type": "list", "order": 0}, "headers": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group"}, "HDF5": {"path_list": {"description": "The paths selected to import data from.", "passthrough": false, "list": [], "value": [], "label": "Selected paths", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "type": "group"}, "Auto": {"type": "group", "order": 0, "label": ""}, "label": "", "SQL": {"type": "group"}, "Table": {"type": "group"}, "CSV": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "source_coding": {"label": "", "type": "string", "order": 0, "description": ""}, "data_start_row": {"description": "The first row where data is stored.", "value": 1, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": 0, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input data", "type": "boolean", "order": 0, "value": false, "description": "Transpose the data."}, "other_delimiter": {"label": "", "type": "string", "order": 0, "value": " ", "description": "Enter other delimiter than the standard ones."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "double_quotations": {"label": "Remove double quotations", "type": "boolean", "order": 0, "value": false, "description": "Remove double quotations in importation."}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": -500}, "type": "integer", "order": 0}, "delimiter": {"label": "", "type": "string", "order": 0, "description": ""}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group", "headers": {"label": "", "type": "boolean", "order": 0, "description": "File has headers."}}, "type": "group", "order": 0}, "active_importer": {"label": "", "type": "string", "order": 0, "value": "XLS", "description": ""}, "type": "group"}]]></parameters>
      <ports>
        <input key="port1" requiresdata="True" scheme="text" type="datasource" uuid="{b5bd731b-fa82-4e66-8681-4fc11197ea42}">
          <label>DataSource</label>
          <description>DataSource</description>
        </input>
        <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{761a762b-e283-4ef7-b1b9-11affd9dc102}">
          <label>TableOutput</label>
          <description>TableOutput</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.table.importtablemultiple" uuid="{2539bc82-1f24-44cc-994c-7f7537544c90}" width="50.0" x="2675.0" y="2100.0">
      <label>Tables</label>
      <description>Import datasources as Tables.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"custom_importer_data": {"XLS": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input", "type": "boolean", "order": 0, "value": false, "description": "Transpose the data."}, "data_start_row": {"description": "The first row where data is stored.", "value": 2, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": -1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "worksheet_name": {"description": "The worksheet to import from.", "passthrough": false, "list": ["sheet1"], "value": [0], "label": "Select worksheet", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "headers": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "File has headers."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group"}, "HDF5": {"path_list": {"description": "The paths selected to import data from.", "passthrough": false, "list": [], "value": [], "label": "Selected paths", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "type": "group"}, "Auto": {"type": "group", "order": 0, "label": ""}, "label": "", "SQL": {"type": "group"}, "Table": {"type": "group"}, "CSV": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "source_coding": {"label": "", "type": "string", "order": 0, "description": ""}, "data_start_row": {"description": "The first row where data is stored.", "value": 1, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": 0, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input data", "type": "boolean", "order": 0, "value": false, "description": "Transpose the data."}, "other_delimiter": {"label": "", "type": "string", "order": 0, "value": " ", "description": "Enter other delimiter than the standard ones."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "double_quotations": {"label": "Remove double quotations", "type": "boolean", "order": 0, "value": false, "description": "Remove double quotations in importation."}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": -500}, "type": "integer", "order": 0}, "delimiter": {"label": "", "type": "string", "order": 0, "description": ""}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group", "headers": {"label": "", "type": "boolean", "order": 0, "description": "File has headers."}}, "type": "group", "order": 0}, "active_importer": {"label": "", "type": "string", "order": 0, "value": "Auto", "description": ""}, "type": "group"}]]></parameters>
      <ports>
        <input key="port1" requiresdata="True" scheme="text" type="datasources" uuid="{e5627625-86d2-4378-a26e-ab10ceeaa760}">
          <label>DataSource</label>
          <description>DataSource</description>
        </input>
        <output key="port1" requiresdata="False" scheme="hdf5" type="tables" uuid="{2d457fa3-8db2-4a3a-a89d-c329c93c1e91}">
          <label>TableOutput</label>
          <description>TableOutput</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.datasources.filedatasource" uuid="{2ab64bfc-e1b5-42b2-a76b-b488b91bf242}" width="50.0" x="1775.0" y="1975.0">
      <label>Single Data Value, Header</label>
      <description>Select a data source.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"db_password": {"label": "Password", "type": "string", "order": 6, "value": "", "description": "A valid password for the selected user."}, "filename": {"description": "A filename including path if needed", "value": "data/single_data_value_with_header.xls", "label": "Filename", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "type": "string", "order": 1}, "db_driver": {"description": "Database driver to use.", "passthrough": false, "list": ["SQL Server"], "value": [0], "label": "Database driver", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 2}, "db_connection_string": {"label": "Connection string", "type": "string", "order": 7, "value": "", "description": "A connection string that will override other settings."}, "db_user": {"label": "User", "type": "string", "order": 5, "value": "", "description": "A valid database user."}, "db_databasename": {"label": "Database name", "type": "string", "order": 4, "value": "", "description": "The name of the database."}, "db_servername": {"label": "Server name", "type": "string", "order": 3, "value": "", "description": "A valid name to a database server."}, "use_relative_path": {"label": "Use relative path", "type": "boolean", "order": 0, "value": true, "description": "Use the relative path to the file."}, "type": "group", "datasource_type": {"description": "Type of datasource.", "passthrough": false, "list": ["File", "Database"], "value": [0], "label": "Datasource type", "value_names": [], "type": "list", "order": 999}}]]></parameters>
      <ports>
        <output key="port1" requiresdata="False" scheme="text" type="datasource" uuid="{73f89fb0-f888-4c76-8dc4-88fedd1988af}">
          <label>None</label>
          <description>None</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.datasources.filedatasource" uuid="{2c4a3ea8-898a-4116-b69f-208ff69f5977}" width="50.0" x="2800.0" y="2000.0">
      <label>Datasource</label>
      <description>Select a data source.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"db_password": {"label": "Password", "type": "string", "order": 6, "value": "", "description": "A valid password for the selected user."}, "filename": {"description": "A filename including path if needed", "value": "data/import_export_xls.py", "label": "Filename", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "type": "string", "order": 1}, "db_driver": {"description": "Database driver to use.", "passthrough": false, "list": ["SQL Server"], "value": [0], "label": "Database driver", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 2}, "db_connection_string": {"label": "Connection string", "type": "string", "order": 7, "value": "", "description": "A connection string that will override other settings."}, "db_user": {"label": "User", "type": "string", "order": 5, "value": "", "description": "A valid database user."}, "db_databasename": {"label": "Database name", "type": "string", "order": 4, "value": "", "description": "The name of the database."}, "db_servername": {"label": "Server name", "type": "string", "order": 3, "value": "", "description": "A valid name to a database server."}, "use_relative_path": {"label": "Use relative path", "type": "boolean", "order": 0, "value": true, "description": "Use the relative path to the file."}, "type": "group", "datasource_type": {"description": "Type of datasource.", "passthrough": false, "list": ["File", "Database"], "value": [0], "label": "Datasource type", "value_names": [], "type": "list", "order": 999}}]]></parameters>
      <ports>
        <output key="port1" requiresdata="False" scheme="text" type="datasource" uuid="{3c37d596-79d1-47a2-9320-19fddb141083}">
          <label>None</label>
          <description>None</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.table.functionselectortable" uuid="{31cc3be6-4e0a-4d89-9b69-77ec5425d2f6}" width="50.0" x="2300.0" y="2100.0">
      <label>F(x) Table</label>
      <description>Select and apply functions to a Table.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2012 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"type": "group", "clean_output": {"label": "Clean output", "type": "boolean", "order": 0, "value": false, "description": "Do not copy the input data to the output."}, "selected_functions": {"description": "Select the functions to apply.", "passthrough": true, "list": ["TestColumnDataTypes", "TestNoColumns", "TestSignalLengths"], "value": [0, 1, 2], "label": "Select functions", "editor": {"buttons": true, "filter": true, "selection": "multi", "type": "listview", "passthrough": true}, "value_names": ["TestColumnDataTypes", "TestNoColumns", "TestSignalLengths"], "type": "list", "order": 1}}]]></parameters>
      <ports>
        <input key="port1" requiresdata="True" scheme="text" type="datasource" uuid="{d6d9085a-42f6-4e2f-8970-65be3da56c7d}">
          <label>None</label>
          <description>None</description>
        </input>
        <input key="port2" requiresdata="False" scheme="hdf5" type="table" uuid="{ef45d3da-f381-42a3-b209-17fdb992cf1c}">
          <label>None</label>
          <description>None</description>
        </input>
        <output key="port3" requiresdata="False" scheme="hdf5" type="table" uuid="{7c1afeca-255a-47c9-8fad-b81441d6cfef}">
          <label>None</label>
          <description>None</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.datasources.filedatasource" uuid="{3aaa7925-1ecd-4ac0-b5b7-a6d6f347f72d}" width="50.0" x="1775.0" y="2275.0">
      <label>Single Data Column</label>
      <description>Select a data source.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"db_password": {"label": "Password", "type": "string", "order": 6, "value": "", "description": "A valid password for the selected user."}, "filename": {"description": "A filename including path if needed", "value": "data/single_data_column.xls", "label": "Filename", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "type": "string", "order": 1}, "db_driver": {"description": "Database driver to use.", "passthrough": false, "list": ["SQL Server"], "value": [0], "label": "Database driver", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 2}, "db_connection_string": {"label": "Connection string", "type": "string", "order": 7, "value": "", "description": "A connection string that will override other settings."}, "db_user": {"label": "User", "type": "string", "order": 5, "value": "", "description": "A valid database user."}, "db_databasename": {"label": "Database name", "type": "string", "order": 4, "value": "", "description": "The name of the database."}, "db_servername": {"label": "Server name", "type": "string", "order": 3, "value": "", "description": "A valid name to a database server."}, "use_relative_path": {"label": "Use relative path", "type": "boolean", "order": 0, "value": true, "description": "Use the relative path to the file."}, "type": "group", "datasource_type": {"description": "Type of datasource.", "passthrough": false, "list": ["File", "Database"], "value": [0], "label": "Datasource type", "value_names": [], "type": "list", "order": 999}}]]></parameters>
      <ports>
        <output key="port1" requiresdata="False" scheme="text" type="datasource" uuid="{356a27cb-b7e8-494c-8fca-764b23957757}">
          <label>None</label>
          <description>None</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.datasources.filedatasource" uuid="{508b6f21-fdc4-49c3-9c36-42e6f423d3fa}" width="50.0" x="1775.0" y="2175.0">
      <label>Single Data Row, Header</label>
      <description>Select a data source.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"db_password": {"label": "Password", "type": "string", "order": 6, "value": "", "description": "A valid password for the selected user."}, "filename": {"description": "A filename including path if needed", "value": "data/single_data_row_with_header.xls", "label": "Filename", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "type": "string", "order": 1}, "db_driver": {"description": "Database driver to use.", "passthrough": false, "list": ["SQL Server"], "value": [0], "label": "Database driver", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 2}, "db_connection_string": {"label": "Connection string", "type": "string", "order": 7, "value": "", "description": "A connection string that will override other settings."}, "db_user": {"label": "User", "type": "string", "order": 5, "value": "", "description": "A valid database user."}, "db_databasename": {"label": "Database name", "type": "string", "order": 4, "value": "", "description": "The name of the database."}, "db_servername": {"label": "Server name", "type": "string", "order": 3, "value": "", "description": "A valid name to a database server."}, "use_relative_path": {"label": "Use relative path", "type": "boolean", "order": 0, "value": true, "description": "Use the relative path to the file."}, "type": "group", "datasource_type": {"description": "Type of datasource.", "passthrough": false, "list": ["File", "Database"], "value": [0], "label": "Datasource type", "value_names": [], "type": "list", "order": 999}}]]></parameters>
      <ports>
        <output key="port1" requiresdata="False" scheme="text" type="datasource" uuid="{9645df2f-ed79-4f1b-a4ea-3e094a4681b8}">
          <label>None</label>
          <description>None</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.table.importtable" uuid="{6aab25aa-0f02-480f-b20e-643fc71bd7ea}" width="50.0" x="2175.0" y="2100.0">
      <label>Table</label>
      <description>Data source as a table</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"custom_importer_data": {"XLS": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input", "type": "boolean", "order": 0, "value": true, "description": "Transpose the data."}, "data_start_row": {"description": "The first row where data is stored.", "value": 2, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": -1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "worksheet_name": {"description": "The worksheet to import from.", "passthrough": false, "list": ["Tabell1", "Tabell2", "Tabell3"], "value": [1], "label": "Select worksheet", "editor": {"type": "combobox"}, "value_names": ["Tabell2"], "type": "list", "order": 0}, "headers": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "File has headers."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group"}, "HDF5": {"path_list": {"description": "The paths selected to import data from.", "passthrough": false, "list": [], "value": [], "label": "Selected paths", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "type": "group"}, "Auto": {"type": "group", "order": 0, "label": ""}, "label": "", "SQL": {"type": "group"}, "Table": {"type": "group"}, "CSV": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "source_coding": {"label": "", "type": "string", "order": 0, "description": ""}, "data_start_row": {"description": "The first row where data is stored.", "value": 1, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": 0, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input data", "type": "boolean", "order": 0, "value": false, "description": "Transpose the data."}, "other_delimiter": {"label": "", "type": "string", "order": 0, "value": " ", "description": "Enter other delimiter than the standard ones."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "double_quotations": {"label": "Remove double quotations", "type": "boolean", "order": 0, "value": false, "description": "Remove double quotations in importation."}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": -500}, "type": "integer", "order": 0}, "delimiter": {"label": "", "type": "string", "order": 0, "description": ""}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group", "headers": {"label": "", "type": "boolean", "order": 0, "description": "File has headers."}}, "type": "group", "order": 0}, "active_importer": {"label": "", "type": "string", "order": 0, "value": "XLS", "description": ""}, "type": "group"}]]></parameters>
      <ports>
        <input key="port1" requiresdata="True" scheme="text" type="datasource" uuid="{b0e0ef05-8722-441a-bf58-1d2e79434b13}">
          <label>DataSource</label>
          <description>DataSource</description>
        </input>
        <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{b70d2500-7758-49f4-b0c7-0f5330bc1c0b}">
          <label>TableOutput</label>
          <description>TableOutput</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.datasources.filedatasource" uuid="{7745a413-330b-45ec-a750-553a134496b2}" width="50.0" x="1775.0" y="2075.0">
      <label>Single Data Row</label>
      <description>Select a data source.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"db_password": {"label": "Password", "type": "string", "order": 6, "value": "", "description": "A valid password for the selected user."}, "filename": {"description": "A filename including path if needed", "value": "data/single_data_row.xls", "label": "Filename", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "type": "string", "order": 1}, "db_driver": {"description": "Database driver to use.", "passthrough": false, "list": ["SQL Server"], "value": [0], "label": "Database driver", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 2}, "db_connection_string": {"label": "Connection string", "type": "string", "order": 7, "value": "", "description": "A connection string that will override other settings."}, "db_user": {"label": "User", "type": "string", "order": 5, "value": "", "description": "A valid database user."}, "db_databasename": {"label": "Database name", "type": "string", "order": 4, "value": "", "description": "The name of the database."}, "db_servername": {"label": "Server name", "type": "string", "order": 3, "value": "", "description": "A valid name to a database server."}, "use_relative_path": {"label": "Use relative path", "type": "boolean", "order": 0, "value": true, "description": "Use the relative path to the file."}, "type": "group", "datasource_type": {"description": "Type of datasource.", "passthrough": false, "list": ["File", "Database"], "value": [0], "label": "Datasource type", "value_names": [], "type": "list", "order": 999}}]]></parameters>
      <ports>
        <output key="port1" requiresdata="False" scheme="text" type="datasource" uuid="{3e359e20-ee2d-4cc2-97de-16a1cecdf49e}">
          <label>None</label>
          <description>None</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.table.importtable" uuid="{851ef363-ac2a-4d87-b924-b9c3e1319c19}" width="50.0" x="1900.0" y="1975.0">
      <label>Table</label>
      <description>Data source as a table</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"custom_importer_data": {"XLS": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input", "type": "boolean", "order": 0, "value": true, "description": "Transpose the data."}, "data_start_row": {"description": "The first row where data is stored.", "value": 2, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": -1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "worksheet_name": {"description": "The worksheet to import from.", "passthrough": false, "list": ["Sheet1", "Sheet2"], "value": [1], "label": "Select worksheet", "editor": {"type": "combobox"}, "value_names": ["Sheet2"], "type": "list", "order": 0}, "headers": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "File has headers."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group"}, "HDF5": {"path_list": {"description": "The paths selected to import data from.", "passthrough": false, "list": [], "value": [], "label": "Selected paths", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "type": "group"}, "Auto": {"type": "group", "order": 0, "label": ""}, "label": "", "SQL": {"type": "group"}, "Table": {"type": "group"}, "CSV": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "source_coding": {"label": "", "type": "string", "order": 0, "description": ""}, "data_start_row": {"description": "The first row where data is stored.", "value": 1, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": 0, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input data", "type": "boolean", "order": 0, "value": false, "description": "Transpose the data."}, "other_delimiter": {"label": "", "type": "string", "order": 0, "value": " ", "description": "Enter other delimiter than the standard ones."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "double_quotations": {"label": "Remove double quotations", "type": "boolean", "order": 0, "value": false, "description": "Remove double quotations in importation."}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": -500}, "type": "integer", "order": 0}, "delimiter": {"label": "", "type": "string", "order": 0, "description": ""}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group", "headers": {"label": "", "type": "boolean", "order": 0, "description": "File has headers."}}, "type": "group", "order": 0}, "active_importer": {"label": "", "type": "string", "order": 0, "value": "XLS", "description": ""}, "type": "group"}]]></parameters>
      <ports>
        <input key="port1" requiresdata="True" scheme="text" type="datasource" uuid="{b5bd731b-fa82-4e66-8681-4fc11197ea42}">
          <label>DataSource</label>
          <description>DataSource</description>
        </input>
        <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{761a762b-e283-4ef7-b1b9-11affd9dc102}">
          <label>TableOutput</label>
          <description>TableOutput</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.datasources.filedatasource" uuid="{8baaa432-f463-4f1e-9c8f-ec1e703d9715}" width="50.0" x="1775.0" y="1875.0">
      <label>Single Data Value</label>
      <description>Select a data source.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"db_password": {"label": "Password", "type": "string", "order": 6, "value": "", "description": "A valid password for the selected user."}, "filename": {"description": "A filename including path if needed", "value": "data/single_data_value.xls", "label": "Filename", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "type": "string", "order": 1}, "db_driver": {"description": "Database driver to use.", "passthrough": false, "list": ["SQL Server"], "value": [0], "label": "Database driver", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 2}, "db_connection_string": {"label": "Connection string", "type": "string", "order": 7, "value": "", "description": "A connection string that will override other settings."}, "db_user": {"label": "User", "type": "string", "order": 5, "value": "", "description": "A valid database user."}, "db_databasename": {"label": "Database name", "type": "string", "order": 4, "value": "", "description": "The name of the database."}, "db_servername": {"label": "Server name", "type": "string", "order": 3, "value": "", "description": "A valid name to a database server."}, "use_relative_path": {"label": "Use relative path", "type": "boolean", "order": 0, "value": true, "description": "Use the relative path to the file."}, "type": "group", "datasource_type": {"description": "Type of datasource.", "passthrough": false, "list": ["File", "Database"], "value": [0], "label": "Datasource type", "value_names": [], "type": "list", "order": 999}}]]></parameters>
      <ports>
        <output key="port1" requiresdata="False" scheme="text" type="datasource" uuid="{b6bbd4e3-c5ad-47a3-ac62-42f0ca15c2fe}">
          <label>None</label>
          <description>None</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.list.getitemtable" uuid="{93f64563-3292-468f-80bd-33a09e28e900}" width="50.0" x="2800.0" y="2100.0">
      <label>Get Item Table</label>
      <description>Get an item from a list</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"type": "group", "combo": {"description": "List indexes.", "passthrough": false, "list": ["0"], "value": [0], "label": "Index", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 10}}]]></parameters>
      <ports>
        <input key="port1" requiresdata="False" scheme="hdf5" type="tables" uuid="{7fca9af4-70f2-42e3-b9d9-5427f60c4be5}">
          <label>None</label>
          <description>None</description>
        </input>
        <output key="port3" requiresdata="False" scheme="hdf5" type="table" uuid="{34d84a54-3a07-4bc9-b30c-fef6708a166c}">
          <label>None</label>
          <description>None</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.datasources.filedatasource" uuid="{9509423a-c68e-4a26-821b-72c5d5b7740f}" width="50.0" x="2175.0" y="2000.0">
      <label>Datasource</label>
      <description>Select a data source.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"db_password": {"label": "Password", "type": "string", "order": 6, "value": "", "description": "A valid password for the selected user."}, "filename": {"description": "A filename including path if needed", "value": "data/import_export_xls.py", "label": "Filename", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "type": "string", "order": 1}, "db_driver": {"description": "Database driver to use.", "passthrough": false, "list": ["SQL Server"], "value": [0], "label": "Database driver", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 2}, "db_connection_string": {"label": "Connection string", "type": "string", "order": 7, "value": "", "description": "A connection string that will override other settings."}, "db_user": {"label": "User", "type": "string", "order": 5, "value": "", "description": "A valid database user."}, "db_databasename": {"label": "Database name", "type": "string", "order": 4, "value": "", "description": "The name of the database."}, "db_servername": {"label": "Server name", "type": "string", "order": 3, "value": "", "description": "A valid name to a database server."}, "use_relative_path": {"label": "Use relative path", "type": "boolean", "order": 0, "value": true, "description": "Use the relative path to the file."}, "type": "group", "datasource_type": {"description": "Type of datasource.", "passthrough": false, "list": ["File", "Database"], "value": [0], "label": "Datasource type", "value_names": [], "type": "list", "order": 999}}]]></parameters>
      <ports>
        <output key="port1" requiresdata="False" scheme="text" type="datasource" uuid="{9908f2ad-95a0-41a1-956e-36c78609f382}">
          <label>None</label>
          <description>None</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.datasources.filedatasource" uuid="{ac6b7503-d7cf-4d45-b632-d52eafde9c6d}" width="50.0" x="2425.0" y="2200.0">
      <label>Datasource</label>
      <description>Select a data source.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"db_password": {"label": "Password", "type": "string", "order": 6, "value": "", "description": "A valid password for the selected user."}, "filename": {"description": "A filename including path if needed", "value": "data/import_export_xls.xls", "label": "Filename", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "type": "string", "order": 1}, "db_driver": {"description": "Database driver to use.", "passthrough": false, "list": ["SQL Server"], "value": [0], "label": "Database driver", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 2}, "db_connection_string": {"label": "Connection string", "type": "string", "order": 7, "value": "", "description": "A connection string that will override other settings."}, "db_user": {"label": "User", "type": "string", "order": 5, "value": "", "description": "A valid database user."}, "db_databasename": {"label": "Database name", "type": "string", "order": 4, "value": "", "description": "The name of the database."}, "db_servername": {"label": "Server name", "type": "string", "order": 3, "value": "", "description": "A valid name to a database server."}, "use_relative_path": {"label": "Use relative path", "type": "boolean", "order": 0, "value": true, "description": "Use the relative path to the file."}, "type": "group", "datasource_type": {"description": "Type of datasource.", "passthrough": false, "list": ["File", "Database"], "value": [0], "label": "Datasource type", "value_names": [], "type": "list", "order": 999}}]]></parameters>
      <ports>
        <output key="port1" requiresdata="False" scheme="text" type="datasource" uuid="{1e47f2c7-6bd5-4ddf-b759-baf84df3d246}">
          <label>None</label>
          <description>None</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.export.exporttables" uuid="{b238dd7e-6111-4775-9b8d-22251374a04d}" width="50.0" x="2550.0" y="2100.0">
      <label>Export Tables</label>
      <description>Export Tables</description>
      <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
      <copyright>(c) 2013 Combine AB</copyright>
      <version>0.1</version>
      <parameters type="json"><![CDATA[{"directory": {"description": "Select the directory where to export the files.", "value": ".", "label": "Output directory", "editor": {"type": "dirname"}, "type": "string", "order": 0}, "type": "group", "active_exporter": {"label": "", "type": "string", "order": 0, "value": "XLS", "description": ""}, "custom_exporter_data": {"SQLite": {"filename_extension": {"label": "Filename extension", "type": "string", "order": 0, "value": "db", "description": ""}, "type": "group", "order": 0, "label": ""}, "HDF5": {"filename_extension": {"label": "Filename extension", "type": "string", "order": 0, "value": "h5", "description": ""}, "type": "group", "order": 0, "label": ""}, "XLS": {"filename_extension": {"label": "Filename extension", "type": "string", "order": 0, "value": "xls", "description": ""}, "type": "group", "order": 0, "label": ""}, "label": "", "SQL": {"table_name": {"label": "Table name", "type": "string", "order": 0, "value": "", "description": "The table name used when exporting."}, "label": "", "drop_table": {"label": "Drop table", "type": "boolean", "order": 0, "value": false, "description": "Drop table before adding data."}, "use_ntext": {"label": "Use ntext", "type": "boolean", "order": 0, "value": false, "description": "Use ntext instead of nvarchar."}, "connection_string": {"label": "Connection string", "type": "string", "order": 0, "value": "", "description": "String used by pyodbc to make a connection."}, "type": "group", "order": 0, "filename_extension": {"label": "Filename extension", "type": "string", "order": 0, "value": "", "description": ""}}, "CSV": {"filename_extension": {"label": "Filename extension", "type": "string", "order": 0, "value": "csv", "description": ""}, "type": "group", "order": 0, "label": ""}, "type": "group", "order": 0}, "filename": {"label": "Filename", "type": "string", "order": 0, "value": "exported_test_xls_transposed", "description": "Filename without extension."}}]]></parameters>
      <ports>
        <input key="port0" requiresdata="False" scheme="hdf5" type="tables" uuid="{c5207e2b-09bb-49ff-8df3-b520bf7f4ea0}">
          <label>None</label>
          <description>None</description>
        </input>
        <output key="port0" requiresdata="False" scheme="text" type="datasources" uuid="{f70d9a52-ed28-4389-a871-b19a5405a449}">
          <label>None</label>
          <description>None</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.table.importtable" uuid="{b4e8cbf0-456d-48e6-92fb-82ae75d6e426}" width="50.0" x="1900.0" y="1875.0">
      <label>Table</label>
      <description>Data source as a table</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"custom_importer_data": {"XLS": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input", "type": "boolean", "order": 0, "value": true, "description": "Transpose the data."}, "data_start_row": {"description": "The first row where data is stored.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": -1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "worksheet_name": {"description": "The worksheet to import from.", "passthrough": false, "list": ["Sheet1"], "value": [0], "label": "Select worksheet", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "headers": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group"}, "HDF5": {"path_list": {"description": "The paths selected to import data from.", "passthrough": false, "list": [], "value": [], "label": "Selected paths", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "type": "group"}, "Auto": {"type": "group", "order": 0, "label": ""}, "label": "", "SQL": {"type": "group"}, "Table": {"type": "group"}, "CSV": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "source_coding": {"label": "", "type": "string", "order": 0, "value": "", "description": ""}, "data_start_row": {"description": "The first row where data is stored.", "value": 1, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": 0, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input data", "type": "boolean", "order": 0, "value": false, "description": "Transpose the data."}, "other_delimiter": {"label": "", "type": "string", "order": 0, "value": " ", "description": "Enter other delimiter than the standard ones."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "double_quotations": {"label": "Remove double quotations", "type": "boolean", "order": 0, "value": false, "description": "Remove double quotations in importation."}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": -500}, "type": "integer", "order": 0}, "delimiter": {"label": "", "type": "string", "order": 0, "value": "", "description": ""}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group", "headers": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}}, "type": "group", "order": 0}, "active_importer": {"label": "", "type": "string", "order": 0, "value": "XLS", "description": ""}, "type": "group"}]]></parameters>
      <ports>
        <input key="port1" requiresdata="True" scheme="text" type="datasource" uuid="{b5bd731b-fa82-4e66-8681-4fc11197ea42}">
          <label>DataSource</label>
          <description>DataSource</description>
        </input>
        <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{761a762b-e283-4ef7-b1b9-11affd9dc102}">
          <label>TableOutput</label>
          <description>TableOutput</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.table.importtable" uuid="{bcdec3eb-6d72-49a5-9d7a-0ff3a4e85278}" width="50.0" x="1900.0" y="2175.0">
      <label>Table</label>
      <description>Data source as a table</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"custom_importer_data": {"XLS": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input", "type": "boolean", "order": 0, "value": true, "description": "Transpose the data."}, "data_start_row": {"description": "The first row where data is stored.", "value": 2, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": -1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "worksheet_name": {"description": "The worksheet to import from.", "passthrough": false, "list": ["Sheet1", "Sheet2"], "value": [1], "label": "Select worksheet", "editor": {"type": "combobox"}, "value_names": ["Sheet2"], "type": "list", "order": 0}, "headers": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "File has headers."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group"}, "HDF5": {"path_list": {"description": "The paths selected to import data from.", "passthrough": false, "list": [], "value": [], "label": "Selected paths", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "type": "group"}, "Auto": {"type": "group", "order": 0, "label": ""}, "label": "", "SQL": {"type": "group"}, "Table": {"type": "group"}, "CSV": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "source_coding": {"label": "", "type": "string", "order": 0, "description": ""}, "data_start_row": {"description": "The first row where data is stored.", "value": 1, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": 0, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input data", "type": "boolean", "order": 0, "value": false, "description": "Transpose the data."}, "other_delimiter": {"label": "", "type": "string", "order": 0, "value": " ", "description": "Enter other delimiter than the standard ones."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "double_quotations": {"label": "Remove double quotations", "type": "boolean", "order": 0, "value": false, "description": "Remove double quotations in importation."}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": -500}, "type": "integer", "order": 0}, "delimiter": {"label": "", "type": "string", "order": 0, "description": ""}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group", "headers": {"label": "", "type": "boolean", "order": 0, "description": "File has headers."}}, "type": "group", "order": 0}, "active_importer": {"label": "", "type": "string", "order": 0, "value": "XLS", "description": ""}, "type": "group"}]]></parameters>
      <ports>
        <input key="port1" requiresdata="True" scheme="text" type="datasource" uuid="{b5bd731b-fa82-4e66-8681-4fc11197ea42}">
          <label>DataSource</label>
          <description>DataSource</description>
        </input>
        <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{761a762b-e283-4ef7-b1b9-11affd9dc102}">
          <label>TableOutput</label>
          <description>TableOutput</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.datasources.filedatasource" uuid="{c7aa5be9-32df-43ac-beba-f5a82d4926aa}" width="50.0" x="1775.0" y="2375.0">
      <label>Single Data Column, Header</label>
      <description>Select a data source.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"db_password": {"label": "Password", "type": "string", "order": 6, "value": "", "description": "A valid password for the selected user."}, "filename": {"description": "A filename including path if needed", "value": "data/single_data_column_with_header.xls", "label": "Filename", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "type": "string", "order": 1}, "db_driver": {"description": "Database driver to use.", "passthrough": false, "list": ["SQL Server"], "value": [0], "label": "Database driver", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 2}, "db_connection_string": {"label": "Connection string", "type": "string", "order": 7, "value": "", "description": "A connection string that will override other settings."}, "db_user": {"label": "User", "type": "string", "order": 5, "value": "", "description": "A valid database user."}, "db_databasename": {"label": "Database name", "type": "string", "order": 4, "value": "", "description": "The name of the database."}, "db_servername": {"label": "Server name", "type": "string", "order": 3, "value": "", "description": "A valid name to a database server."}, "use_relative_path": {"label": "Use relative path", "type": "boolean", "order": 0, "value": true, "description": "Use the relative path to the file."}, "type": "group", "datasource_type": {"description": "Type of datasource.", "passthrough": false, "list": ["File", "Database"], "value": [0], "label": "Datasource type", "value_names": [], "type": "list", "order": 999}}]]></parameters>
      <ports>
        <output key="port1" requiresdata="False" scheme="text" type="datasource" uuid="{66e62f92-bcdf-42b3-8cdf-afbbea43b4c3}">
          <label>None</label>
          <description>None</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.table.functionselectortable" uuid="{cfd598be-7d4f-484f-bb43-cfb789b5d981}" width="50.0" x="2925.0" y="2100.0">
      <label>F(x) Table</label>
      <description>Select and apply functions to a Table.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2012 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"type": "group", "clean_output": {"label": "Clean output", "type": "boolean", "order": 0, "value": false, "description": "Do not copy the input data to the output."}, "selected_functions": {"description": "Select the functions to apply.", "passthrough": true, "list": ["TestColumnDataTypes", "TestNoColumns", "TestSignalLengths"], "value": [], "label": "Select functions", "editor": {"buttons": true, "filter": true, "selection": "multi", "type": "listview", "passthrough": true}, "value_names": [], "type": "list", "order": 1}}]]></parameters>
      <ports>
        <input key="port1" requiresdata="True" scheme="text" type="datasource" uuid="{35003650-6383-4a4e-9b88-4a9d1adffad1}">
          <label>None</label>
          <description>None</description>
        </input>
        <input key="port2" requiresdata="False" scheme="hdf5" type="table" uuid="{496ebd4f-30cc-4b16-bf50-fd8e5bc65ba6}">
          <label>None</label>
          <description>None</description>
        </input>
        <output key="port3" requiresdata="False" scheme="hdf5" type="table" uuid="{043bdfd7-bf22-4617-9ff8-9a542f8e120d}">
          <label>None</label>
          <description>None</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.table.importtable" uuid="{e965d338-55f0-43b8-a883-b0deae35ea58}" width="50.0" x="1900.0" y="2275.0">
      <label>Table</label>
      <description>Data source as a table</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"custom_importer_data": {"XLS": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input", "type": "boolean", "order": 0, "value": true, "description": "Transpose the data."}, "data_start_row": {"description": "The first row where data is stored.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": -1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "worksheet_name": {"description": "The worksheet to import from.", "passthrough": false, "list": ["Sheet1", "Sheet2"], "value": [1], "label": "Select worksheet", "editor": {"type": "combobox"}, "value_names": ["Sheet2"], "type": "list", "order": 0}, "headers": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group"}, "HDF5": {"path_list": {"description": "The paths selected to import data from.", "passthrough": false, "list": [], "value": [], "label": "Selected paths", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "type": "group"}, "Auto": {"type": "group", "order": 0, "label": ""}, "label": "", "SQL": {"type": "group"}, "Table": {"type": "group"}, "CSV": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "source_coding": {"label": "", "type": "string", "order": 0, "description": ""}, "data_start_row": {"description": "The first row where data is stored.", "value": 1, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": 0, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input data", "type": "boolean", "order": 0, "value": false, "description": "Transpose the data."}, "other_delimiter": {"label": "", "type": "string", "order": 0, "value": " ", "description": "Enter other delimiter than the standard ones."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "double_quotations": {"label": "Remove double quotations", "type": "boolean", "order": 0, "value": false, "description": "Remove double quotations in importation."}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": -500}, "type": "integer", "order": 0}, "delimiter": {"label": "", "type": "string", "order": 0, "description": ""}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group", "headers": {"label": "", "type": "boolean", "order": 0, "description": "File has headers."}}, "type": "group", "order": 0}, "active_importer": {"label": "", "type": "string", "order": 0, "value": "XLS", "description": ""}, "type": "group"}]]></parameters>
      <ports>
        <input key="port1" requiresdata="True" scheme="text" type="datasource" uuid="{b5bd731b-fa82-4e66-8681-4fc11197ea42}">
          <label>DataSource</label>
          <description>DataSource</description>
        </input>
        <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{761a762b-e283-4ef7-b1b9-11affd9dc102}">
          <label>TableOutput</label>
          <description>TableOutput</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.table.importtable" uuid="{eb2fcd53-86b5-419c-b620-3944258650a2}" width="50.0" x="2550.0" y="2200.0">
      <label>Table</label>
      <description>Data source as a table</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"custom_importer_data": {"XLS": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input", "type": "boolean", "order": 0, "value": false, "description": "Transpose the data."}, "data_start_row": {"description": "The first row where data is stored.", "value": 2, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": 2, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "worksheet_name": {"description": "The worksheet to import from.", "passthrough": false, "list": ["Tabell1", "Tabell2", "Tabell3"], "value": [0], "label": "Select worksheet", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "headers": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "File has headers."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group"}, "HDF5": {"path_list": {"description": "The paths selected to import data from.", "passthrough": false, "list": [], "value": [], "label": "Selected paths", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "type": "group"}, "Auto": {"type": "group", "order": 0, "label": ""}, "label": "", "SQL": {"type": "group"}, "Table": {"type": "group"}, "CSV": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "source_coding": {"label": "", "type": "string", "order": 0, "description": ""}, "data_start_row": {"description": "The first row where data is stored.", "value": 1, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": 0, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input data", "type": "boolean", "order": 0, "value": false, "description": "Transpose the data."}, "other_delimiter": {"label": "", "type": "string", "order": 0, "value": " ", "description": "Enter other delimiter than the standard ones."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "double_quotations": {"label": "Remove double quotations", "type": "boolean", "order": 0, "value": false, "description": "Remove double quotations in importation."}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": -500}, "type": "integer", "order": 0}, "delimiter": {"label": "", "type": "string", "order": 0, "description": ""}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group", "headers": {"label": "", "type": "boolean", "order": 0, "description": "File has headers."}}, "type": "group", "order": 0}, "active_importer": {"label": "", "type": "string", "order": 0, "value": "XLS", "description": ""}, "type": "group"}]]></parameters>
      <ports>
        <input key="port1" requiresdata="True" scheme="text" type="datasource" uuid="{66797410-e08c-4b8e-b789-cc6806d66ab2}">
          <label>DataSource</label>
          <description>DataSource</description>
        </input>
        <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{97f3266b-1d64-4e65-8f4b-62b965982da0}">
          <label>TableOutput</label>
          <description>TableOutput</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.datasources.filedatasource" uuid="{fa781cfc-34eb-4739-b422-efa5edcdc07f}" width="50.0" x="2050.0" y="2100.0">
      <label>Datasource</label>
      <description>Select a data source.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"db_password": {"label": "Password", "type": "string", "order": 6, "value": "", "description": "A valid password for the selected user."}, "filename": {"description": "A filename including path if needed", "value": "data/import_export_xls.xls", "label": "Filename", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "type": "string", "order": 1}, "db_driver": {"description": "Database driver to use.", "passthrough": false, "list": ["SQL Server"], "value": [0], "label": "Database driver", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 2}, "db_connection_string": {"label": "Connection string", "type": "string", "order": 7, "value": "", "description": "A connection string that will override other settings."}, "db_user": {"label": "User", "type": "string", "order": 5, "value": "", "description": "A valid database user."}, "db_databasename": {"label": "Database name", "type": "string", "order": 4, "value": "", "description": "The name of the database."}, "db_servername": {"label": "Server name", "type": "string", "order": 3, "value": "", "description": "A valid name to a database server."}, "use_relative_path": {"label": "Use relative path", "type": "boolean", "order": 0, "value": true, "description": "Use the relative path to the file."}, "type": "group", "datasource_type": {"description": "Type of datasource.", "passthrough": false, "list": ["File", "Database"], "value": [0], "label": "Datasource type", "value_names": [], "type": "list", "order": 999}}]]></parameters>
      <ports>
        <output key="port1" requiresdata="False" scheme="text" type="datasource" uuid="{7aa302da-3fe6-4ab2-812d-77caa9451325}">
          <label>None</label>
          <description>None</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.table.importtable" uuid="{fa986cdf-c0f5-4c2a-8f2e-fe3b06b9473e}" width="50.0" x="1900.0" y="2375.0">
      <label>Table</label>
      <description>Data source as a table</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"custom_importer_data": {"XLS": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input", "type": "boolean", "order": 0, "value": true, "description": "Transpose the data."}, "data_start_row": {"description": "The first row where data is stored.", "value": 2, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": -1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "worksheet_name": {"description": "The worksheet to import from.", "passthrough": false, "list": ["Sheet1", "Sheet2"], "value": [1], "label": "Select worksheet", "editor": {"type": "combobox"}, "value_names": ["Sheet2"], "type": "list", "order": 0}, "headers": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "File has headers."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group"}, "HDF5": {"path_list": {"description": "The paths selected to import data from.", "passthrough": false, "list": [], "value": [], "label": "Selected paths", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "type": "group"}, "Auto": {"type": "group", "order": 0, "label": ""}, "label": "", "SQL": {"type": "group"}, "Table": {"type": "group"}, "CSV": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "source_coding": {"label": "", "type": "string", "order": 0, "description": ""}, "data_start_row": {"description": "The first row where data is stored.", "value": 1, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": 0, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input data", "type": "boolean", "order": 0, "value": false, "description": "Transpose the data."}, "other_delimiter": {"label": "", "type": "string", "order": 0, "value": " ", "description": "Enter other delimiter than the standard ones."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "double_quotations": {"label": "Remove double quotations", "type": "boolean", "order": 0, "value": false, "description": "Remove double quotations in importation."}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": -500}, "type": "integer", "order": 0}, "delimiter": {"label": "", "type": "string", "order": 0, "description": ""}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group", "headers": {"label": "", "type": "boolean", "order": 0, "description": "File has headers."}}, "type": "group", "order": 0}, "active_importer": {"label": "", "type": "string", "order": 0, "value": "XLS", "description": ""}, "type": "group"}]]></parameters>
      <ports>
        <input key="port1" requiresdata="True" scheme="text" type="datasource" uuid="{b5bd731b-fa82-4e66-8681-4fc11197ea42}">
          <label>DataSource</label>
          <description>DataSource</description>
        </input>
        <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{761a762b-e283-4ef7-b1b9-11affd9dc102}">
          <label>TableOutput</label>
          <description>TableOutput</description>
        </output>
      </ports>
    </node>
    <connection uuid="{203a6fce-ff58-43ab-a3c3-e795077d461b}">
      <source node="{2539bc82-1f24-44cc-994c-7f7537544c90}" port="{2d457fa3-8db2-4a3a-a89d-c329c93c1e91}"/>
      <destination node="{93f64563-3292-468f-80bd-33a09e28e900}" port="{7fca9af4-70f2-42e3-b9d9-5427f60c4be5}"/>
    </connection>
    <connection uuid="{3219ce8c-2064-48a3-b468-da6b23c014da}">
      <source node="{ac6b7503-d7cf-4d45-b632-d52eafde9c6d}" port="{1e47f2c7-6bd5-4ddf-b759-baf84df3d246}"/>
      <destination node="{eb2fcd53-86b5-419c-b620-3944258650a2}" port="{66797410-e08c-4b8e-b789-cc6806d66ab2}"/>
    </connection>
    <connection uuid="{3d20afca-acbd-4489-a653-d44d485d0509}">
      <source node="{fa781cfc-34eb-4739-b422-efa5edcdc07f}" port="{7aa302da-3fe6-4ab2-812d-77caa9451325}"/>
      <destination node="{6aab25aa-0f02-480f-b20e-643fc71bd7ea}" port="{b0e0ef05-8722-441a-bf58-1d2e79434b13}"/>
    </connection>
    <connection uuid="{3d351d49-c0d1-4814-935d-209f453c2d7b}">
      <source node="{c7aa5be9-32df-43ac-beba-f5a82d4926aa}" port="{66e62f92-bcdf-42b3-8cdf-afbbea43b4c3}"/>
      <destination node="{fa986cdf-c0f5-4c2a-8f2e-fe3b06b9473e}" port="{b5bd731b-fa82-4e66-8681-4fc11197ea42}"/>
    </connection>
    <connection uuid="{3fb5de6d-1856-4395-a36a-0874ef51a459}">
      <source node="{508b6f21-fdc4-49c3-9c36-42e6f423d3fa}" port="{9645df2f-ed79-4f1b-a4ea-3e094a4681b8}"/>
      <destination node="{bcdec3eb-6d72-49a5-9d7a-0ff3a4e85278}" port="{b5bd731b-fa82-4e66-8681-4fc11197ea42}"/>
    </connection>
    <connection uuid="{5ad86375-6cb9-4a0d-99bd-3cb908d066c7}">
      <source node="{b238dd7e-6111-4775-9b8d-22251374a04d}" port="{f70d9a52-ed28-4389-a871-b19a5405a449}"/>
      <destination node="{2539bc82-1f24-44cc-994c-7f7537544c90}" port="{e5627625-86d2-4378-a26e-ab10ceeaa760}"/>
    </connection>
    <connection uuid="{620445a4-64bd-4ea0-b1ae-baf90d9ace07}">
      <source node="{2ab64bfc-e1b5-42b2-a76b-b488b91bf242}" port="{73f89fb0-f888-4c76-8dc4-88fedd1988af}"/>
      <destination node="{851ef363-ac2a-4d87-b924-b9c3e1319c19}" port="{b5bd731b-fa82-4e66-8681-4fc11197ea42}"/>
    </connection>
    <connection uuid="{7a382475-e9f4-44fc-87f3-e61cec04ac00}">
      <source node="{6aab25aa-0f02-480f-b20e-643fc71bd7ea}" port="{b70d2500-7758-49f4-b0c7-0f5330bc1c0b}"/>
      <destination node="{31cc3be6-4e0a-4d89-9b69-77ec5425d2f6}" port="{ef45d3da-f381-42a3-b209-17fdb992cf1c}"/>
    </connection>
    <connection uuid="{8c82469c-7b16-4e1e-8fb3-4a69c2f666d9}">
      <source node="{01c083bb-7f8c-4b73-9826-78dd584079f2}" port="{7f7b7208-5a9d-45ac-b059-b27aca9b5968}"/>
      <destination node="{b238dd7e-6111-4775-9b8d-22251374a04d}" port="{c5207e2b-09bb-49ff-8df3-b520bf7f4ea0}"/>
    </connection>
    <connection uuid="{9e31a3f6-f4ee-46ef-8100-d868f3d6b721}">
      <source node="{2c4a3ea8-898a-4116-b69f-208ff69f5977}" port="{3c37d596-79d1-47a2-9320-19fddb141083}"/>
      <destination node="{cfd598be-7d4f-484f-bb43-cfb789b5d981}" port="{35003650-6383-4a4e-9b88-4a9d1adffad1}"/>
    </connection>
    <connection uuid="{a05d809d-336b-47db-9195-d911cb40fbe8}">
      <source node="{93f64563-3292-468f-80bd-33a09e28e900}" port="{34d84a54-3a07-4bc9-b30c-fef6708a166c}"/>
      <destination node="{cfd598be-7d4f-484f-bb43-cfb789b5d981}" port="{496ebd4f-30cc-4b16-bf50-fd8e5bc65ba6}"/>
    </connection>
    <connection uuid="{a6fa5eda-b690-4d2d-aff0-122aa4cabaf6}">
      <source node="{9509423a-c68e-4a26-821b-72c5d5b7740f}" port="{9908f2ad-95a0-41a1-956e-36c78609f382}"/>
      <destination node="{31cc3be6-4e0a-4d89-9b69-77ec5425d2f6}" port="{d6d9085a-42f6-4e2f-8970-65be3da56c7d}"/>
    </connection>
    <connection uuid="{b644d64b-e84b-44d0-8c00-ffaf41e85064}">
      <source node="{8baaa432-f463-4f1e-9c8f-ec1e703d9715}" port="{b6bbd4e3-c5ad-47a3-ac62-42f0ca15c2fe}"/>
      <destination node="{b4e8cbf0-456d-48e6-92fb-82ae75d6e426}" port="{b5bd731b-fa82-4e66-8681-4fc11197ea42}"/>
    </connection>
    <connection uuid="{bdb7560c-7201-4788-946d-5d89653af448}">
      <source node="{3aaa7925-1ecd-4ac0-b5b7-a6d6f347f72d}" port="{356a27cb-b7e8-494c-8fca-764b23957757}"/>
      <destination node="{e965d338-55f0-43b8-a883-b0deae35ea58}" port="{b5bd731b-fa82-4e66-8681-4fc11197ea42}"/>
    </connection>
    <connection uuid="{e42d5b7c-deb5-49e2-bc9c-659869b01a08}">
      <source node="{7745a413-330b-45ec-a750-553a134496b2}" port="{3e359e20-ee2d-4cc2-97de-16a1cecdf49e}"/>
      <destination node="{08c8f6e3-5585-4a54-97a2-19c6737cdca2}" port="{b5bd731b-fa82-4e66-8681-4fc11197ea42}"/>
    </connection>
    <connection uuid="{f31c049b-b15d-4809-849d-d77f3ad68390}">
      <source node="{31cc3be6-4e0a-4d89-9b69-77ec5425d2f6}" port="{7c1afeca-255a-47c9-8fad-b81441d6cfef}"/>
      <destination node="{01c083bb-7f8c-4b73-9826-78dd584079f2}" port="{c35fd21b-7fda-48f7-a398-995ece313e41}"/>
    </connection>
  </flow>
  <flow cls="Flow" height="50.0" id="" is_locked="False" uuid="{cb4ffece-ad66-4a69-89fc-0d46ae852098}" width="50.0" x="1975.96" y="2392.31">
    <label>Test_of_ordinary_xls</label>
    <description></description>
    <author>Unknown</author>
    <copyright></copyright>
    <version>1.0</version>
    <source></source>
    <ports/>
    <aggregation type="json"><![CDATA[{}]]></aggregation>
    <parameters type="json"><![CDATA[{"environment": {}, "data": {"environment": {}}, "type": "json"}]]></parameters>
    <node height="50.0" id="org.sysess.sympathy.datasources.filedatasource" uuid="{02fb3fc4-e07b-4ea6-a361-1015a6b40e7f}" width="50.0" x="2250.0" y="2100.0">
      <label>Datasource</label>
      <description>Select a data source.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"db_password": {"label": "Password", "type": "string", "order": 6, "value": "", "description": "A valid password for the selected user."}, "filename": {"description": "A filename including path if needed", "value": "data/import_export_xls.py", "label": "Filename", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "type": "string", "order": 1}, "db_driver": {"description": "Database driver to use.", "passthrough": false, "list": ["SQL Server"], "value": [0], "label": "Database driver", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 2}, "db_connection_string": {"label": "Connection string", "type": "string", "order": 7, "value": "", "description": "A connection string that will override other settings."}, "db_user": {"label": "User", "type": "string", "order": 5, "value": "", "description": "A valid database user."}, "db_databasename": {"label": "Database name", "type": "string", "order": 4, "value": "", "description": "The name of the database."}, "db_servername": {"label": "Server name", "type": "string", "order": 3, "value": "", "description": "A valid name to a database server."}, "use_relative_path": {"label": "Use relative path", "type": "boolean", "order": 0, "value": true, "description": "Use the relative path to the file."}, "type": "group", "datasource_type": {"description": "Type of datasource.", "passthrough": false, "list": ["File", "Database"], "value": [0], "label": "Datasource type", "value_names": [], "type": "list", "order": 999}}]]></parameters>
      <ports>
        <output key="port1" requiresdata="False" scheme="text" type="datasource" uuid="{3c37d596-79d1-47a2-9320-19fddb141083}">
          <label>None</label>
          <description>None</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.table.importtable" uuid="{05cc2519-2d72-4aea-bf05-3615bd13d2bd}" width="50.0" x="1375.0" y="2175.0">
      <label>Table</label>
      <description>Data source as a table</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"custom_importer_data": {"XLS": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input", "type": "boolean", "order": 0, "value": false, "description": "Transpose the data."}, "data_start_row": {"description": "The first row where data is stored.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": -1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "worksheet_name": {"description": "The worksheet to import from.", "passthrough": false, "list": ["Sheet1", "Sheet2"], "value": [0], "label": "Select worksheet", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "headers": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group"}, "HDF5": {"path_list": {"description": "The paths selected to import data from.", "passthrough": false, "list": [], "value": [], "label": "Selected paths", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "type": "group"}, "Auto": {"type": "group", "order": 0, "label": ""}, "label": "", "SQL": {"type": "group"}, "Table": {"type": "group"}, "CSV": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "source_coding": {"label": "", "type": "string", "order": 0, "description": ""}, "data_start_row": {"description": "The first row where data is stored.", "value": 1, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": 0, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input data", "type": "boolean", "order": 0, "value": false, "description": "Transpose the data."}, "other_delimiter": {"label": "", "type": "string", "order": 0, "value": " ", "description": "Enter other delimiter than the standard ones."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "double_quotations": {"label": "Remove double quotations", "type": "boolean", "order": 0, "value": false, "description": "Remove double quotations in importation."}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": -500}, "type": "integer", "order": 0}, "delimiter": {"label": "", "type": "string", "order": 0, "description": ""}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group", "headers": {"label": "", "type": "boolean", "order": 0, "description": "File has headers."}}, "type": "group", "order": 0}, "active_importer": {"label": "", "type": "string", "order": 0, "value": "XLS", "description": ""}, "type": "group"}]]></parameters>
      <ports>
        <input key="port1" requiresdata="True" scheme="text" type="datasource" uuid="{f1c126fb-2922-46f8-90f5-b4a6753d1071}">
          <label>DataSource</label>
          <description>DataSource</description>
        </input>
        <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{1e671e19-c8a7-4337-8cda-bdfaed7672f8}">
          <label>TableOutput</label>
          <description>TableOutput</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.table.importtable" uuid="{087692ca-6c71-4174-beaf-d61a8dd48010}" width="50.0" x="1375.0" y="2075.0">
      <label>Table</label>
      <description>Data source as a table</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"custom_importer_data": {"XLS": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input", "type": "boolean", "order": 0, "value": false, "description": "Transpose the data."}, "data_start_row": {"description": "The first row where data is stored.", "value": 2, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": -1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "worksheet_name": {"description": "The worksheet to import from.", "passthrough": false, "list": ["Sheet1", "Sheet2"], "value": [0], "label": "Select worksheet", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "headers": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "File has headers."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group"}, "HDF5": {"path_list": {"description": "The paths selected to import data from.", "passthrough": false, "list": [], "value": [], "label": "Selected paths", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "type": "group"}, "Auto": {"type": "group", "order": 0, "label": ""}, "label": "", "SQL": {"type": "group"}, "Table": {"type": "group"}, "CSV": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "source_coding": {"label": "", "type": "string", "order": 0, "description": ""}, "data_start_row": {"description": "The first row where data is stored.", "value": 1, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": 0, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input data", "type": "boolean", "order": 0, "value": false, "description": "Transpose the data."}, "other_delimiter": {"label": "", "type": "string", "order": 0, "value": " ", "description": "Enter other delimiter than the standard ones."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "double_quotations": {"label": "Remove double quotations", "type": "boolean", "order": 0, "value": false, "description": "Remove double quotations in importation."}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": -500}, "type": "integer", "order": 0}, "delimiter": {"label": "", "type": "string", "order": 0, "description": ""}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group", "headers": {"label": "", "type": "boolean", "order": 0, "description": "File has headers."}}, "type": "group", "order": 0}, "active_importer": {"label": "", "type": "string", "order": 0, "value": "XLS", "description": ""}, "type": "group"}]]></parameters>
      <ports>
        <input key="port1" requiresdata="True" scheme="text" type="datasource" uuid="{45c925c1-89e4-4f62-91f7-fd22f1ca82e6}">
          <label>DataSource</label>
          <description>DataSource</description>
        </input>
        <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{b8deeb2a-38aa-454d-9510-c7b9fec1b47d}">
          <label>TableOutput</label>
          <description>TableOutput</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.datasources.filedatasource" uuid="{0ed99f69-fd3c-45f6-a842-a685375e8324}" width="50.0" x="1225.0" y="2275.0">
      <label>Single Data Row, Header</label>
      <description>Select a data source.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"db_password": {"label": "Password", "type": "string", "order": 6, "value": "", "description": "A valid password for the selected user."}, "filename": {"description": "A filename including path if needed", "value": "data/single_data_row_with_header.xls", "label": "Filename", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "type": "string", "order": 1}, "db_driver": {"description": "Database driver to use.", "passthrough": false, "list": ["SQL Server"], "value": [0], "label": "Database driver", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 2}, "db_connection_string": {"label": "Connection string", "type": "string", "order": 7, "value": "", "description": "A connection string that will override other settings."}, "db_user": {"label": "User", "type": "string", "order": 5, "value": "", "description": "A valid database user."}, "db_databasename": {"label": "Database name", "type": "string", "order": 4, "value": "", "description": "The name of the database."}, "db_servername": {"label": "Server name", "type": "string", "order": 3, "value": "", "description": "A valid name to a database server."}, "use_relative_path": {"label": "Use relative path", "type": "boolean", "order": 0, "value": true, "description": "Use the relative path to the file."}, "type": "group", "datasource_type": {"description": "Type of datasource.", "passthrough": false, "list": ["File", "Database"], "value": [0], "label": "Datasource type", "value_names": [], "type": "list", "order": 999}}]]></parameters>
      <ports>
        <output key="port1" requiresdata="False" scheme="text" type="datasource" uuid="{9645df2f-ed79-4f1b-a4ea-3e094a4681b8}">
          <label>None</label>
          <description>None</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.datasources.filedatasource" uuid="{1783b34b-610e-4339-8bf4-8af8fc840088}" width="50.0" x="1225.0" y="2375.0">
      <label>Single Data Column</label>
      <description>Select a data source.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"db_password": {"label": "Password", "type": "string", "order": 6, "value": "", "description": "A valid password for the selected user."}, "filename": {"description": "A filename including path if needed", "value": "data/single_data_column.xls", "label": "Filename", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "type": "string", "order": 1}, "db_driver": {"description": "Database driver to use.", "passthrough": false, "list": ["SQL Server"], "value": [0], "label": "Database driver", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 2}, "db_connection_string": {"label": "Connection string", "type": "string", "order": 7, "value": "", "description": "A connection string that will override other settings."}, "db_user": {"label": "User", "type": "string", "order": 5, "value": "", "description": "A valid database user."}, "db_databasename": {"label": "Database name", "type": "string", "order": 4, "value": "", "description": "The name of the database."}, "db_servername": {"label": "Server name", "type": "string", "order": 3, "value": "", "description": "A valid name to a database server."}, "use_relative_path": {"label": "Use relative path", "type": "boolean", "order": 0, "value": true, "description": "Use the relative path to the file."}, "type": "group", "datasource_type": {"description": "Type of datasource.", "passthrough": false, "list": ["File", "Database"], "value": [0], "label": "Datasource type", "value_names": [], "type": "list", "order": 999}}]]></parameters>
      <ports>
        <output key="port1" requiresdata="False" scheme="text" type="datasource" uuid="{356a27cb-b7e8-494c-8fca-764b23957757}">
          <label>None</label>
          <description>None</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.table.importtable" uuid="{17c01114-c37b-4cef-ad76-46fdc03cc8b2}" width="50.0" x="1375.0" y="1975.0">
      <label>Table</label>
      <description>Data source as a table</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"custom_importer_data": {"XLS": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input", "type": "boolean", "order": 0, "value": false, "description": "Transpose the data."}, "data_start_row": {"description": "The first row where data is stored.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": -1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "worksheet_name": {"description": "The worksheet to import from.", "passthrough": false, "list": ["Sheet1"], "value": [0], "label": "Select worksheet", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "headers": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group"}, "HDF5": {"path_list": {"description": "The paths selected to import data from.", "passthrough": false, "list": [], "value": [], "label": "Selected paths", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "type": "group"}, "Auto": {"type": "group", "order": 0, "label": ""}, "label": "", "SQL": {"type": "group"}, "Table": {"type": "group"}, "CSV": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "source_coding": {"label": "", "type": "string", "order": 0, "description": ""}, "data_start_row": {"description": "The first row where data is stored.", "value": 1, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": 0, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input data", "type": "boolean", "order": 0, "value": false, "description": "Transpose the data."}, "other_delimiter": {"label": "", "type": "string", "order": 0, "value": " ", "description": "Enter other delimiter than the standard ones."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "double_quotations": {"label": "Remove double quotations", "type": "boolean", "order": 0, "value": false, "description": "Remove double quotations in importation."}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": -500}, "type": "integer", "order": 0}, "delimiter": {"label": "", "type": "string", "order": 0, "description": ""}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group", "headers": {"label": "", "type": "boolean", "order": 0, "description": "File has headers."}}, "type": "group", "order": 0}, "active_importer": {"label": "", "type": "string", "order": 0, "value": "XLS", "description": ""}, "type": "group"}]]></parameters>
      <ports>
        <input key="port1" requiresdata="True" scheme="text" type="datasource" uuid="{1870f2d1-348a-4b11-9a9b-8ef5df23da96}">
          <label>DataSource</label>
          <description>DataSource</description>
        </input>
        <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{33d47677-33c0-4a92-bb2e-922746080255}">
          <label>TableOutput</label>
          <description>TableOutput</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.datasources.filedatasource" uuid="{2661b894-a51f-4f42-914b-3975b2eb6870}" width="50.0" x="1225.0" y="2175.0">
      <label>Single Data Row</label>
      <description>Select a data source.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"db_password": {"label": "Password", "type": "string", "order": 6, "value": "", "description": "A valid password for the selected user."}, "filename": {"description": "A filename including path if needed", "value": "data/single_data_row.xls", "label": "Filename", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "type": "string", "order": 1}, "db_driver": {"description": "Database driver to use.", "passthrough": false, "list": ["SQL Server"], "value": [0], "label": "Database driver", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 2}, "db_connection_string": {"label": "Connection string", "type": "string", "order": 7, "value": "", "description": "A connection string that will override other settings."}, "db_user": {"label": "User", "type": "string", "order": 5, "value": "", "description": "A valid database user."}, "db_databasename": {"label": "Database name", "type": "string", "order": 4, "value": "", "description": "The name of the database."}, "db_servername": {"label": "Server name", "type": "string", "order": 3, "value": "", "description": "A valid name to a database server."}, "use_relative_path": {"label": "Use relative path", "type": "boolean", "order": 0, "value": true, "description": "Use the relative path to the file."}, "type": "group", "datasource_type": {"description": "Type of datasource.", "passthrough": false, "list": ["File", "Database"], "value": [0], "label": "Datasource type", "value_names": [], "type": "list", "order": 999}}]]></parameters>
      <ports>
        <output key="port1" requiresdata="False" scheme="text" type="datasource" uuid="{3e359e20-ee2d-4cc2-97de-16a1cecdf49e}">
          <label>None</label>
          <description>None</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.datasources.filedatasource" uuid="{37180ab1-df08-4994-a8a6-983558d0bf4d}" width="50.0" x="1225.0" y="1975.0">
      <label>Single Data Value</label>
      <description>Select a data source.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"db_password": {"label": "Password", "type": "string", "order": 6, "value": "", "description": "A valid password for the selected user."}, "filename": {"description": "A filename including path if needed", "value": "data/single_data_value.xls", "label": "Filename", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "type": "string", "order": 1}, "db_driver": {"description": "Database driver to use.", "passthrough": false, "list": ["SQL Server"], "value": [0], "label": "Database driver", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 2}, "db_connection_string": {"label": "Connection string", "type": "string", "order": 7, "value": "", "description": "A connection string that will override other settings."}, "db_user": {"label": "User", "type": "string", "order": 5, "value": "", "description": "A valid database user."}, "db_databasename": {"label": "Database name", "type": "string", "order": 4, "value": "", "description": "The name of the database."}, "db_servername": {"label": "Server name", "type": "string", "order": 3, "value": "", "description": "A valid name to a database server."}, "use_relative_path": {"label": "Use relative path", "type": "boolean", "order": 0, "value": true, "description": "Use the relative path to the file."}, "type": "group", "datasource_type": {"description": "Type of datasource.", "passthrough": false, "list": ["File", "Database"], "value": [0], "label": "Datasource type", "value_names": [], "type": "list", "order": 999}}]]></parameters>
      <ports>
        <output key="port1" requiresdata="False" scheme="text" type="datasource" uuid="{b6bbd4e3-c5ad-47a3-ac62-42f0ca15c2fe}">
          <label>None</label>
          <description>None</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.datasources.filedatasource" uuid="{38d441da-5ce4-4568-b1c0-565e0b51102d}" width="50.0" x="1625.0" y="2100.0">
      <label>Datasource</label>
      <description>Select a data source.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"db_password": {"label": "Password", "type": "string", "order": 6, "value": "", "description": "A valid password for the selected user."}, "filename": {"description": "A filename including path if needed", "value": "data/import_export_xls.py", "label": "Filename", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "type": "string", "order": 1}, "db_driver": {"description": "Database driver to use.", "passthrough": false, "list": ["SQL Server"], "value": [0], "label": "Database driver", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 2}, "db_connection_string": {"label": "Connection string", "type": "string", "order": 7, "value": "", "description": "A connection string that will override other settings."}, "db_user": {"label": "User", "type": "string", "order": 5, "value": "", "description": "A valid database user."}, "db_databasename": {"label": "Database name", "type": "string", "order": 4, "value": "", "description": "The name of the database."}, "db_servername": {"label": "Server name", "type": "string", "order": 3, "value": "", "description": "A valid name to a database server."}, "use_relative_path": {"label": "Use relative path", "type": "boolean", "order": 0, "value": true, "description": "Use the relative path to the file."}, "type": "group", "datasource_type": {"description": "Type of datasource.", "passthrough": false, "list": ["File", "Database"], "value": [0], "label": "Datasource type", "value_names": [], "type": "list", "order": 999}}]]></parameters>
      <ports>
        <output key="port1" requiresdata="False" scheme="text" type="datasource" uuid="{9908f2ad-95a0-41a1-956e-36c78609f382}">
          <label>None</label>
          <description>None</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.datasources.filedatasource" uuid="{3bb17bdb-784b-43fc-8fe6-389ea4466f92}" width="50.0" x="1500.0" y="2200.0">
      <label>Datasource</label>
      <description>Select a data source.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"db_password": {"label": "Password", "type": "string", "order": 6, "value": "", "description": "A valid password for the selected user."}, "filename": {"description": "A filename including path if needed", "value": "data/import_export_xls.xls", "label": "Filename", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "type": "string", "order": 1}, "db_driver": {"description": "Database driver to use.", "passthrough": false, "list": ["SQL Server"], "value": [0], "label": "Database driver", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 2}, "db_connection_string": {"label": "Connection string", "type": "string", "order": 7, "value": "", "description": "A connection string that will override other settings."}, "db_user": {"label": "User", "type": "string", "order": 5, "value": "", "description": "A valid database user."}, "db_databasename": {"label": "Database name", "type": "string", "order": 4, "value": "", "description": "The name of the database."}, "db_servername": {"label": "Server name", "type": "string", "order": 3, "value": "", "description": "A valid name to a database server."}, "use_relative_path": {"label": "Use relative path", "type": "boolean", "order": 0, "value": true, "description": "Use the relative path to the file."}, "type": "group", "datasource_type": {"description": "Type of datasource.", "passthrough": false, "list": ["File", "Database"], "value": [0], "label": "Datasource type", "value_names": [], "type": "list", "order": 999}}]]></parameters>
      <ports>
        <output key="port1" requiresdata="False" scheme="text" type="datasource" uuid="{7aa302da-3fe6-4ab2-812d-77caa9451325}">
          <label>None</label>
          <description>None</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.list.getitemtable" uuid="{5ae1f1a9-a10d-4822-9579-d627b5838e6f}" width="50.0" x="2250.0" y="2200.0">
      <label>Get Item Table</label>
      <description>Get an item from a list</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"type": "group", "combo": {"description": "List indexes.", "passthrough": false, "list": ["0"], "value": [0], "label": "Index", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 10}}]]></parameters>
      <ports>
        <input key="port1" requiresdata="False" scheme="hdf5" type="tables" uuid="{7fca9af4-70f2-42e3-b9d9-5427f60c4be5}">
          <label>None</label>
          <description>None</description>
        </input>
        <output key="port3" requiresdata="False" scheme="hdf5" type="table" uuid="{34d84a54-3a07-4bc9-b30c-fef6708a166c}">
          <label>None</label>
          <description>None</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.table.functionselectortable" uuid="{64b231e9-1391-4799-a7ce-2698a43f996b}" width="50.0" x="2375.0" y="2200.0">
      <label>F(x) Table</label>
      <description>Select and apply functions to a Table.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2012 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"type": "group", "clean_output": {"label": "Clean output", "type": "boolean", "order": 0, "value": false, "description": "Do not copy the input data to the output."}, "selected_functions": {"description": "Select the functions to apply.", "passthrough": true, "list": ["TestColumnDataTypes", "TestNoColumns", "TestSignalLengths"], "value": [0, 1, 2], "label": "Select functions", "editor": {"buttons": true, "filter": true, "selection": "multi", "type": "listview", "passthrough": true}, "value_names": ["TestColumnDataTypes", "TestNoColumns", "TestSignalLengths"], "type": "list", "order": 1}}]]></parameters>
      <ports>
        <input key="port1" requiresdata="True" scheme="text" type="datasource" uuid="{35003650-6383-4a4e-9b88-4a9d1adffad1}">
          <label>None</label>
          <description>None</description>
        </input>
        <input key="port2" requiresdata="False" scheme="hdf5" type="table" uuid="{496ebd4f-30cc-4b16-bf50-fd8e5bc65ba6}">
          <label>None</label>
          <description>None</description>
        </input>
        <output key="port3" requiresdata="False" scheme="hdf5" type="table" uuid="{043bdfd7-bf22-4617-9ff8-9a542f8e120d}">
          <label>None</label>
          <description>None</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.table.importtablemultiple" uuid="{6d9f345d-17c3-4081-ac81-6087734d6f90}" width="50.0" x="2125.0" y="2200.0">
      <label>Tables</label>
      <description>Import datasources as Tables.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"custom_importer_data": {"XLS": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input", "type": "boolean", "order": 0, "value": false, "description": "Transpose the data."}, "data_start_row": {"description": "The first row where data is stored.", "value": 2, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": -1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "worksheet_name": {"description": "The worksheet to import from.", "passthrough": false, "list": ["sheet1"], "value": [0], "label": "Select worksheet", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "headers": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "File has headers."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group"}, "HDF5": {"path_list": {"description": "The paths selected to import data from.", "passthrough": false, "list": [], "value": [], "label": "Selected paths", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "type": "group"}, "Auto": {"type": "group", "order": 0, "label": ""}, "label": "", "SQL": {"type": "group"}, "Table": {"type": "group"}, "CSV": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "source_coding": {"label": "", "type": "string", "order": 0, "description": ""}, "data_start_row": {"description": "The first row where data is stored.", "value": 1, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": 0, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input data", "type": "boolean", "order": 0, "value": false, "description": "Transpose the data."}, "other_delimiter": {"label": "", "type": "string", "order": 0, "value": " ", "description": "Enter other delimiter than the standard ones."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "double_quotations": {"label": "Remove double quotations", "type": "boolean", "order": 0, "value": false, "description": "Remove double quotations in importation."}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": -500}, "type": "integer", "order": 0}, "delimiter": {"label": "", "type": "string", "order": 0, "description": ""}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group", "headers": {"label": "", "type": "boolean", "order": 0, "description": "File has headers."}}, "type": "group", "order": 0}, "active_importer": {"label": "", "type": "string", "order": 0, "value": "Auto", "description": ""}, "type": "group"}]]></parameters>
      <ports>
        <input key="port1" requiresdata="True" scheme="text" type="datasources" uuid="{fce139a5-3c55-46da-8640-d8f84f7de088}">
          <label>DataSource</label>
          <description>DataSource</description>
        </input>
        <output key="port1" requiresdata="False" scheme="hdf5" type="tables" uuid="{a4e91d0a-04cd-4ded-a29d-378468f5a6ff}">
          <label>TableOutput</label>
          <description>TableOutput</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.table.importtable" uuid="{76e275f8-e759-4937-ad55-2ee73767e6e8}" width="50.0" x="1375.0" y="2475.0">
      <label>Table</label>
      <description>Data source as a table</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"custom_importer_data": {"XLS": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input", "type": "boolean", "order": 0, "value": false, "description": "Transpose the data."}, "data_start_row": {"description": "The first row where data is stored.", "value": 2, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": -1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "worksheet_name": {"description": "The worksheet to import from.", "passthrough": false, "list": ["Sheet1", "Sheet2"], "value": [0], "label": "Select worksheet", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "headers": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "File has headers."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group"}, "HDF5": {"path_list": {"description": "The paths selected to import data from.", "passthrough": false, "list": [], "value": [], "label": "Selected paths", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "type": "group"}, "Auto": {"type": "group", "order": 0, "label": ""}, "label": "", "SQL": {"type": "group"}, "Table": {"type": "group"}, "CSV": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "source_coding": {"label": "", "type": "string", "order": 0, "description": ""}, "data_start_row": {"description": "The first row where data is stored.", "value": 1, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": 0, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input data", "type": "boolean", "order": 0, "value": false, "description": "Transpose the data."}, "other_delimiter": {"label": "", "type": "string", "order": 0, "value": " ", "description": "Enter other delimiter than the standard ones."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "double_quotations": {"label": "Remove double quotations", "type": "boolean", "order": 0, "value": false, "description": "Remove double quotations in importation."}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": -500}, "type": "integer", "order": 0}, "delimiter": {"label": "", "type": "string", "order": 0, "description": ""}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group", "headers": {"label": "", "type": "boolean", "order": 0, "description": "File has headers."}}, "type": "group", "order": 0}, "active_importer": {"label": "", "type": "string", "order": 0, "value": "XLS", "description": ""}, "type": "group"}]]></parameters>
      <ports>
        <input key="port1" requiresdata="True" scheme="text" type="datasource" uuid="{2663b008-3535-4572-99dd-58d0ddd9a0da}">
          <label>DataSource</label>
          <description>DataSource</description>
        </input>
        <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{9a1767a0-fc7a-48c6-918a-50b59ba5b038}">
          <label>TableOutput</label>
          <description>TableOutput</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.table.importtable" uuid="{80dccc08-b5ce-47ac-9035-08e28c985723}" width="50.0" x="1625.0" y="2200.0">
      <label>Table</label>
      <description>Data source as a table</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"custom_importer_data": {"XLS": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input", "type": "boolean", "order": 0, "value": false, "description": "Transpose the data."}, "data_start_row": {"description": "The first row where data is stored.", "value": 2, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": -1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "worksheet_name": {"description": "The worksheet to import from.", "passthrough": false, "list": ["Tabell1", "Tabell2", "Tabell3"], "value": [0], "label": "Select worksheet", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "headers": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "File has headers."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group"}, "HDF5": {"path_list": {"description": "The paths selected to import data from.", "passthrough": false, "list": [], "value": [], "label": "Selected paths", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "type": "group"}, "Auto": {"type": "group", "order": 0, "label": ""}, "label": "", "SQL": {"type": "group"}, "Table": {"type": "group"}, "CSV": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "source_coding": {"label": "", "type": "string", "order": 0, "value": "", "description": ""}, "data_start_row": {"description": "The first row where data is stored.", "value": 1, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": 0, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input data", "type": "boolean", "order": 0, "value": false, "description": "Transpose the data."}, "other_delimiter": {"label": "", "type": "string", "order": 0, "value": " ", "description": "Enter other delimiter than the standard ones."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "double_quotations": {"label": "Remove double quotations", "type": "boolean", "order": 0, "value": false, "description": "Remove double quotations in importation."}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": -500}, "type": "integer", "order": 0}, "delimiter": {"label": "", "type": "string", "order": 0, "value": "", "description": ""}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group", "headers": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}}, "type": "group", "order": 0}, "active_importer": {"label": "", "type": "string", "order": 0, "value": "Auto", "description": ""}, "type": "group"}]]></parameters>
      <ports>
        <input key="port1" requiresdata="True" scheme="text" type="datasource" uuid="{a1eb7661-4173-47bb-af37-dcf99b518cbd}">
          <label>DataSource</label>
          <description>DataSource</description>
        </input>
        <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{e7300159-592f-40f4-bbd8-5c8123d1e5f3}">
          <label>TableOutput</label>
          <description>TableOutput</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.table.importtable" uuid="{89233047-83a8-4111-b960-d3aa69e1f573}" width="50.0" x="1375.0" y="2275.0">
      <label>Table</label>
      <description>Data source as a table</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"custom_importer_data": {"XLS": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input", "type": "boolean", "order": 0, "value": false, "description": "Transpose the data."}, "data_start_row": {"description": "The first row where data is stored.", "value": 2, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": -1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "worksheet_name": {"description": "The worksheet to import from.", "passthrough": false, "list": ["Sheet1", "Sheet2"], "value": [0], "label": "Select worksheet", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "headers": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "File has headers."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group"}, "HDF5": {"path_list": {"description": "The paths selected to import data from.", "passthrough": false, "list": [], "value": [], "label": "Selected paths", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "type": "group"}, "Auto": {"type": "group", "order": 0, "label": ""}, "label": "", "SQL": {"type": "group"}, "Table": {"type": "group"}, "CSV": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "source_coding": {"label": "", "type": "string", "order": 0, "description": ""}, "data_start_row": {"description": "The first row where data is stored.", "value": 1, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": 0, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input data", "type": "boolean", "order": 0, "value": false, "description": "Transpose the data."}, "other_delimiter": {"label": "", "type": "string", "order": 0, "value": " ", "description": "Enter other delimiter than the standard ones."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "double_quotations": {"label": "Remove double quotations", "type": "boolean", "order": 0, "value": false, "description": "Remove double quotations in importation."}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": -500}, "type": "integer", "order": 0}, "delimiter": {"label": "", "type": "string", "order": 0, "description": ""}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group", "headers": {"label": "", "type": "boolean", "order": 0, "description": "File has headers."}}, "type": "group", "order": 0}, "active_importer": {"label": "", "type": "string", "order": 0, "value": "XLS", "description": ""}, "type": "group"}]]></parameters>
      <ports>
        <input key="port1" requiresdata="True" scheme="text" type="datasource" uuid="{04f7c199-7483-44be-ad3f-b747c0b46efa}">
          <label>DataSource</label>
          <description>DataSource</description>
        </input>
        <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{4b9c1e82-759e-4474-9b55-f1f6fdb05b53}">
          <label>TableOutput</label>
          <description>TableOutput</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.table.importtable" uuid="{8a2d1189-1437-43ff-9048-0c50560fa623}" width="50.0" x="1375.0" y="2375.0">
      <label>Table</label>
      <description>Data source as a table</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"custom_importer_data": {"XLS": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input", "type": "boolean", "order": 0, "value": false, "description": "Transpose the data."}, "data_start_row": {"description": "The first row where data is stored.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": -1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "worksheet_name": {"description": "The worksheet to import from.", "passthrough": false, "list": ["Sheet1", "Sheet2"], "value": [0], "label": "Select worksheet", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "headers": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group"}, "HDF5": {"path_list": {"description": "The paths selected to import data from.", "passthrough": false, "list": [], "value": [], "label": "Selected paths", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "type": "group"}, "Auto": {"type": "group", "order": 0, "label": ""}, "label": "", "SQL": {"type": "group"}, "Table": {"type": "group"}, "CSV": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "source_coding": {"label": "", "type": "string", "order": 0, "description": ""}, "data_start_row": {"description": "The first row where data is stored.", "value": 1, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": 0, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input data", "type": "boolean", "order": 0, "value": false, "description": "Transpose the data."}, "other_delimiter": {"label": "", "type": "string", "order": 0, "value": " ", "description": "Enter other delimiter than the standard ones."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "double_quotations": {"label": "Remove double quotations", "type": "boolean", "order": 0, "value": false, "description": "Remove double quotations in importation."}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": -500}, "type": "integer", "order": 0}, "delimiter": {"label": "", "type": "string", "order": 0, "description": ""}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group", "headers": {"label": "", "type": "boolean", "order": 0, "description": "File has headers."}}, "type": "group", "order": 0}, "active_importer": {"label": "", "type": "string", "order": 0, "value": "XLS", "description": ""}, "type": "group"}]]></parameters>
      <ports>
        <input key="port1" requiresdata="True" scheme="text" type="datasource" uuid="{40f97b81-fc49-4940-a11b-e15e2769b341}">
          <label>DataSource</label>
          <description>DataSource</description>
        </input>
        <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{81dd41cf-d22a-4992-9894-21d785541f37}">
          <label>TableOutput</label>
          <description>TableOutput</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.table.table2tables" uuid="{9f5b1319-6522-45ab-9f2f-21ca1ff3edc2}" width="50.0" x="1875.0" y="2200.0">
      <label>Table2Tables</label>
      <description>Convert a single Table item to a list of Tables.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(c) 2013 Combine AB</copyright>
      <version>0.1</version>
      <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
      <ports>
        <input key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{c35fd21b-7fda-48f7-a398-995ece313e41}">
          <label>None</label>
          <description>None</description>
        </input>
        <output key="port1" requiresdata="False" scheme="hdf5" type="tables" uuid="{7f7b7208-5a9d-45ac-b059-b27aca9b5968}">
          <label>None</label>
          <description>None</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.datasources.filedatasource" uuid="{ade81282-112d-4670-adb9-74bc1f21a0dd}" width="50.0" x="1225.0" y="2475.0">
      <label>Single Data Column, Header</label>
      <description>Select a data source.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"db_password": {"label": "Password", "type": "string", "order": 6, "value": "", "description": "A valid password for the selected user."}, "filename": {"description": "A filename including path if needed", "value": "data/single_data_column_with_header.xls", "label": "Filename", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "type": "string", "order": 1}, "db_driver": {"description": "Database driver to use.", "passthrough": false, "list": ["SQL Server"], "value": [0], "label": "Database driver", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 2}, "db_connection_string": {"label": "Connection string", "type": "string", "order": 7, "value": "", "description": "A connection string that will override other settings."}, "db_user": {"label": "User", "type": "string", "order": 5, "value": "", "description": "A valid database user."}, "db_databasename": {"label": "Database name", "type": "string", "order": 4, "value": "", "description": "The name of the database."}, "db_servername": {"label": "Server name", "type": "string", "order": 3, "value": "", "description": "A valid name to a database server."}, "use_relative_path": {"label": "Use relative path", "type": "boolean", "order": 0, "value": true, "description": "Use the relative path to the file."}, "type": "group", "datasource_type": {"description": "Type of datasource.", "passthrough": false, "list": ["File", "Database"], "value": [0], "label": "Datasource type", "value_names": [], "type": "list", "order": 999}}]]></parameters>
      <ports>
        <output key="port1" requiresdata="False" scheme="text" type="datasource" uuid="{66e62f92-bcdf-42b3-8cdf-afbbea43b4c3}">
          <label>None</label>
          <description>None</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.table.importtable" uuid="{b1b08e4d-c759-4570-b06a-d549e1bf868e}" width="50.0" x="2000.0" y="2300.0">
      <label>Table</label>
      <description>Data source as a table</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"custom_importer_data": {"XLS": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input", "type": "boolean", "order": 0, "value": false, "description": "Transpose the data."}, "data_start_row": {"description": "The first row where data is stored.", "value": 2, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": 2, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "worksheet_name": {"description": "The worksheet to import from.", "passthrough": false, "list": ["worksheet"], "value": [0], "label": "Select worksheet", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "headers": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "File has headers."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group"}, "HDF5": {"path_list": {"description": "The paths selected to import data from.", "passthrough": false, "list": [], "value": [], "label": "Selected paths", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "type": "group"}, "Auto": {"type": "group", "order": 0, "label": ""}, "label": "", "SQL": {"type": "group"}, "Table": {"type": "group"}, "CSV": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "source_coding": {"label": "", "type": "string", "order": 0, "description": ""}, "data_start_row": {"description": "The first row where data is stored.", "value": 1, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": 0, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "transposed": {"label": "Transpose input data", "type": "boolean", "order": 0, "value": false, "description": "Transpose the data."}, "other_delimiter": {"label": "", "type": "string", "order": 0, "value": " ", "description": "Enter other delimiter than the standard ones."}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "double_quotations": {"label": "Remove double quotations", "type": "boolean", "order": 0, "value": false, "description": "Remove double quotations in importation."}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": -500}, "type": "integer", "order": 0}, "delimiter": {"label": "", "type": "string", "order": 0, "description": ""}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "units": {"label": "", "type": "boolean", "order": 0, "value": false, "description": "File has headers."}, "end_of_file": {"label": "", "type": "boolean", "order": 0, "value": true, "description": "Select all rows to the end of the file."}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group", "headers": {"label": "", "type": "boolean", "order": 0, "description": "File has headers."}}, "type": "group", "order": 0}, "active_importer": {"label": "", "type": "string", "order": 0, "value": "XLS", "description": ""}, "type": "group"}]]></parameters>
      <ports>
        <input key="port1" requiresdata="True" scheme="text" type="datasource" uuid="{702a5438-ee6a-49ad-ba20-6dc8fb493a13}">
          <label>DataSource</label>
          <description>DataSource</description>
        </input>
        <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{cb3bbe60-8f5d-4639-8fb8-84038d58f0ad}">
          <label>TableOutput</label>
          <description>TableOutput</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.datasources.filedatasource" uuid="{b23a1eeb-13dc-4605-84ea-f6418dae856e}" width="50.0" x="1875.0" y="2300.0">
      <label>Datasource</label>
      <description>Select a data source.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"db_password": {"description": "A valid password for the selected user.", "value": "", "label": "Password", "editor": null, "type": "string", "order": 6}, "filename": {"description": "A filename including path if needed", "value": "data/import_export_xls.xls", "label": "Filename", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "type": "string", "order": 1}, "db_driver": {"description": "Database driver to use.", "passthrough": false, "list": ["SQL Server"], "value": [0], "label": "Database driver", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 2}, "db_connection_string": {"description": "A connection string that will override other settings.", "value": "", "label": "Connection string", "editor": null, "type": "string", "order": 7}, "db_user": {"description": "A valid database user.", "value": "", "label": "User", "editor": null, "type": "string", "order": 5}, "db_databasename": {"description": "The name of the database.", "value": "", "label": "Database name", "editor": null, "type": "string", "order": 4}, "db_servername": {"description": "A valid name to a database server.", "value": "", "label": "Server name", "editor": null, "type": "string", "order": 3}, "use_relative_path": {"description": "Use the relative path to the file.", "value": true, "label": "Use relative path", "editor": null, "type": "boolean", "order": 0}, "type": "group", "datasource_type": {"description": "Type of datasource.", "passthrough": false, "list": ["File", "Database"], "value": [0], "label": "Datasource type", "editor": null, "value_names": [], "type": "list", "order": 999}}]]></parameters>
      <ports>
        <output key="port1" requiresdata="False" scheme="text" type="datasource" uuid="{1e47f2c7-6bd5-4ddf-b759-baf84df3d246}">
          <label>None</label>
          <description>None</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.export.exporttables" uuid="{b8c67769-3d0b-40ef-a73d-761ec372fd03}" width="50.0" x="2000.0" y="2200.0">
      <label>Export Tables</label>
      <description>Export Tables</description>
      <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
      <copyright>(c) 2013 Combine AB</copyright>
      <version>0.1</version>
      <parameters type="json"><![CDATA[{"directory": {"description": "Select the directory where to export the files.", "value": ".", "label": "Output directory", "editor": {"type": "dirname"}, "type": "string", "order": 0}, "type": "group", "active_exporter": {"label": "", "type": "string", "order": 0, "value": "XLS", "description": ""}, "custom_exporter_data": {"SQLite": {"filename_extension": {"label": "Filename extension", "type": "string", "order": 0, "value": "db", "description": ""}, "type": "group", "order": 0, "label": ""}, "HDF5": {"filename_extension": {"label": "Filename extension", "type": "string", "order": 0, "value": "h5", "description": ""}, "type": "group", "order": 0, "label": ""}, "XLS": {"filename_extension": {"label": "Filename extension", "type": "string", "order": 0, "value": "xls", "description": ""}, "type": "group", "order": 0, "label": ""}, "label": "", "SQL": {"table_name": {"label": "Table name", "type": "string", "order": 0, "value": "", "description": "The table name used when exporting."}, "label": "", "drop_table": {"label": "Drop table", "type": "boolean", "order": 0, "value": false, "description": "Drop table before adding data."}, "use_ntext": {"label": "Use ntext", "type": "boolean", "order": 0, "value": false, "description": "Use ntext instead of nvarchar."}, "connection_string": {"label": "Connection string", "type": "string", "order": 0, "value": "", "description": "String used by pyodbc to make a connection."}, "type": "group", "order": 0, "filename_extension": {"label": "Filename extension", "type": "string", "order": 0, "value": "", "description": ""}}, "CSV": {"filename_extension": {"label": "Filename extension", "type": "string", "order": 0, "value": "csv", "description": ""}, "type": "group", "order": 0, "label": ""}, "type": "group", "order": 0}, "filename": {"label": "Filename", "type": "string", "order": 0, "value": "exported_test_xls", "description": "Filename without extension."}}]]></parameters>
      <ports>
        <input key="port0" requiresdata="False" scheme="hdf5" type="tables" uuid="{c5207e2b-09bb-49ff-8df3-b520bf7f4ea0}">
          <label>None</label>
          <description>None</description>
        </input>
        <output key="port0" requiresdata="False" scheme="text" type="datasources" uuid="{f70d9a52-ed28-4389-a871-b19a5405a449}">
          <label>None</label>
          <description>None</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.table.functionselectortable" uuid="{ce9bc5b6-38ed-4604-b6ee-45fdec28e520}" width="50.0" x="1750.0" y="2200.0">
      <label>F(x) Table</label>
      <description>Select and apply functions to a Table.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2012 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"type": "group", "clean_output": {"label": "Clean output", "type": "boolean", "order": 0, "value": false, "description": "Do not copy the input data to the output."}, "selected_functions": {"description": "Select the functions to apply.", "passthrough": true, "list": ["TestColumnDataTypes", "TestNoColumns", "TestSignalLengths"], "value": [0, 1, 2], "label": "Select functions", "editor": {"buttons": true, "filter": true, "selection": "multi", "type": "listview", "passthrough": true}, "value_names": ["TestColumnDataTypes", "TestNoColumns", "TestSignalLengths"], "type": "list", "order": 1}}]]></parameters>
      <ports>
        <input key="port1" requiresdata="True" scheme="text" type="datasource" uuid="{d6d9085a-42f6-4e2f-8970-65be3da56c7d}">
          <label>None</label>
          <description>None</description>
        </input>
        <input key="port2" requiresdata="False" scheme="hdf5" type="table" uuid="{ef45d3da-f381-42a3-b209-17fdb992cf1c}">
          <label>None</label>
          <description>None</description>
        </input>
        <output key="port3" requiresdata="False" scheme="hdf5" type="table" uuid="{7c1afeca-255a-47c9-8fad-b81441d6cfef}">
          <label>None</label>
          <description>None</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.datasources.filedatasource" uuid="{f2ae20f8-dea8-47b5-b281-aa71512b7eff}" width="50.0" x="1225.0" y="2075.0">
      <label>Single Data Value, Header</label>
      <description>Select a data source.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"db_password": {"label": "Password", "type": "string", "order": 6, "value": "", "description": "A valid password for the selected user."}, "filename": {"description": "A filename including path if needed", "value": "data/single_data_value_with_header.xls", "label": "Filename", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "type": "string", "order": 1}, "db_driver": {"description": "Database driver to use.", "passthrough": false, "list": ["SQL Server"], "value": [0], "label": "Database driver", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 2}, "db_connection_string": {"label": "Connection string", "type": "string", "order": 7, "value": "", "description": "A connection string that will override other settings."}, "db_user": {"label": "User", "type": "string", "order": 5, "value": "", "description": "A valid database user."}, "db_databasename": {"label": "Database name", "type": "string", "order": 4, "value": "", "description": "The name of the database."}, "db_servername": {"label": "Server name", "type": "string", "order": 3, "value": "", "description": "A valid name to a database server."}, "use_relative_path": {"label": "Use relative path", "type": "boolean", "order": 0, "value": true, "description": "Use the relative path to the file."}, "type": "group", "datasource_type": {"description": "Type of datasource.", "passthrough": false, "list": ["File", "Database"], "value": [0], "label": "Datasource type", "value_names": [], "type": "list", "order": 999}}]]></parameters>
      <ports>
        <output key="port1" requiresdata="False" scheme="text" type="datasource" uuid="{73f89fb0-f888-4c76-8dc4-88fedd1988af}">
          <label>None</label>
          <description>None</description>
        </output>
      </ports>
    </node>
    <connection uuid="{14f02f60-4b4a-4aab-89c9-11d33cde5c61}">
      <source node="{6d9f345d-17c3-4081-ac81-6087734d6f90}" port="{a4e91d0a-04cd-4ded-a29d-378468f5a6ff}"/>
      <destination node="{5ae1f1a9-a10d-4822-9579-d627b5838e6f}" port="{7fca9af4-70f2-42e3-b9d9-5427f60c4be5}"/>
    </connection>
    <connection uuid="{1b1861eb-55eb-482d-bc26-241823491d55}">
      <source node="{b23a1eeb-13dc-4605-84ea-f6418dae856e}" port="{1e47f2c7-6bd5-4ddf-b759-baf84df3d246}"/>
      <destination node="{b1b08e4d-c759-4570-b06a-d549e1bf868e}" port="{702a5438-ee6a-49ad-ba20-6dc8fb493a13}"/>
    </connection>
    <connection uuid="{33f31a2d-0ee9-4629-a078-4ee8ac8c3f6a}">
      <source node="{0ed99f69-fd3c-45f6-a842-a685375e8324}" port="{9645df2f-ed79-4f1b-a4ea-3e094a4681b8}"/>
      <destination node="{89233047-83a8-4111-b960-d3aa69e1f573}" port="{04f7c199-7483-44be-ad3f-b747c0b46efa}"/>
    </connection>
    <connection uuid="{48b1cb9f-615f-47f9-ba90-782a00ce56a7}">
      <source node="{80dccc08-b5ce-47ac-9035-08e28c985723}" port="{e7300159-592f-40f4-bbd8-5c8123d1e5f3}"/>
      <destination node="{ce9bc5b6-38ed-4604-b6ee-45fdec28e520}" port="{ef45d3da-f381-42a3-b209-17fdb992cf1c}"/>
    </connection>
    <connection uuid="{501efa15-a82b-4385-9f8b-a4bfed71e5d3}">
      <source node="{ade81282-112d-4670-adb9-74bc1f21a0dd}" port="{66e62f92-bcdf-42b3-8cdf-afbbea43b4c3}"/>
      <destination node="{76e275f8-e759-4937-ad55-2ee73767e6e8}" port="{2663b008-3535-4572-99dd-58d0ddd9a0da}"/>
    </connection>
    <connection uuid="{5b064293-3c28-4e57-9880-70f8be0bd6e5}">
      <source node="{3bb17bdb-784b-43fc-8fe6-389ea4466f92}" port="{7aa302da-3fe6-4ab2-812d-77caa9451325}"/>
      <destination node="{80dccc08-b5ce-47ac-9035-08e28c985723}" port="{a1eb7661-4173-47bb-af37-dcf99b518cbd}"/>
    </connection>
    <connection uuid="{72244ff4-1e66-4319-a457-5239de10bceb}">
      <source node="{37180ab1-df08-4994-a8a6-983558d0bf4d}" port="{b6bbd4e3-c5ad-47a3-ac62-42f0ca15c2fe}"/>
      <destination node="{17c01114-c37b-4cef-ad76-46fdc03cc8b2}" port="{1870f2d1-348a-4b11-9a9b-8ef5df23da96}"/>
    </connection>
    <connection uuid="{8c82469c-7b16-4e1e-8fb3-4a69c2f666d9}">
      <source node="{9f5b1319-6522-45ab-9f2f-21ca1ff3edc2}" port="{7f7b7208-5a9d-45ac-b059-b27aca9b5968}"/>
      <destination node="{b8c67769-3d0b-40ef-a73d-761ec372fd03}" port="{c5207e2b-09bb-49ff-8df3-b520bf7f4ea0}"/>
    </connection>
    <connection uuid="{9e31a3f6-f4ee-46ef-8100-d868f3d6b721}">
      <source node="{02fb3fc4-e07b-4ea6-a361-1015a6b40e7f}" port="{3c37d596-79d1-47a2-9320-19fddb141083}"/>
      <destination node="{64b231e9-1391-4799-a7ce-2698a43f996b}" port="{35003650-6383-4a4e-9b88-4a9d1adffad1}"/>
    </connection>
    <connection uuid="{a05d809d-336b-47db-9195-d911cb40fbe8}">
      <source node="{5ae1f1a9-a10d-4822-9579-d627b5838e6f}" port="{34d84a54-3a07-4bc9-b30c-fef6708a166c}"/>
      <destination node="{64b231e9-1391-4799-a7ce-2698a43f996b}" port="{496ebd4f-30cc-4b16-bf50-fd8e5bc65ba6}"/>
    </connection>
    <connection uuid="{a6fa5eda-b690-4d2d-aff0-122aa4cabaf6}">
      <source node="{38d441da-5ce4-4568-b1c0-565e0b51102d}" port="{9908f2ad-95a0-41a1-956e-36c78609f382}"/>
      <destination node="{ce9bc5b6-38ed-4604-b6ee-45fdec28e520}" port="{d6d9085a-42f6-4e2f-8970-65be3da56c7d}"/>
    </connection>
    <connection uuid="{ad3433c6-412e-403e-8a89-b8102170876f}">
      <source node="{1783b34b-610e-4339-8bf4-8af8fc840088}" port="{356a27cb-b7e8-494c-8fca-764b23957757}"/>
      <destination node="{8a2d1189-1437-43ff-9048-0c50560fa623}" port="{40f97b81-fc49-4940-a11b-e15e2769b341}"/>
    </connection>
    <connection uuid="{beac39e8-1806-49c5-9892-591952136e52}">
      <source node="{2661b894-a51f-4f42-914b-3975b2eb6870}" port="{3e359e20-ee2d-4cc2-97de-16a1cecdf49e}"/>
      <destination node="{05cc2519-2d72-4aea-bf05-3615bd13d2bd}" port="{f1c126fb-2922-46f8-90f5-b4a6753d1071}"/>
    </connection>
    <connection uuid="{e184d43d-b061-43c5-9d2b-3202341367f8}">
      <source node="{b8c67769-3d0b-40ef-a73d-761ec372fd03}" port="{f70d9a52-ed28-4389-a871-b19a5405a449}"/>
      <destination node="{6d9f345d-17c3-4081-ac81-6087734d6f90}" port="{fce139a5-3c55-46da-8640-d8f84f7de088}"/>
    </connection>
    <connection uuid="{f31c049b-b15d-4809-849d-d77f3ad68390}">
      <source node="{ce9bc5b6-38ed-4604-b6ee-45fdec28e520}" port="{7c1afeca-255a-47c9-8fad-b81441d6cfef}"/>
      <destination node="{9f5b1319-6522-45ab-9f2f-21ca1ff3edc2}" port="{c35fd21b-7fda-48f7-a398-995ece313e41}"/>
    </connection>
    <connection uuid="{f6e747d4-0580-491d-8d04-f47ceea1d34a}">
      <source node="{f2ae20f8-dea8-47b5-b281-aa71512b7eff}" port="{73f89fb0-f888-4c76-8dc4-88fedd1988af}"/>
      <destination node="{087692ca-6c71-4174-beaf-d61a8dd48010}" port="{45c925c1-89e4-4f62-91f7-fd22f1ca82e6}"/>
    </connection>
  </flow>
</flow>
