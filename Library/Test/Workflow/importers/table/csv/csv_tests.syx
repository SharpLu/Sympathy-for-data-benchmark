<?xml version="1.0" ?><flow height="50" id="" uuid="{be9011d3-8a82-47e2-a7e2-cb8b9fc97316}" width="50" x="0" xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" y="0"><label>csv_tests.syx</label><description></description><author></author><copyright></copyright><version></version><source></source><flow height="50" id="" uuid="{5567819b-5bb0-4e41-a74e-8e25fc55a53b}" width="50" x="1500" y="2375"><label>Test_of_LAA_DIVA</label><description></description><author></author><copyright></copyright><version></version><source></source><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{4ba4b2c0-453a-4d92-8fef-42b73415a46c}" width="50" x="1950" y="1925"><label>Diva Data Source</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/diva_test_file.txt"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c934dd99-df09-11e2-aa1d-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{5e078aef-1ef2-47b4-900d-8faecff4e917}" width="50" x="1950" y="1825"><label>Laa Data Source</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/laa_daa_test_files.laa"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c93b3507-df09-11e2-ab26-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.adaf.importadaf" uuid="{ac2344e1-f541-4daa-93db-991e960029e4}" width="50" x="2100" y="1925"><label>ADAF</label><description>Data source as ADAF</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"active_importer": {"description": "", "label": "", "order": 0, "type": "string", "value": "DIVA"},"custom_importer_data": {"ADAF": {"type": "group"}, "ATF": {"type": "group"}, "Auto": {"label": "", "order": 0, "type": "group"}, "DIVA": {"type": "group"}, "LAA": {"type": "group"}, "MDF": {"type": "group"}, "label": "", "order": 0, "type": "group"},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{c935224c-df09-11e2-9c05-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></input><output key="port3" optional="False" requiresdata="False" scheme="hdf5" type="adaf" uuid="{c93523fd-df09-11e2-8293-3c07546d87b6}"><label>ADAFOutput</label><description>ADAFOutput</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.adaf.importadaf" uuid="{dcd019e8-6ab0-4183-88c6-78e493834af0}" width="50" x="2100" y="1825"><label>ADAF</label><description>Data source as ADAF</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"active_importer": {"description": "", "label": "", "order": 0, "type": "string", "value": "LAA"},"custom_importer_data": {"ADAF": {"type": "group"}, "ATF": {"type": "group"}, "Auto": {"label": "", "order": 0, "type": "group"}, "DIVA": {"type": "group"}, "LAA": {"type": "group"}, "MDF": {"type": "group"}, "label": "", "order": 0, "type": "group"},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{c93b1f78-df09-11e2-8795-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></input><output key="port3" optional="False" requiresdata="False" scheme="hdf5" type="adaf" uuid="{c93b2099-df09-11e2-b5a5-3c07546d87b6}"><label>ADAFOutput</label><description>ADAFOutput</description></output></ports></node><connection uuid="{c93b8863-df09-11e2-b28c-3c07546d87b6}"><source node="{5e078aef-1ef2-47b4-900d-8faecff4e917}" port="{c93b3507-df09-11e2-ab26-3c07546d87b6}"/><destination node="{dcd019e8-6ab0-4183-88c6-78e493834af0}" port="{c93b1f78-df09-11e2-8795-3c07546d87b6}"/></connection><connection uuid="{c93b8917-df09-11e2-8edc-3c07546d87b6}"><source node="{4ba4b2c0-453a-4d92-8fef-42b73415a46c}" port="{c934dd99-df09-11e2-aa1d-3c07546d87b6}"/><destination node="{ac2344e1-f541-4daa-93db-991e960029e4}" port="{c935224c-df09-11e2-9c05-3c07546d87b6}"/></connection></flow><flow height="50" id="" uuid="{93d1de45-7015-4ec3-8ce6-c66cc206cb4d}" width="50" x="1250" y="2375"><label>Test_of_ordinary_csv</label><description></description><author></author><copyright></copyright><version></version><source></source><node height="50" id="org.sysess.sympathy.data.table.importtable" uuid="{02e58836-be65-4ded-a677-36cd89a87848}" width="50" x="1975" y="2325"><label>Table</label><description>Data source as a table</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"active_importer": {"description": "", "label": "", "order": 0, "type": "string", "value": "CSV"},"custom_importer_data": {"Auto": {"label": "", "order": 0, "type": "group"}, "CSV": {"data_end_row": {"description": "The last data row.", "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 2}, "data_start_row": {"description": "The first row where data is stored.", "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 2}, "delimiter": {"description": "", "label": "", "order": 0, "type": "string", "value": "\t"}, "description_row": {"description": "The row where the descriptions are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "descriptions": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "double_quotations": {"description": "Remove double quotations in importation.", "label": "Remove double quotations", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "label": "", "order": 0, "type": "boolean", "value": false}, "header_row": {"description": "The row where the headers are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "headers": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20}, "other_delimiter": {"description": "Enter other delimiter than the standard ones.", "label": "", "order": 0, "type": "string", "value": " "}, "preview_start_row": {"description": "The first row where data will review from.", "editor": {"max": 500, "min": -500, "step": 1, "type": "spinbox"}, "label": "Preview start row", "order": 0, "type": "integer", "value": 1}, "source_coding": {"description": "", "label": "", "order": 0, "type": "string", "value": "utf_8"}, "transposed": {"description": "Transpose the data.", "label": "Transpose input data", "order": 0, "type": "boolean", "value": false}, "type": "group", "unit_row": {"description": "The row where the units are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "units": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}}, "HDF5": {"path_list": {"description": "The paths selected to import data from.", "editor": {"type": "combobox"}, "label": "Selected paths", "list": [], "order": 0, "passthrough": false, "type": "list", "value": [], "value_names": []}, "type": "group"}, "SQL": {"type": "group"}, "Table": {"type": "group"}, "XLS": {"data_end_row": {"description": "The last data row.", "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 0}, "data_start_row": {"description": "The first row where data is stored.", "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 2}, "description_row": {"description": "The row where the descriptions are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "descriptions": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "label": "", "order": 0, "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "headers": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20}, "preview_start_row": {"description": "The first row where data will review from.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Preview start row", "order": 0, "type": "integer", "value": 1}, "transposed": {"description": "Transpose the data.", "label": "Transpose input", "order": 0, "type": "boolean", "value": false}, "type": "group", "unit_row": {"description": "The row where the units are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "units": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "worksheet_name": {"description": "The worksheet to import from.", "editor": {"type": "combobox"}, "label": "Select worksheet", "list": [], "order": 0, "passthrough": false, "type": "list", "value": [0], "value_names": []}}, "label": "", "order": 0, "type": "group"},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{574a3501-316b-4bbe-a524-b65cf190bd23}"><label>DataSource</label><description>DataSource</description></input><output key="port1" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{10b86d41-598f-472d-90e8-68ed94e1fb9d}"><label>TableOutput</label><description>TableOutput</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.importtable" uuid="{166612e3-e627-4a7c-9f27-047f61a18905}" width="50" x="1600" y="2525"><label>Table</label><description>Data source as a table</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"active_importer": {"description": "", "label": "", "order": 0, "type": "string", "value": "Auto"},"custom_importer_data": {"Auto": {"label": "", "order": 0, "type": "group"}, "label": "", "order": 0, "type": "group"},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{5073af15-b38e-4d90-933d-5c7df51b9b61}"><label>DataSource</label><description>DataSource</description></input><output key="port1" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{21483265-4f3e-46e5-af12-964935e6fa5f}"><label>TableOutput</label><description>TableOutput</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.importtable" uuid="{1ab58494-06b6-4069-a4c0-8591713122a6}" width="50" x="1975" y="2425"><label>Table</label><description>Data source as a table</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"active_importer": {"description": "", "label": "", "order": 0, "type": "string", "value": "CSV"},"custom_importer_data": {"Auto": {"label": "", "order": 0, "type": "group"}, "CSV": {"data_end_row": {"description": "The last data row.", "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 0}, "data_start_row": {"description": "The first row where data is stored.", "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 2}, "delimiter": {"description": "", "label": "", "order": 0, "type": "string", "value": ";"}, "description_row": {"description": "The row where the descriptions are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "descriptions": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "double_quotations": {"description": "Remove double quotations in importation.", "label": "Remove double quotations", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "label": "", "order": 0, "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "headers": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20}, "other_delimiter": {"description": "Enter other delimiter than the standard ones.", "label": "", "order": 0, "type": "string", "value": " "}, "preview_start_row": {"description": "The first row where data will review from.", "editor": {"max": 500, "min": -500, "step": 1, "type": "spinbox"}, "label": "Preview start row", "order": 0, "type": "integer", "value": 1}, "source_coding": {"description": "", "label": "", "order": 0, "type": "string", "value": "utf_8"}, "transposed": {"description": "Transpose the data.", "label": "Transpose input data", "order": 0, "type": "boolean", "value": false}, "type": "group", "unit_row": {"description": "The row where the units are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "units": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}}, "HDF5": {"path_list": {"description": "The paths selected to import data from.", "editor": {"type": "combobox"}, "label": "Selected paths", "list": [], "order": 0, "passthrough": false, "type": "list", "value": [], "value_names": []}, "type": "group"}, "SQL": {"type": "group"}, "Table": {"type": "group"}, "XLS": {"data_end_row": {"description": "The last data row.", "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 0}, "data_start_row": {"description": "The first row where data is stored.", "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 2}, "description_row": {"description": "The row where the descriptions are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "descriptions": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "label": "", "order": 0, "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "headers": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20}, "preview_start_row": {"description": "The first row where data will review from.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Preview start row", "order": 0, "type": "integer", "value": 1}, "transposed": {"description": "Transpose the data.", "label": "Transpose input", "order": 0, "type": "boolean", "value": false}, "type": "group", "unit_row": {"description": "The row where the units are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "units": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "worksheet_name": {"description": "The worksheet to import from.", "editor": {"type": "combobox"}, "label": "Select worksheet", "list": [], "order": 0, "passthrough": false, "type": "list", "value": [0], "value_names": []}}, "label": "", "order": 0, "type": "group"},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{91c459f1-b507-46f9-9242-384f141f00b8}"><label>DataSource</label><description>DataSource</description></input><output key="port1" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{8beab7b7-7818-41b1-949b-10b6dc801874}"><label>TableOutput</label><description>TableOutput</description></output></ports></node><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{23cd8d66-d1c6-4027-891a-130e1e290da2}" width="50" x="1175" y="2225"><label>Single Data Value, Header</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/single_data_value_csv_with_header.csv"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c93519f3-df09-11e2-b691-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{25a887d2-3d63-4aff-9970-a34213750a0a}" width="50" x="1475" y="2225"><label>File datasource</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/import_export_csv.csv"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c93a51eb-df09-11e2-941b-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{26f20902-7018-4f3a-af3e-9acdbf617519}" width="50" x="1175" y="2125"><label>Single Data Value</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/single_data_value_csv.csv"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c936b35c-df09-11e2-9183-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{33bb3e7f-6ca0-40b1-867a-dca99195a255}" width="50" x="1850" y="2325"><label>File datasource</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/import_export_csv.csv"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c9388ed1-df09-11e2-be51-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{3ce278ed-af0d-4fc5-8bc8-1c451c23fa43}" width="50" x="1600" y="2425"><label>File datasource</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/import_export_csv.py"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c934d1d4-df09-11e2-8387-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{4f7bd3cc-8eff-4239-9cb2-40025a4f3b7c}" width="50" x="1600" y="2125"><label>File datasource</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/import_export_csv.py"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c9377ad9-df09-11e2-8058-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.importtable" uuid="{58dfc85b-d203-4008-b236-4e38aaa911b2}" width="50" x="1307.68" y="2434.99"><label>Table</label><description>Data source as a table</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"active_importer": {"description": "", "label": "", "order": 0, "type": "string", "value": "CSV"},"custom_importer_data": {"Auto": {"label": "", "order": 0, "type": "group"}, "CSV": {"data_end_row": {"description": "The last data row.", "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 0}, "data_start_row": {"description": "The first row where data is stored.", "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 2}, "delimiter": {"description": "", "label": "", "order": 0, "type": "string", "value": "\t"}, "description_row": {"description": "The row where the descriptions are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "descriptions": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "double_quotations": {"description": "Remove double quotations in importation.", "label": "Remove double quotations", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "label": "", "order": 0, "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "headers": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20}, "other_delimiter": {"description": "Enter other delimiter than the standard ones.", "label": "", "order": 0, "type": "string", "value": " "}, "preview_start_row": {"description": "The first row where data will review from.", "editor": {"max": 500, "min": -500, "step": 1, "type": "spinbox"}, "label": "Preview start row", "order": 0, "type": "integer", "value": 1}, "source_coding": {"description": "", "label": "", "order": 0, "type": "string", "value": "utf_8"}, "transposed": {"description": "Transpose the data.", "label": "Transpose input data", "order": 0, "type": "boolean", "value": false}, "type": "group", "unit_row": {"description": "The row where the units are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "units": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}}, "HDF5": {"path_list": {"description": "The paths selected to import data from.", "editor": {"type": "combobox"}, "label": "Selected paths", "list": [], "order": 0, "passthrough": false, "type": "list", "value": [], "value_names": []}, "type": "group"}, "SQL": {"type": "group"}, "Table": {"type": "group"}, "XLS": {"data_end_row": {"description": "The last data row.", "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 0}, "data_start_row": {"description": "The first row where data is stored.", "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 2}, "description_row": {"description": "The row where the descriptions are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "descriptions": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "label": "", "order": 0, "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "headers": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20}, "preview_start_row": {"description": "The first row where data will review from.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Preview start row", "order": 0, "type": "integer", "value": 1}, "transposed": {"description": "Transpose the data.", "label": "Transpose input", "order": 0, "type": "boolean", "value": false}, "type": "group", "unit_row": {"description": "The row where the units are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "units": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "worksheet_name": {"description": "The worksheet to import from.", "editor": {"type": "combobox"}, "label": "Select worksheet", "list": [], "order": 0, "passthrough": false, "type": "list", "value": [0], "value_names": []}}, "label": "", "order": 0, "type": "group"},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{7905e7d7-310a-4a3e-b7c6-6d40c18f8ce7}"><label>DataSource</label><description>DataSource</description></input><output key="port1" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{09d72196-c007-43f1-b20b-a902da0763cf}"><label>TableOutput</label><description>TableOutput</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.importtablemultiple" uuid="{5b827218-533c-43d5-8f32-21a10f0a9721}" width="50" x="2100" y="2225"><label>Tables</label><description>Import datasources as Tables.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"active_importer": {"description": "", "label": "", "order": 0, "type": "string", "value": "Auto"},"custom_importer_data": {"Auto": {"label": "", "order": 0, "type": "group"}, "label": "", "order": 0, "type": "group"},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="[datasource]" uuid="{e4ebcb7a-3dfb-4a3a-a66d-a1ddb68971ab}"><label>DataSource</label><description>DataSource</description></input><output key="port1" optional="False" requiresdata="False" scheme="hdf5" type="[table]" uuid="{235e65a0-ab7b-4841-a3f0-7d658124816a}"><label>TableOutput</label><description>TableOutput</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.importtable" uuid="{61bad754-cfd8-4e33-b187-06ec9d3c1431}" width="50" x="1311.88" y="2336.42"><label>Table</label><description>Data source as a table</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"active_importer": {"description": "", "label": "", "order": 0, "type": "string", "value": "Auto"},"custom_importer_data": {"Auto": {"label": "", "order": 0, "type": "group"}, "CSV": {"data_end_row": {"description": "The last data row.", "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 0}, "data_start_row": {"description": "The first row where data is stored.", "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "delimiter": {"description": "", "label": "", "order": 0, "type": "string", "value": "\t"}, "description_row": {"description": "The row where the descriptions are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "descriptions": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "double_quotations": {"description": "Remove double quotations in importation.", "label": "Remove double quotations", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "label": "", "order": 0, "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "headers": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "no_preview_rows": {"description": "The number of preview rows to show.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20}, "other_delimiter": {"description": "Enter other delimiter than the standard ones.", "label": "", "order": 0, "type": "string", "value": " "}, "preview_start_row": {"description": "The first row where data will review from.", "editor": {"max": 500, "min": -500, "step": 1, "type": "spinbox"}, "label": "Preview start row", "order": 0, "type": "integer", "value": 1}, "source_coding": {"description": "", "label": "", "order": 0, "type": "string", "value": "utf_8"}, "transposed": {"description": "Transpose the data.", "label": "Transpose input data", "order": 0, "type": "boolean", "value": false}, "type": "group", "unit_row": {"description": "The row where the units are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "units": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}}, "HDF5": {"path_list": {"description": "The paths selected to import data from.", "editor": {"type": "combobox"}, "label": "Selected paths", "list": [], "order": 0, "passthrough": false, "type": "list", "value": [], "value_names": []}, "type": "group"}, "SQL": {"type": "group"}, "Table": {"type": "group"}, "XLS": {"data_end_row": {"description": "The last data row.", "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 0}, "data_start_row": {"description": "The first row where data is stored.", "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 2}, "description_row": {"description": "The row where the descriptions are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "descriptions": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "label": "", "order": 0, "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "headers": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20}, "preview_start_row": {"description": "The first row where data will review from.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Preview start row", "order": 0, "type": "integer", "value": 1}, "transposed": {"description": "Transpose the data.", "label": "Transpose input", "order": 0, "type": "boolean", "value": false}, "type": "group", "unit_row": {"description": "The row where the units are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "units": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "worksheet_name": {"description": "The worksheet to import from.", "editor": {"type": "combobox"}, "label": "Select worksheet", "list": [], "order": 0, "passthrough": false, "type": "list", "value": [0], "value_names": []}}, "label": "", "order": 0, "type": "group"},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{7905e7d7-310a-4a3e-b7c6-6d40c18f8ce7}"><label>DataSource</label><description>DataSource</description></input><output key="port1" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{09d72196-c007-43f1-b20b-a902da0763cf}"><label>TableOutput</label><description>TableOutput</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.table2tables" uuid="{6979d20f-0cb4-4158-bc91-6cbe9ea8ad9b}" width="50" x="1850" y="2525"><label>Table2Tables</label><description>Convert a single Table item to a list of Tables.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(c) 2013 Combine AB</copyright><version>0.1</version><parameters type="json"><![CDATA[{}]]></parameters><ports><input key="port0" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{c93a02bd-df09-11e2-af9a-3c07546d87b6}"><label>Table</label><description>Table</description></input><output key="port1" optional="False" requiresdata="False" scheme="hdf5" type="[table]" uuid="{c93a0494-df09-11e2-a296-3c07546d87b6}"><label>OutTable</label><description>OutTable</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.importtable" uuid="{73ab393d-2464-4b47-bf79-dc2b9705b151}" width="50" x="1307.68" y="2631.09"><label>Table</label><description>Data source as a table</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"active_importer": {"description": "", "label": "", "order": 0, "type": "string", "value": "CSV"},"custom_importer_data": {"Auto": {"label": "", "order": 0, "type": "group"}, "CSV": {"data_end_row": {"description": "The last data row.", "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 0}, "data_start_row": {"description": "The first row where data is stored.", "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 2}, "delimiter": {"description": "", "label": "", "order": 0, "type": "string", "value": ","}, "description_row": {"description": "The row where the descriptions are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "descriptions": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "double_quotations": {"description": "Remove double quotations in importation.", "label": "Remove double quotations", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "label": "", "order": 0, "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "headers": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20}, "other_delimiter": {"description": "Enter other delimiter than the standard ones.", "label": "", "order": 0, "type": "string", "value": " "}, "preview_start_row": {"description": "The first row where data will review from.", "editor": {"max": 500, "min": -500, "step": 1, "type": "spinbox"}, "label": "Preview start row", "order": 0, "type": "integer", "value": 1}, "source_coding": {"description": "", "label": "", "order": 0, "type": "string", "value": "utf_8"}, "transposed": {"description": "Transpose the data.", "label": "Transpose input data", "order": 0, "type": "boolean", "value": false}, "type": "group", "unit_row": {"description": "The row where the units are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "units": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}}, "HDF5": {"path_list": {"description": "The paths selected to import data from.", "editor": {"type": "combobox"}, "label": "Selected paths", "list": [], "order": 0, "passthrough": false, "type": "list", "value": [], "value_names": []}, "type": "group"}, "SQL": {"type": "group"}, "Table": {"type": "group"}, "XLS": {"data_end_row": {"description": "The last data row.", "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 0}, "data_start_row": {"description": "The first row where data is stored.", "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 2}, "description_row": {"description": "The row where the descriptions are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "descriptions": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "label": "", "order": 0, "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "headers": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20}, "preview_start_row": {"description": "The first row where data will review from.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Preview start row", "order": 0, "type": "integer", "value": 1}, "transposed": {"description": "Transpose the data.", "label": "Transpose input", "order": 0, "type": "boolean", "value": false}, "type": "group", "unit_row": {"description": "The row where the units are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "units": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "worksheet_name": {"description": "The worksheet to import from.", "editor": {"type": "combobox"}, "label": "Select worksheet", "list": [], "order": 0, "passthrough": false, "type": "list", "value": [0], "value_names": []}}, "label": "", "order": 0, "type": "group"},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{7905e7d7-310a-4a3e-b7c6-6d40c18f8ce7}"><label>DataSource</label><description>DataSource</description></input><output key="port1" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{09d72196-c007-43f1-b20b-a902da0763cf}"><label>TableOutput</label><description>TableOutput</description></output></ports></node><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{746507f2-5f64-47f8-86fc-7795ab76b1b1}" width="50" x="1850" y="2425"><label>Trailing Delimiter</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_connection_string": {"description": "A connection string that will override other settings.", "label": "Connection string", "order": 7, "type": "string", "value": ""},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/trailing_delimiter_csv.txt"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c937934c-df09-11e2-8e52-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.table2tables" uuid="{76f5df0c-c066-4b35-86d4-ba23ede10669}" width="50" x="1850" y="2225"><label>Table2Tables</label><description>Convert a single Table item to a list of Tables.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(c) 2013 Combine AB</copyright><version>0.1</version><parameters type="json"><![CDATA[{}]]></parameters><ports><input key="port0" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{c939d92e-df09-11e2-aedd-3c07546d87b6}"><label>Table</label><description>Table</description></input><output key="port1" optional="False" requiresdata="False" scheme="hdf5" type="[table]" uuid="{c939db21-df09-11e2-b792-3c07546d87b6}"><label>OutTable</label><description>OutTable</description></output></ports></node><node height="50" id="org.sysess.sympathy.export.exporttables" uuid="{86083854-99ae-45d6-ae30-22a5ff6910ec}" width="50" x="1975" y="2225"><label>Export Tables</label><description>Export Tables</description><author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author><copyright>(c) 2013 Combine AB</copyright><version>0.1</version><parameters type="json"><![CDATA[{"active_exporter": {"description": "", "label": "", "order": 0, "type": "string", "value": "CSV"},"custom_exporter_data": {"CSV": {"filename_extension": {"description": "", "label": "Filename extension", "order": 0, "type": "string", "value": "csv"}, "type": "group"}, "HDF5": {"filename_extension": {"description": "", "label": "Filename extension", "order": 0, "type": "string", "value": "h5"}, "type": "group"}, "SQL": {"connection_string": {"description": "String used by pyodbc to make a connection.", "label": "Connection string", "order": 0, "type": "string", "value": ""}, "filename_extension": {"description": "", "label": "Filename extension", "order": 0, "type": "string", "value": ""}, "table_name": {"description": "The table name used when exporting.", "label": "Table name", "order": 0, "type": "string", "value": ""}, "type": "group"}, "SQLite": {"filename_extension": {"description": "", "label": "Filename extension", "order": 0, "type": "string", "value": "db"}, "type": "group"}, "XLS": {"filename_extension": {"description": "", "label": "Filename extension", "order": 0, "type": "string", "value": "xls"}, "type": "group"}, "type": "group"},"directory": {"description": "Select the directory where to export the files.", "editor": {"type": "dirname"}, "label": "Output directory", "order": 0, "type": "string", "value": "data"},"filename": {"description": "Filename without extension.", "label": "Filename", "order": 0, "type": "string", "value": "exported_test_csv"},"type": "group"}]]></parameters><ports><input key="port0" optional="False" requiresdata="False" scheme="hdf5" type="[table]" uuid="{c9387317-df09-11e2-a11a-3c07546d87b6}"><label>Tables</label><description>Tables</description></input><output key="port0" optional="False" requiresdata="False" scheme="text" type="[datasource]" uuid="{c938752b-df09-11e2-a188-3c07546d87b6}"><label>Datasources</label><description>Datasources</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.importtablemultiple" uuid="{868cb074-9c38-4bde-a3f1-505d24b729a3}" width="50" x="2100" y="2525"><label>Tables</label><description>Import datasources as Tables.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"active_importer": {"description": "", "label": "", "order": 0, "type": "string", "value": "Auto"},"custom_importer_data": {"Auto": {"label": "", "order": 0, "type": "group"}, "label": "", "order": 0, "type": "group"},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="[datasource]" uuid="{b750a2d0-1b27-4b12-a464-e953da38c39b}"><label>DataSource</label><description>DataSource</description></input><output key="port1" optional="False" requiresdata="False" scheme="hdf5" type="[table]" uuid="{3b2f43f3-52ee-461f-afed-e801efab8823}"><label>TableOutput</label><description>TableOutput</description></output></ports></node><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{8702e28b-812e-4b8c-a704-0ae1386339d3}" width="50" x="1475" y="2525"><label>Quotation Source</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/test_quotations_csv.csv"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c9360175-df09-11e2-9248-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{8a36a106-0ef6-4ce0-868b-c6c0f17d24fe}" width="50" x="2225" y="2425"><label>File datasource</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/import_export_csv.py"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c93636ca-df09-11e2-9893-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.functionselectortable" uuid="{8ec9881a-6d7b-4a5d-81ec-d9597171da80}" width="50" x="1725" y="2225"><label>F(x) Table</label><description>Select and apply functions to a Table.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2012 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"clean_output": {"description": "Do not copy the input data to the output.", "label": "Clean output", "order": 0, "type": "boolean", "value": false},"selected_functions": {"description": "Select the functions to apply.", "editor": {"buttons": true, "filter": true, "passthrough": true, "selection": "multi", "type": "listview"}, "label": "Select functions", "list": ["TestColumnDataTypes", "TestNoColumns", "TestSignalLengths"], "order": 1, "passthrough": false, "type": "list", "value": [0, 1, 2], "value_names": ["TestColumnDataTypes", "TestNoColumns", "TestSignalLengths"]},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{c9382b23-df09-11e2-8e22-3c07546d87b6}"><label>Python *.py file</label><description>Python *.py file</description></input><input key="port2" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{c9382c14-df09-11e2-b955-3c07546d87b6}"><label>Input</label><description>Input</description></input><output key="port3" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{c9382d0c-df09-11e2-a497-3c07546d87b6}"><label>Output</label><description>Output</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.importtable" uuid="{96492708-fabf-44c8-bd50-065d2a4ae1b1}" width="50" x="1300" y="2225"><label>Table</label><description>Data source as a table</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"active_importer": {"description": "", "label": "", "order": 0, "type": "string", "value": "CSV"},"custom_importer_data": {"Auto": {"label": "", "order": 0, "type": "group"}, "CSV": {"data_end_row": {"description": "The last data row.", "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 0}, "data_start_row": {"description": "The first row where data is stored.", "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 2}, "delimiter": {"description": "", "label": "", "order": 0, "type": "string", "value": ","}, "description_row": {"description": "The row where the descriptions are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "descriptions": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "double_quotations": {"description": "Remove double quotations in importation.", "label": "Remove double quotations", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "label": "", "order": 0, "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "headers": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20}, "other_delimiter": {"description": "Enter other delimiter than the standard ones.", "label": "", "order": 0, "type": "string", "value": " "}, "preview_start_row": {"description": "The first row where data will review from.", "editor": {"max": 500, "min": -500, "step": 1, "type": "spinbox"}, "label": "Preview start row", "order": 0, "type": "integer", "value": 1}, "source_coding": {"description": "", "label": "", "order": 0, "type": "string", "value": "utf_8"}, "transposed": {"description": "Transpose the data.", "label": "Transpose input data", "order": 0, "type": "boolean", "value": false}, "type": "group", "unit_row": {"description": "The row where the units are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "units": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}}, "HDF5": {"path_list": {"description": "The paths selected to import data from.", "editor": {"type": "combobox"}, "label": "Selected paths", "list": [], "order": 0, "passthrough": false, "type": "list", "value": [], "value_names": []}, "type": "group"}, "SQL": {"type": "group"}, "Table": {"type": "group"}, "XLS": {"data_end_row": {"description": "The last data row.", "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 0}, "data_start_row": {"description": "The first row where data is stored.", "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 2}, "description_row": {"description": "The row where the descriptions are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "descriptions": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "label": "", "order": 0, "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "headers": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20}, "preview_start_row": {"description": "The first row where data will review from.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Preview start row", "order": 0, "type": "integer", "value": 1}, "transposed": {"description": "Transpose the data.", "label": "Transpose input", "order": 0, "type": "boolean", "value": false}, "type": "group", "unit_row": {"description": "The row where the units are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "units": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "worksheet_name": {"description": "The worksheet to import from.", "editor": {"type": "combobox"}, "label": "Select worksheet", "list": [], "order": 0, "passthrough": false, "type": "list", "value": [0], "value_names": []}}, "label": "", "order": 0, "type": "group"},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{7905e7d7-310a-4a3e-b7c6-6d40c18f8ce7}"><label>DataSource</label><description>DataSource</description></input><output key="port1" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{09d72196-c007-43f1-b20b-a902da0763cf}"><label>TableOutput</label><description>TableOutput</description></output></ports></node><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{9c5813e3-c6e4-44f0-9b33-5f843282f749}" width="50" x="1175" y="2425"><label>Single Data Row, Header</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/single_data_row_csv_with_header.csv"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c93825a1-df09-11e2-8b35-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{a3f58478-0073-4a43-b076-5401aaf9f1c9}" width="50" x="1175" y="2325"><label>Single Data Row</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_connection_string": {"description": "A connection string that will override other settings.", "label": "Connection string", "order": 7, "type": "string", "value": ""},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/single_data_row_csv.csv"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c93696f5-df09-11e2-957c-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.importtable" uuid="{bd5afcf5-abd5-4d0b-a03c-2ea91388548a}" width="50" x="1600" y="2225"><label>Table</label><description>Data source as a table</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"active_importer": {"description": "", "label": "", "order": 0, "type": "string", "value": "Auto"},"custom_importer_data": {"Auto": {"label": "", "order": 0, "type": "group"}, "label": "", "order": 0, "type": "group"},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{7c850255-e912-40a0-801b-ebd003f0faf5}"><label>DataSource</label><description>DataSource</description></input><output key="port1" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{accec739-2f28-483f-860d-413bb590f977}"><label>TableOutput</label><description>TableOutput</description></output></ports></node><node height="50" id="org.sysess.sympathy.export.exporttables" uuid="{c4752fe7-a428-4452-b915-2df9759bf716}" width="50" x="1975" y="2525"><label>Export Tables</label><description>Export Tables</description><author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author><copyright>(c) 2013 Combine AB</copyright><version>0.1</version><parameters type="json"><![CDATA[{"active_exporter": {"description": "", "label": "", "order": 0, "type": "string", "value": "CSV"},"custom_exporter_data": {"CSV": {"filename_extension": {"description": "", "label": "Filename extension", "order": 0, "type": "string", "value": "csv"}, "type": "group"}, "HDF5": {"filename_extension": {"description": "", "label": "Filename extension", "order": 0, "type": "string", "value": "h5"}, "type": "group"}, "SQL": {"connection_string": {"description": "String used by pyodbc to make a connection.", "label": "Connection string", "order": 0, "type": "string", "value": ""}, "filename_extension": {"description": "", "label": "Filename extension", "order": 0, "type": "string", "value": ""}, "table_name": {"description": "The table name used when exporting.", "label": "Table name", "order": 0, "type": "string", "value": ""}, "type": "group"}, "SQLite": {"filename_extension": {"description": "", "label": "Filename extension", "order": 0, "type": "string", "value": "db"}, "type": "group"}, "XLS": {"filename_extension": {"description": "", "label": "Filename extension", "order": 0, "type": "string", "value": "xls"}, "type": "group"}, "type": "group"},"directory": {"description": "Select the directory where to export the files.", "editor": {"type": "dirname"}, "label": "Output directory", "order": 0, "type": "string", "value": "data"},"filename": {"description": "Filename without extension.", "label": "Filename", "order": 0, "type": "string", "value": "exported_test_csv_quotation"},"type": "group"}]]></parameters><ports><input key="port0" optional="False" requiresdata="False" scheme="hdf5" type="[table]" uuid="{c93b3c6b-df09-11e2-99eb-3c07546d87b6}"><label>Tables</label><description>Tables</description></input><output key="port0" optional="False" requiresdata="False" scheme="text" type="[datasource]" uuid="{c93b3d63-df09-11e2-b58c-3c07546d87b6}"><label>Datasources</label><description>Datasources</description></output></ports></node><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{d384a4e1-c618-4bdd-973e-426fb614be3f}" width="50" x="1175" y="2625"><label>Single Data Column, Header</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/single_data_column_csv_with_header.csv"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c9373eee-df09-11e2-9845-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><node height="50" id="org.sysess.sympathy.list.getitemtable" uuid="{db0e15e1-1fca-4096-a919-dc83dba0be2d}" width="50" x="2225" y="2525"><label>Get Item Table</label><description>Get an item from a list</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"combo": {"description": "List indexes.", "editor": {"type": "combobox"}, "label": "Index", "list": ["0"], "order": 10, "passthrough": false, "type": "list", "value": [0], "value_names": []},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="hdf5" type="[table]" uuid="{c9356f2e-df09-11e2-8925-3c07546d87b6}"><label>List</label><description>List</description></input><output key="port3" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{c9357059-df09-11e2-bf3f-3c07546d87b6}"><label>Item</label><description>Item</description></output></ports></node><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{e20f2293-38c8-49ca-982a-4f26001fac4f}" width="50" x="2225" y="2125"><label>File datasource</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/import_export_csv.py"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c93b2e78-df09-11e2-8211-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><node height="50" id="org.sysess.sympathy.list.getitemtable" uuid="{e33e1a6d-e3b7-4502-abdc-ac743137132d}" width="50" x="2225" y="2225"><label>Get Item Table</label><description>Get an item from a list</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"combo": {"description": "List indexes.", "editor": {"type": "combobox"}, "label": "Index", "list": ["0"], "order": 10, "passthrough": false, "type": "list", "value": [0], "value_names": []},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="hdf5" type="[table]" uuid="{c9368ea3-df09-11e2-829f-3c07546d87b6}"><label>List</label><description>List</description></input><output key="port3" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{c9368fd9-df09-11e2-8785-3c07546d87b6}"><label>Item</label><description>Item</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.functionselectortable" uuid="{e3e0490d-c06c-4e3d-a245-6245a1a3b248}" width="50" x="1725" y="2525"><label>F(x) Table</label><description>Select and apply functions to a Table.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2012 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"clean_output": {"description": "Do not copy the input data to the output.", "label": "Clean output", "order": 0, "type": "boolean", "value": false},"selected_functions": {"description": "Select the functions to apply.", "editor": {"buttons": true, "filter": true, "passthrough": true, "selection": "multi", "type": "listview"}, "label": "Select functions", "list": ["TestColumnDataTypes", "TestNoColumns", "TestSignalLengths"], "order": 1, "passthrough": false, "type": "list", "value": [0], "value_names": ["TestColumnDataTypes"]},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{c93898ab-df09-11e2-8c45-3c07546d87b6}"><label>Python *.py file</label><description>Python *.py file</description></input><input key="port2" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{c9389a59-df09-11e2-b6ff-3c07546d87b6}"><label>Input</label><description>Input</description></input><output key="port3" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{c9389c19-df09-11e2-8111-3c07546d87b6}"><label>Output</label><description>Output</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.functionselectortable" uuid="{f073ec09-15ed-454b-b423-a9af3c965e93}" width="50" x="2350" y="2525"><label>F(x) Table</label><description>Select and apply functions to a Table.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2012 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"clean_output": {"description": "Do not copy the input data to the output.", "label": "Clean output", "order": 0, "type": "boolean", "value": false},"selected_functions": {"description": "Select the functions to apply.", "editor": {"buttons": true, "filter": true, "passthrough": true, "selection": "multi", "type": "listview"}, "label": "Select functions", "list": ["TestColumnDataTypes", "TestNoColumns", "TestSignalLengths"], "order": 1, "passthrough": false, "type": "list", "value": [0], "value_names": ["TestColumnDataTypes"]},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{c9352bd7-df09-11e2-a459-3c07546d87b6}"><label>Python *.py file</label><description>Python *.py file</description></input><input key="port2" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{c9352d35-df09-11e2-82f4-3c07546d87b6}"><label>Input</label><description>Input</description></input><output key="port3" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{c9352eb0-df09-11e2-b947-3c07546d87b6}"><label>Output</label><description>Output</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.functionselectortable" uuid="{f24428ec-c1c3-4428-a368-9c20cd516679}" width="50" x="2350" y="2225"><label>F(x) Table</label><description>Select and apply functions to a Table.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2012 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"clean_output": {"description": "Do not copy the input data to the output.", "label": "Clean output", "order": 0, "type": "boolean", "value": false},"selected_functions": {"description": "Select the functions to apply.", "editor": {"buttons": true, "filter": true, "passthrough": true, "selection": "multi", "type": "listview"}, "label": "Select functions", "list": ["TestColumnDataTypes", "TestNoColumns", "TestSignalLengths"], "order": 1, "passthrough": false, "type": "list", "value": [0, 1, 2], "value_names": ["TestColumnDataTypes", "TestNoColumns", "TestSignalLengths"]},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{c937ebf8-df09-11e2-a4a9-3c07546d87b6}"><label>Python *.py file</label><description>Python *.py file</description></input><input key="port2" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{c937ecf3-df09-11e2-a4de-3c07546d87b6}"><label>Input</label><description>Input</description></input><output key="port3" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{c937edee-df09-11e2-bc1e-3c07546d87b6}"><label>Output</label><description>Output</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.importtable" uuid="{f5d2af5d-498f-4fe9-9488-884e6018c7df}" width="50" x="1300" y="2125"><label>Table</label><description>Data source as a table</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"active_importer": {"description": "", "label": "", "order": 0, "type": "string", "value": "Auto"},"custom_importer_data": {"Auto": {"label": "", "order": 0, "type": "group"}, "CSV": {"data_end_row": {"description": "The last data row.", "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 0}, "data_start_row": {"description": "The first row where data is stored.", "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "delimiter": {"description": "", "label": "", "order": 0, "type": "string", "value": ","}, "description_row": {"description": "The row where the descriptions are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "descriptions": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "double_quotations": {"description": "Remove double quotations in importation.", "label": "Remove double quotations", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "label": "", "order": 0, "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "headers": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "no_preview_rows": {"description": "The number of preview rows to show.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20}, "other_delimiter": {"description": "Enter other delimiter than the standard ones.", "label": "", "order": 0, "type": "string", "value": " "}, "preview_start_row": {"description": "The first row where data will review from.", "editor": {"max": 500, "min": -500, "step": 1, "type": "spinbox"}, "label": "Preview start row", "order": 0, "type": "integer", "value": 1}, "source_coding": {"description": "", "label": "", "order": 0, "type": "string", "value": "utf_8"}, "transposed": {"description": "Transpose the data.", "label": "Transpose input data", "order": 0, "type": "boolean", "value": false}, "type": "group", "unit_row": {"description": "The row where the units are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "units": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}}, "HDF5": {"path_list": {"description": "The paths selected to import data from.", "editor": {"type": "combobox"}, "label": "Selected paths", "list": [], "order": 0, "passthrough": false, "type": "list", "value": [], "value_names": []}, "type": "group"}, "SQL": {"type": "group"}, "Table": {"type": "group"}, "XLS": {"data_end_row": {"description": "The last data row.", "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 0}, "data_start_row": {"description": "The first row where data is stored.", "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 2}, "description_row": {"description": "The row where the descriptions are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "descriptions": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "label": "", "order": 0, "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "headers": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20}, "preview_start_row": {"description": "The first row where data will review from.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Preview start row", "order": 0, "type": "integer", "value": 1}, "transposed": {"description": "Transpose the data.", "label": "Transpose input", "order": 0, "type": "boolean", "value": false}, "type": "group", "unit_row": {"description": "The row where the units are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "units": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "worksheet_name": {"description": "The worksheet to import from.", "editor": {"type": "combobox"}, "label": "Select worksheet", "list": [], "order": 0, "passthrough": false, "type": "list", "value": [0], "value_names": []}}, "label": "", "order": 0, "type": "group"},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{7905e7d7-310a-4a3e-b7c6-6d40c18f8ce7}"><label>DataSource</label><description>DataSource</description></input><output key="port1" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{09d72196-c007-43f1-b20b-a902da0763cf}"><label>TableOutput</label><description>TableOutput</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.importtable" uuid="{f8f875fe-fcdc-49c1-9553-4c955e91e79f}" width="50" x="1300" y="2525"><label>Table</label><description>Data source as a table</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"active_importer": {"description": "", "label": "", "order": 0, "type": "string", "value": "CSV"},"custom_importer_data": {"Auto": {"label": "", "order": 0, "type": "group"}, "CSV": {"data_end_row": {"description": "The last data row.", "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 0}, "data_start_row": {"description": "The first row where data is stored.", "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "delimiter": {"description": "", "label": "", "order": 0, "type": "string", "value": ","}, "description_row": {"description": "The row where the descriptions are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "descriptions": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "double_quotations": {"description": "Remove double quotations in importation.", "label": "Remove double quotations", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "label": "", "order": 0, "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "headers": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "no_preview_rows": {"description": "The number of preview rows to show.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20}, "other_delimiter": {"description": "Enter other delimiter than the standard ones.", "label": "", "order": 0, "type": "string", "value": " "}, "preview_start_row": {"description": "The first row where data will review from.", "editor": {"max": 500, "min": -500, "step": 1, "type": "spinbox"}, "label": "Preview start row", "order": 0, "type": "integer", "value": 1}, "source_coding": {"description": "", "label": "", "order": 0, "type": "string", "value": "utf_8"}, "transposed": {"description": "Transpose the data.", "label": "Transpose input data", "order": 0, "type": "boolean", "value": false}, "type": "group", "unit_row": {"description": "The row where the units are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "units": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}}, "HDF5": {"path_list": {"description": "The paths selected to import data from.", "editor": {"type": "combobox"}, "label": "Selected paths", "list": [], "order": 0, "passthrough": false, "type": "list", "value": [], "value_names": []}, "type": "group"}, "SQL": {"type": "group"}, "Table": {"type": "group"}, "XLS": {"data_end_row": {"description": "The last data row.", "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 0}, "data_start_row": {"description": "The first row where data is stored.", "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 2}, "description_row": {"description": "The row where the descriptions are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "descriptions": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "label": "", "order": 0, "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "headers": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20}, "preview_start_row": {"description": "The first row where data will review from.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Preview start row", "order": 0, "type": "integer", "value": 1}, "transposed": {"description": "Transpose the data.", "label": "Transpose input", "order": 0, "type": "boolean", "value": false}, "type": "group", "unit_row": {"description": "The row where the units are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "units": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "worksheet_name": {"description": "The worksheet to import from.", "editor": {"type": "combobox"}, "label": "Select worksheet", "list": [], "order": 0, "passthrough": false, "type": "list", "value": [0], "value_names": []}}, "label": "", "order": 0, "type": "group"},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{7905e7d7-310a-4a3e-b7c6-6d40c18f8ce7}"><label>DataSource</label><description>DataSource</description></input><output key="port1" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{09d72196-c007-43f1-b20b-a902da0763cf}"><label>TableOutput</label><description>TableOutput</description></output></ports></node><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{f9498daa-8786-4279-a537-647a5edb26f2}" width="50" x="1175" y="2525"><label>Single Data Column</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_connection_string": {"description": "A connection string that will override other settings.", "label": "Connection string", "order": 7, "type": "string", "value": ""},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/single_data_column_csv.csv"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c93629bd-df09-11e2-96c3-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><connection uuid="{18cfbe4d-88fa-4d8a-a12b-01953cacb143}"><source node="{c4752fe7-a428-4452-b915-2df9759bf716}" port="{c93b3d63-df09-11e2-b58c-3c07546d87b6}"/><destination node="{868cb074-9c38-4bde-a3f1-505d24b729a3}" port="{b750a2d0-1b27-4b12-a464-e953da38c39b}"/></connection><connection uuid="{1cd1843d-84d7-4d28-a0ed-e41053489a8b}"><source node="{5b827218-533c-43d5-8f32-21a10f0a9721}" port="{235e65a0-ab7b-4841-a3f0-7d658124816a}"/><destination node="{e33e1a6d-e3b7-4502-abdc-ac743137132d}" port="{c9368ea3-df09-11e2-829f-3c07546d87b6}"/></connection><connection uuid="{324e8434-ea41-4175-bbf9-7c912c66058f}"><source node="{86083854-99ae-45d6-ae30-22a5ff6910ec}" port="{c938752b-df09-11e2-a188-3c07546d87b6}"/><destination node="{5b827218-533c-43d5-8f32-21a10f0a9721}" port="{e4ebcb7a-3dfb-4a3a-a66d-a1ddb68971ab}"/></connection><connection uuid="{397388ba-a0b8-45d3-a150-9fb1ad4e2afe}"><source node="{746507f2-5f64-47f8-86fc-7795ab76b1b1}" port="{c937934c-df09-11e2-8e52-3c07546d87b6}"/><destination node="{1ab58494-06b6-4069-a4c0-8591713122a6}" port="{91c459f1-b507-46f9-9242-384f141f00b8}"/></connection><connection uuid="{47bb2eb3-b6ac-4a6f-b8bc-5c452801cab9}"><source node="{166612e3-e627-4a7c-9f27-047f61a18905}" port="{21483265-4f3e-46e5-af12-964935e6fa5f}"/><destination node="{e3e0490d-c06c-4e3d-a245-6245a1a3b248}" port="{c9389a59-df09-11e2-b6ff-3c07546d87b6}"/></connection><connection uuid="{5c2dd29c-29a0-4210-8782-67f242398b8b}"><source node="{f9498daa-8786-4279-a537-647a5edb26f2}" port="{c93629bd-df09-11e2-96c3-3c07546d87b6}"/><destination node="{f8f875fe-fcdc-49c1-9553-4c955e91e79f}" port="{7905e7d7-310a-4a3e-b7c6-6d40c18f8ce7}"/></connection><connection uuid="{609f46bb-b0da-4279-9b76-18d966655ebc}"><source node="{a3f58478-0073-4a43-b076-5401aaf9f1c9}" port="{c93696f5-df09-11e2-957c-3c07546d87b6}"/><destination node="{61bad754-cfd8-4e33-b187-06ec9d3c1431}" port="{7905e7d7-310a-4a3e-b7c6-6d40c18f8ce7}"/></connection><connection uuid="{779b17a8-ef32-40dd-9947-04852791c62d}"><source node="{9c5813e3-c6e4-44f0-9b33-5f843282f749}" port="{c93825a1-df09-11e2-8b35-3c07546d87b6}"/><destination node="{58dfc85b-d203-4008-b236-4e38aaa911b2}" port="{7905e7d7-310a-4a3e-b7c6-6d40c18f8ce7}"/></connection><connection uuid="{89093e2f-e701-4d24-a875-1a9ee8b6ba8e}"><source node="{23cd8d66-d1c6-4027-891a-130e1e290da2}" port="{c93519f3-df09-11e2-b691-3c07546d87b6}"/><destination node="{96492708-fabf-44c8-bd50-065d2a4ae1b1}" port="{7905e7d7-310a-4a3e-b7c6-6d40c18f8ce7}"/></connection><connection uuid="{8b59d8f3-330b-4123-8654-5fdb40e8c64d}"><source node="{d384a4e1-c618-4bdd-973e-426fb614be3f}" port="{c9373eee-df09-11e2-9845-3c07546d87b6}"/><destination node="{73ab393d-2464-4b47-bf79-dc2b9705b151}" port="{7905e7d7-310a-4a3e-b7c6-6d40c18f8ce7}"/></connection><connection uuid="{9d68fb98-abbf-48e1-a919-639eb7deb3f3}"><source node="{8702e28b-812e-4b8c-a704-0ae1386339d3}" port="{c9360175-df09-11e2-9248-3c07546d87b6}"/><destination node="{166612e3-e627-4a7c-9f27-047f61a18905}" port="{5073af15-b38e-4d90-933d-5c7df51b9b61}"/></connection><connection uuid="{9db95941-4f8e-4f4d-a4c3-ec8bb8c8b1d8}"><source node="{33bb3e7f-6ca0-40b1-867a-dca99195a255}" port="{c9388ed1-df09-11e2-be51-3c07546d87b6}"/><destination node="{02e58836-be65-4ded-a677-36cd89a87848}" port="{574a3501-316b-4bbe-a524-b65cf190bd23}"/></connection><connection uuid="{b4b7cb3e-335c-4e98-93e8-6cdeb8b7a90d}"><source node="{26f20902-7018-4f3a-af3e-9acdbf617519}" port="{c936b35c-df09-11e2-9183-3c07546d87b6}"/><destination node="{f5d2af5d-498f-4fe9-9488-884e6018c7df}" port="{7905e7d7-310a-4a3e-b7c6-6d40c18f8ce7}"/></connection><connection uuid="{b6397e87-e400-44d8-afb7-abfd80a254d0}"><source node="{bd5afcf5-abd5-4d0b-a03c-2ea91388548a}" port="{accec739-2f28-483f-860d-413bb590f977}"/><destination node="{8ec9881a-6d7b-4a5d-81ec-d9597171da80}" port="{c9382c14-df09-11e2-b955-3c07546d87b6}"/></connection><connection uuid="{c93bb105-df09-11e2-a283-3c07546d87b6}"><source node="{76f5df0c-c066-4b35-86d4-ba23ede10669}" port="{c939db21-df09-11e2-b792-3c07546d87b6}"/><destination node="{86083854-99ae-45d6-ae30-22a5ff6910ec}" port="{c9387317-df09-11e2-a11a-3c07546d87b6}"/></connection><connection uuid="{c93bb1e1-df09-11e2-89da-3c07546d87b6}"><source node="{e33e1a6d-e3b7-4502-abdc-ac743137132d}" port="{c9368fd9-df09-11e2-8785-3c07546d87b6}"/><destination node="{f24428ec-c1c3-4428-a368-9c20cd516679}" port="{c937ecf3-df09-11e2-a4de-3c07546d87b6}"/></connection><connection uuid="{c93bb291-df09-11e2-ad6e-3c07546d87b6}"><source node="{db0e15e1-1fca-4096-a919-dc83dba0be2d}" port="{c9357059-df09-11e2-bf3f-3c07546d87b6}"/><destination node="{f073ec09-15ed-454b-b423-a9af3c965e93}" port="{c9352d35-df09-11e2-82f4-3c07546d87b6}"/></connection><connection uuid="{c93bb351-df09-11e2-9fb5-3c07546d87b6}"><source node="{e3e0490d-c06c-4e3d-a245-6245a1a3b248}" port="{c9389c19-df09-11e2-8111-3c07546d87b6}"/><destination node="{6979d20f-0cb4-4158-bc91-6cbe9ea8ad9b}" port="{c93a02bd-df09-11e2-af9a-3c07546d87b6}"/></connection><connection uuid="{c93bb3fa-df09-11e2-b3b4-3c07546d87b6}"><source node="{4f7bd3cc-8eff-4239-9cb2-40025a4f3b7c}" port="{c9377ad9-df09-11e2-8058-3c07546d87b6}"/><destination node="{8ec9881a-6d7b-4a5d-81ec-d9597171da80}" port="{c9382b23-df09-11e2-8e22-3c07546d87b6}"/></connection><connection uuid="{c93bb4a6-df09-11e2-ac68-3c07546d87b6}"><source node="{8ec9881a-6d7b-4a5d-81ec-d9597171da80}" port="{c9382d0c-df09-11e2-a497-3c07546d87b6}"/><destination node="{76f5df0c-c066-4b35-86d4-ba23ede10669}" port="{c939d92e-df09-11e2-aedd-3c07546d87b6}"/></connection><connection uuid="{c93bb54f-df09-11e2-a1ed-3c07546d87b6}"><source node="{e20f2293-38c8-49ca-982a-4f26001fac4f}" port="{c93b2e78-df09-11e2-8211-3c07546d87b6}"/><destination node="{f24428ec-c1c3-4428-a368-9c20cd516679}" port="{c937ebf8-df09-11e2-a4a9-3c07546d87b6}"/></connection><connection uuid="{c93bb5f0-df09-11e2-b7f3-3c07546d87b6}"><source node="{3ce278ed-af0d-4fc5-8bc8-1c451c23fa43}" port="{c934d1d4-df09-11e2-8387-3c07546d87b6}"/><destination node="{e3e0490d-c06c-4e3d-a245-6245a1a3b248}" port="{c93898ab-df09-11e2-8c45-3c07546d87b6}"/></connection><connection uuid="{c93bb6ae-df09-11e2-a695-3c07546d87b6}"><source node="{8a36a106-0ef6-4ce0-868b-c6c0f17d24fe}" port="{c93636ca-df09-11e2-9893-3c07546d87b6}"/><destination node="{f073ec09-15ed-454b-b423-a9af3c965e93}" port="{c9352bd7-df09-11e2-a459-3c07546d87b6}"/></connection><connection uuid="{c93bb757-df09-11e2-aed7-3c07546d87b6}"><source node="{6979d20f-0cb4-4158-bc91-6cbe9ea8ad9b}" port="{c93a0494-df09-11e2-a296-3c07546d87b6}"/><destination node="{c4752fe7-a428-4452-b915-2df9759bf716}" port="{c93b3c6b-df09-11e2-99eb-3c07546d87b6}"/></connection><connection uuid="{f58a8110-5960-4f62-bf70-0657b27f13e4}"><source node="{25a887d2-3d63-4aff-9970-a34213750a0a}" port="{c93a51eb-df09-11e2-941b-3c07546d87b6}"/><destination node="{bd5afcf5-abd5-4d0b-a03c-2ea91388548a}" port="{7c850255-e912-40a0-801b-ebd003f0faf5}"/></connection><connection uuid="{f7e7d33f-6c36-4adb-af27-e26b7ad74eac}"><source node="{868cb074-9c38-4bde-a3f1-505d24b729a3}" port="{3b2f43f3-52ee-461f-afed-e801efab8823}"/><destination node="{db0e15e1-1fca-4096-a919-dc83dba0be2d}" port="{c9356f2e-df09-11e2-8925-3c07546d87b6}"/></connection></flow><flow height="50" id="" uuid="{f722dd79-3176-4332-82f3-c2c66ae4d967}" width="50" x="1000" y="2375"><label>Test_of_Encodings</label><description></description><author></author><copyright></copyright><version></version><source></source><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{03089b49-e76b-4608-8ad6-83ac0add4e5d}" width="50" x="1075" y="2075"><label>File datasource</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/import_export_csv.py"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c938d626-df09-11e2-8b2b-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.functionselectortable" uuid="{035f658d-e04c-4f0c-abf9-ea53e6f4e62f}" width="50" x="1675" y="2525"><label>F(x) Table</label><description>Select and apply functions to a Table.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2012 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"clean_output": {"description": "Do not copy the input data to the output.", "label": "Clean output", "order": 0, "type": "boolean", "value": false},"selected_functions": {"description": "Select the functions to apply.", "editor": {"buttons": true, "filter": true, "passthrough": true, "selection": "multi", "type": "listview"}, "label": "Select functions", "list": ["UTF_8", "ISO_8859_1", "ISO_8859_15", "TestASCIIEncoding", "TestColumnDataTypes", "TestNoColumns", "TestSignalLengths", "UTF_16"], "order": 1, "passthrough": false, "type": "list", "value": [7], "value_names": ["UTF_16"]},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{c937f36e-df09-11e2-bcde-3c07546d87b6}"><label>Python *.py file</label><description>Python *.py file</description></input><input key="port2" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{c937f45e-df09-11e2-9753-3c07546d87b6}"><label>Input</label><description>Input</description></input><output key="port3" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{c937f54f-df09-11e2-ac7c-3c07546d87b6}"><label>Output</label><description>Output</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.functionselectortable" uuid="{061a69d0-f8dd-45da-92b5-40725392f80b}" width="50" x="1675" y="2175"><label>F(x) Table</label><description>Select and apply functions to a Table.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2012 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"clean_output": {"description": "Do not copy the input data to the output.", "label": "Clean output", "order": 0, "type": "boolean", "value": false},"selected_functions": {"description": "Select the functions to apply.", "editor": {"buttons": true, "filter": true, "passthrough": true, "selection": "multi", "type": "listview"}, "label": "Select functions", "list": ["UTF_8", "ISO_8859_1", "ISO_8859_15", "TestASCIIEncoding", "TestColumnDataTypes", "TestNoColumns", "TestSignalLengths", "UTF_16"], "order": 1, "passthrough": false, "type": "list", "value": [7], "value_names": ["UTF_16"]},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{c939b0ca-df09-11e2-a380-3c07546d87b6}"><label>Python *.py file</label><description>Python *.py file</description></input><input key="port2" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{c939b23d-df09-11e2-a778-3c07546d87b6}"><label>Input</label><description>Input</description></input><output key="port3" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{c939b3cc-df09-11e2-9edf-3c07546d87b6}"><label>Output</label><description>Output</description></output></ports></node><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{0b789416-a2a8-43c3-a686-f354b923f5ae}" width="50" x="600" y="2450"><label>File datasource</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/import_export_csv.py"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c935994a-df09-11e2-be91-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{108c759e-902d-4f56-8441-e77806f9421a}" width="50" x="1425" y="2525"><label>UTF-16 LE source</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/encoding_utf_16_LE.csv"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c9380ade-df09-11e2-bde7-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{11275bd1-7b2b-4f43-8bfa-fe040a1de516}" width="50" x="475" y="2000"><label>ASCII source</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/encoding_ascii.csv"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c939905c-df09-11e2-9631-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{192be6d9-6fc5-4fd1-9143-2ecb963026a8}" width="50" x="1425" y="2175"><label>UTF-16 BE BOM source</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/encoding_utf_16_BE_BOM.csv"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c9395a75-df09-11e2-abc2-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{19b1e93d-caf3-412a-b92a-0bccaafce37a}" width="50" x="1550" y="2100"><label>File datasource</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/import_export_csv.py"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c93adac2-df09-11e2-9ef2-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{1a50059a-3d21-4e56-ab0c-c99d4411a57f}" width="50" x="950" y="2000"><label>UTF-8 BOM source</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/encoding_utf_8_BOM.csv"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c93a6b8c-df09-11e2-a4d2-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.importtable" uuid="{1b45b9cc-e0bf-407c-8b7c-a3e8131bc14a}" width="50" x="1550" y="2350"><label>Table</label><description>Data source as a table</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"active_importer": {"description": "", "label": "", "order": 0, "type": "string", "value": "Auto"},"custom_importer_data": {"Auto": {"label": "", "order": 0, "type": "group"}, "label": "", "order": 0, "type": "group"},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{cdb8125b-406a-4593-bcf6-20bcf36db016}"><label>DataSource</label><description>DataSource</description></input><output key="port1" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{3473620d-25b3-416f-8991-a465c101b714}"><label>TableOutput</label><description>TableOutput</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.functionselectortable" uuid="{22566c5a-605d-4217-bcfc-cd92375ab9c8}" width="50" x="1675" y="2350"><label>F(x) Table</label><description>Select and apply functions to a Table.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2012 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"clean_output": {"description": "Do not copy the input data to the output.", "label": "Clean output", "order": 0, "type": "boolean", "value": false},"selected_functions": {"description": "Select the functions to apply.", "editor": {"buttons": true, "filter": true, "passthrough": true, "selection": "multi", "type": "listview"}, "label": "Select functions", "list": ["UTF_8", "ISO_8859_1", "ISO_8859_15", "TestASCIIEncoding", "TestColumnDataTypes", "TestNoColumns", "TestSignalLengths", "UTF_16"], "order": 1, "passthrough": false, "type": "list", "value": [7], "value_names": ["UTF_16"]},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{c935c080-df09-11e2-8999-3c07546d87b6}"><label>Python *.py file</label><description>Python *.py file</description></input><input key="port2" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{c935c226-df09-11e2-9b67-3c07546d87b6}"><label>Input</label><description>Input</description></input><output key="port3" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{c935c3d4-df09-11e2-b5bb-3c07546d87b6}"><label>Output</label><description>Output</description></output></ports></node><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{2349b2ac-3ab6-47d5-8436-b4c325d319e0}" width="50" x="600" y="2275"><label>File datasource</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/import_export_csv.py"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c937e614-df09-11e2-b1f5-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{26149d6b-edda-4848-8a3e-7ec1c647d2df}" width="50" x="1550" y="2275"><label>File datasource</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/import_export_csv.py"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c935d6d9-df09-11e2-adb3-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.functionselectortable" uuid="{2acb4361-dbb5-4037-8cfe-390ba32d13f6}" width="50" x="1200" y="2000"><label>F(x) Table</label><description>Select and apply functions to a Table.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2012 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"clean_output": {"description": "Do not copy the input data to the output.", "label": "Clean output", "order": 0, "type": "boolean", "value": false},"selected_functions": {"description": "Select the functions to apply.", "editor": {"buttons": true, "filter": true, "passthrough": true, "selection": "multi", "type": "listview"}, "label": "Select functions", "list": ["UTF_8", "ISO_8859_1", "ISO_8859_15", "TestASCIIEncoding", "TestColumnDataTypes", "TestNoColumns", "TestSignalLengths"], "order": 1, "passthrough": false, "type": "list", "value": [0], "value_names": ["UTF_8"]},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{c9397eca-df09-11e2-b3ef-3c07546d87b6}"><label>Python *.py file</label><description>Python *.py file</description></input><input key="port2" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{c9397fc5-df09-11e2-9037-3c07546d87b6}"><label>Input</label><description>Input</description></input><output key="port3" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{c93980bd-df09-11e2-bff0-3c07546d87b6}"><label>Output</label><description>Output</description></output></ports></node><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{2eaabbe1-448a-4420-9976-01280e06d23d}" width="50" x="1550" y="2450"><label>File datasource</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/import_export_csv.py"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c9388273-df09-11e2-8428-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.importtable" uuid="{2efb7790-3a2a-4663-adea-3b07292df328}" width="50" x="1550" y="2525"><label>Table</label><description>Data source as a table</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"active_importer": {"description": "", "label": "", "order": 0, "type": "string", "value": "CSV"},"custom_importer_data": {"Auto": {"label": "", "order": 0, "type": "group"}, "CSV": {"data_end_row": {"description": "The last data row.", "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 0}, "data_start_row": {"description": "The first row where data is stored.", "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "delimiter": {"description": "", "label": "", "order": 0, "type": "string", "value": ","}, "description_row": {"description": "The row where the descriptions are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "descriptions": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "double_quotations": {"description": "Remove double quotations in importation.", "label": "Remove double quotations", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "label": "", "order": 0, "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "headers": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "no_preview_rows": {"description": "The number of preview rows to show.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20}, "other_delimiter": {"description": "Enter other delimiter than the standard ones.", "label": "", "order": 0, "type": "string", "value": " "}, "preview_start_row": {"description": "The first row where data will review from.", "editor": {"max": 500, "min": -500, "step": 1, "type": "spinbox"}, "label": "Preview start row", "order": 0, "type": "integer", "value": 1}, "source_coding": {"description": "", "label": "", "order": 0, "type": "string", "value": "utf_16_le"}, "transposed": {"description": "Transpose the data.", "label": "Transpose input data", "order": 0, "type": "boolean", "value": false}, "type": "group", "unit_row": {"description": "The row where the units are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "units": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}}, "HDF5": {"path_list": {"description": "The paths selected to import data from.", "editor": {"type": "combobox"}, "label": "Selected paths", "list": [], "order": 0, "passthrough": false, "type": "list", "value": [], "value_names": []}, "type": "group"}, "SQL": {"type": "group"}, "Table": {"type": "group"}, "XLS": {"data_end_row": {"description": "The last data row.", "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 0}, "data_start_row": {"description": "The first row where data is stored.", "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 2}, "description_row": {"description": "The row where the descriptions are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "descriptions": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "label": "", "order": 0, "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "headers": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20}, "preview_start_row": {"description": "The first row where data will review from.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Preview start row", "order": 0, "type": "integer", "value": 1}, "transposed": {"description": "Transpose the data.", "label": "Transpose input", "order": 0, "type": "boolean", "value": false}, "type": "group", "unit_row": {"description": "The row where the units are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "units": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "worksheet_name": {"description": "The worksheet to import from.", "editor": {"type": "combobox"}, "label": "Select worksheet", "list": [], "order": 0, "passthrough": false, "type": "list", "value": [0], "value_names": []}}, "label": "", "order": 0, "type": "group"},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{ad189fc5-0b3b-47c3-9937-071bd1c52e73}"><label>DataSource</label><description>DataSource</description></input><output key="port1" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{129ecb54-eb9a-4646-8ebb-b3728f013898}"><label>TableOutput</label><description>TableOutput</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.importtable" uuid="{308b95b7-b1bd-4e23-8829-131ddf7ffacc}" width="50" x="1075" y="2150"><label>Table</label><description>Data source as a table</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"active_importer": {"description": "", "label": "", "order": 0, "type": "string", "value": "Auto"},"custom_importer_data": {"Auto": {"label": "", "order": 0, "type": "group"}, "CSV": {"data_end_row": {"description": "The last data row.", "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 0}, "data_start_row": {"description": "The first row where data is stored.", "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "delimiter": {"description": "", "label": "", "order": 0, "type": "string", "value": ","}, "description_row": {"description": "The row where the descriptions are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "descriptions": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "double_quotations": {"description": "Remove double quotations in importation.", "label": "Remove double quotations", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "label": "", "order": 0, "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "headers": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "no_preview_rows": {"description": "The number of preview rows to show.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20}, "other_delimiter": {"description": "Enter other delimiter than the standard ones.", "label": "", "order": 0, "type": "string", "value": " "}, "preview_start_row": {"description": "The first row where data will review from.", "editor": {"max": 500, "min": -500, "step": 1, "type": "spinbox"}, "label": "Preview start row", "order": 0, "type": "integer", "value": 1}, "source_coding": {"description": "", "label": "", "order": 0, "type": "string", "value": "utf_8"}, "transposed": {"description": "Transpose the data.", "label": "Transpose input data", "order": 0, "type": "boolean", "value": false}, "type": "group", "unit_row": {"description": "The row where the units are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "units": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}}, "HDF5": {"path_list": {"description": "The paths selected to import data from.", "editor": {"type": "combobox"}, "label": "Selected paths", "list": [], "order": 0, "passthrough": false, "type": "list", "value": [], "value_names": []}, "type": "group"}, "SQL": {"type": "group"}, "Table": {"type": "group"}, "XLS": {"data_end_row": {"description": "The last data row.", "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 0}, "data_start_row": {"description": "The first row where data is stored.", "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 2}, "description_row": {"description": "The row where the descriptions are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "descriptions": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "label": "", "order": 0, "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "headers": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20}, "preview_start_row": {"description": "The first row where data will review from.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Preview start row", "order": 0, "type": "integer", "value": 1}, "transposed": {"description": "Transpose the data.", "label": "Transpose input", "order": 0, "type": "boolean", "value": false}, "type": "group", "unit_row": {"description": "The row where the units are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "units": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "worksheet_name": {"description": "The worksheet to import from.", "editor": {"type": "combobox"}, "label": "Select worksheet", "list": [], "order": 0, "passthrough": false, "type": "list", "value": [0], "value_names": []}}, "label": "", "order": 0, "type": "group"},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{aabed58b-eb67-46ed-9259-53494539cc24}"><label>DataSource</label><description>DataSource</description></input><output key="port1" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{22dabe43-1f58-4159-b289-02861ea13c49}"><label>TableOutput</label><description>TableOutput</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.importtable" uuid="{518e68e5-d586-4aad-a6b6-b5bc04c83598}" width="50" x="600" y="2350"><label>Table</label><description>Data source as a table</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"active_importer": {"description": "", "label": "", "order": 0, "type": "string", "value": "CSV"},"custom_importer_data": {"Auto": {"label": "", "order": 0, "type": "group"}, "CSV": {"data_end_row": {"description": "The last data row.", "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 0}, "data_start_row": {"description": "The first row where data is stored.", "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "delimiter": {"description": "", "label": "", "order": 0, "type": "string", "value": ","}, "description_row": {"description": "The row where the descriptions are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "descriptions": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "double_quotations": {"description": "Remove double quotations in importation.", "label": "Remove double quotations", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "label": "", "order": 0, "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "headers": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "no_preview_rows": {"description": "The number of preview rows to show.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20}, "other_delimiter": {"description": "Enter other delimiter than the standard ones.", "label": "", "order": 0, "type": "string", "value": " "}, "preview_start_row": {"description": "The first row where data will review from.", "editor": {"max": 500, "min": -500, "step": 1, "type": "spinbox"}, "label": "Preview start row", "order": 0, "type": "integer", "value": 1}, "source_coding": {"description": "", "label": "", "order": 0, "type": "string", "value": "iso8859_15"}, "transposed": {"description": "Transpose the data.", "label": "Transpose input data", "order": 0, "type": "boolean", "value": false}, "type": "group", "unit_row": {"description": "The row where the units are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "units": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}}, "HDF5": {"path_list": {"description": "The paths selected to import data from.", "editor": {"type": "combobox"}, "label": "Selected paths", "list": [], "order": 0, "passthrough": false, "type": "list", "value": [], "value_names": []}, "type": "group"}, "SQL": {"type": "group"}, "Table": {"type": "group"}, "XLS": {"data_end_row": {"description": "The last data row.", "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 0}, "data_start_row": {"description": "The first row where data is stored.", "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 2}, "description_row": {"description": "The row where the descriptions are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "descriptions": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "label": "", "order": 0, "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "headers": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20}, "preview_start_row": {"description": "The first row where data will review from.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Preview start row", "order": 0, "type": "integer", "value": 1}, "transposed": {"description": "Transpose the data.", "label": "Transpose input", "order": 0, "type": "boolean", "value": false}, "type": "group", "unit_row": {"description": "The row where the units are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "units": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "worksheet_name": {"description": "The worksheet to import from.", "editor": {"type": "combobox"}, "label": "Select worksheet", "list": [], "order": 0, "passthrough": false, "type": "list", "value": [0], "value_names": []}}, "label": "", "order": 0, "type": "group"},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{ab15e692-c026-46be-bb9f-66d13bba63ec}"><label>DataSource</label><description>DataSource</description></input><output key="port1" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{416c6024-cbd5-48f7-bddf-e4fcbcf86f02}"><label>TableOutput</label><description>TableOutput</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.functionselectortable" uuid="{5e030eb0-02a7-4ccb-acc5-1ea2ab39dafe}" width="50" x="725" y="2175"><label>F(x) Table</label><description>Select and apply functions to a Table.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2012 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"clean_output": {"description": "Do not copy the input data to the output.", "label": "Clean output", "order": 0, "type": "boolean", "value": false},"selected_functions": {"description": "Select the functions to apply.", "editor": {"buttons": true, "filter": true, "passthrough": true, "selection": "multi", "type": "listview"}, "label": "Select functions", "list": ["TestASCIIEncoding", "ISO_8859_1", "TestColumnDataTypes", "TestNoColumns", "TestSignalLengths"], "order": 1, "passthrough": false, "type": "list", "value": [1], "value_names": ["ISO_8859_1"]},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{c934e645-df09-11e2-adc2-3c07546d87b6}"><label>Python *.py file</label><description>Python *.py file</description></input><input key="port2" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{c934e7c0-df09-11e2-a6ef-3c07546d87b6}"><label>Input</label><description>Input</description></input><output key="port3" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{c934e947-df09-11e2-b557-3c07546d87b6}"><label>Output</label><description>Output</description></output></ports></node><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{7a053da4-ab65-4de4-8e51-3a57fa30c081}" width="50" x="475" y="2350"><label>ISO_8859-15 source</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/encoding_iso_8859_15.csv"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c937b997-df09-11e2-ac65-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{84d62beb-bbd4-42c2-b146-06cd6c6b0ca8}" width="50" x="1075" y="1925"><label>File datasource</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/import_export_csv.py"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c936bd0c-df09-11e2-b432-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.importtable" uuid="{895dd962-4334-4602-aab1-f6afad775f75}" width="50" x="1075" y="2000"><label>Table</label><description>Data source as a table</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"active_importer": {"description": "", "label": "", "order": 0, "type": "string", "value": "Auto"},"custom_importer_data": {"Auto": {"label": "", "order": 0, "type": "group"}, "label": "", "order": 0, "type": "group"},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{71e580f7-c929-4659-bb77-5a4079f77a28}"><label>DataSource</label><description>DataSource</description></input><output key="port1" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{ebd2259c-5fd7-4d26-9798-5d0ccaeda8e6}"><label>TableOutput</label><description>TableOutput</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.functionselectortable" uuid="{8a1945bf-93b4-491f-a1e4-afc51e7f4cf0}" width="50" x="725" y="2350"><label>F(x) Table</label><description>Select and apply functions to a Table.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2012 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"clean_output": {"description": "Do not copy the input data to the output.", "label": "Clean output", "order": 0, "type": "boolean", "value": false},"selected_functions": {"description": "Select the functions to apply.", "editor": {"buttons": true, "filter": true, "passthrough": true, "selection": "multi", "type": "listview"}, "label": "Select functions", "list": ["ISO_8859_1", "ISO_8859_15", "TestASCIIEncoding", "TestColumnDataTypes", "TestNoColumns", "TestSignalLengths"], "order": 1, "passthrough": false, "type": "list", "value": [1], "value_names": ["ISO_8859_15"]},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{c9358b94-df09-11e2-9293-3c07546d87b6}"><label>Python *.py file</label><description>Python *.py file</description></input><input key="port2" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{c9358d05-df09-11e2-b9a3-3c07546d87b6}"><label>Input</label><description>Input</description></input><output key="port3" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{c9358e9e-df09-11e2-8482-3c07546d87b6}"><label>Output</label><description>Output</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.functionselectortable" uuid="{a97dfd54-d90e-4dd4-afb8-e025075876fc}" width="50" x="1675" y="2000"><label>F(x) Table</label><description>Select and apply functions to a Table.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2012 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"clean_output": {"description": "Do not copy the input data to the output.", "label": "Clean output", "order": 0, "type": "boolean", "value": false},"selected_functions": {"description": "Select the functions to apply.", "editor": {"buttons": true, "filter": true, "passthrough": true, "selection": "multi", "type": "listview"}, "label": "Select functions", "list": ["UTF_16", "ISO_8859_1", "ISO_8859_15", "TestASCIIEncoding", "TestColumnDataTypes", "TestNoColumns", "TestSignalLengths", "UTF_8", "Windows_1252"], "order": 1, "passthrough": false, "type": "list", "value": [0], "value_names": ["UTF_16"]},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{c937a987-df09-11e2-a7f4-3c07546d87b6}"><label>Python *.py file</label><description>Python *.py file</description></input><input key="port2" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{c937ab54-df09-11e2-a4c9-3c07546d87b6}"><label>Input</label><description>Input</description></input><output key="port3" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{c937ad4a-df09-11e2-b97e-3c07546d87b6}"><label>Output</label><description>Output</description></output></ports></node><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{aa4987ed-693a-428d-99f4-0b15eb9144d4}" width="50" x="1425" y="2000"><label>UTF-16 BE source</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/encoding_utf_16_BE.csv"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c93538eb-df09-11e2-ae96-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.functionselectortable" uuid="{b139edc1-de90-41c8-9a2f-35b899beddca}" width="50" x="1200" y="2150"><label>F(x) Table</label><description>Select and apply functions to a Table.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2012 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"clean_output": {"description": "Do not copy the input data to the output.", "label": "Clean output", "order": 0, "type": "boolean", "value": false},"selected_functions": {"description": "Select the functions to apply.", "editor": {"buttons": true, "filter": true, "passthrough": true, "selection": "multi", "type": "listview"}, "label": "Select functions", "list": ["UTF_8", "ISO_8859_1", "ISO_8859_15", "TestASCIIEncoding", "TestColumnDataTypes", "TestNoColumns", "TestSignalLengths"], "order": 1, "passthrough": false, "type": "list", "value": [0], "value_names": ["UTF_8"]},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{c93b2638-df09-11e2-ab04-3c07546d87b6}"><label>Python *.py file</label><description>Python *.py file</description></input><input key="port2" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{c93b2717-df09-11e2-a704-3c07546d87b6}"><label>Input</label><description>Input</description></input><output key="port3" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{c93b2805-df09-11e2-81d6-3c07546d87b6}"><label>Output</label><description>Output</description></output></ports></node><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{b41fe192-ec46-4889-b9ff-d1482ff5de69}" width="50" x="950" y="2150"><label>UTF-8 source</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/encoding_utf_8.csv"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c93864d7-df09-11e2-b78d-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{bbbcf544-0adf-48ce-ae5d-5a39753c653c}" width="50" x="1425" y="2350"><label>UTF-16 LE BOM source</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/encoding_utf_16_LE_BOM.csv"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c935fa7a-df09-11e2-ab57-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.importtable" uuid="{c43c5342-ea7d-4609-a00b-d7da9593244e}" width="50" x="600" y="2175"><label>Table</label><description>Data source as a table</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"active_importer": {"description": "", "label": "", "order": 0, "type": "string", "value": "Auto"},"custom_importer_data": {"Auto": {"label": "", "order": 0, "type": "group"}, "CSV": {"data_end_row": {"description": "The last data row.", "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 0}, "data_start_row": {"description": "The first row where data is stored.", "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "delimiter": {"description": "", "label": "", "order": 0, "type": "string", "value": ","}, "description_row": {"description": "The row where the descriptions are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "descriptions": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "double_quotations": {"description": "Remove double quotations in importation.", "label": "Remove double quotations", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "label": "", "order": 0, "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "headers": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "no_preview_rows": {"description": "The number of preview rows to show.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20}, "other_delimiter": {"description": "Enter other delimiter than the standard ones.", "label": "", "order": 0, "type": "string", "value": " "}, "preview_start_row": {"description": "The first row where data will review from.", "editor": {"max": 500, "min": -500, "step": 1, "type": "spinbox"}, "label": "Preview start row", "order": 0, "type": "integer", "value": 1}, "source_coding": {"description": "", "label": "", "order": 0, "type": "string", "value": "iso8859_1"}, "transposed": {"description": "Transpose the data.", "label": "Transpose input data", "order": 0, "type": "boolean", "value": false}, "type": "group", "unit_row": {"description": "The row where the units are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "units": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}}, "HDF5": {"path_list": {"description": "The paths selected to import data from.", "editor": {"type": "combobox"}, "label": "Selected paths", "list": [], "order": 0, "passthrough": false, "type": "list", "value": [], "value_names": []}, "type": "group"}, "SQL": {"type": "group"}, "Table": {"type": "group"}, "XLS": {"data_end_row": {"description": "The last data row.", "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 0}, "data_start_row": {"description": "The first row where data is stored.", "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 2}, "description_row": {"description": "The row where the descriptions are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "descriptions": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "label": "", "order": 0, "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "headers": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20}, "preview_start_row": {"description": "The first row where data will review from.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Preview start row", "order": 0, "type": "integer", "value": 1}, "transposed": {"description": "Transpose the data.", "label": "Transpose input", "order": 0, "type": "boolean", "value": false}, "type": "group", "unit_row": {"description": "The row where the units are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "units": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "worksheet_name": {"description": "The worksheet to import from.", "editor": {"type": "combobox"}, "label": "Select worksheet", "list": [], "order": 0, "passthrough": false, "type": "list", "value": [0], "value_names": []}}, "label": "", "order": 0, "type": "group"},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{fced0d3d-bcd8-4597-ad72-9b27bc1862eb}"><label>DataSource</label><description>DataSource</description></input><output key="port1" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{8e7d349a-3210-407a-b8d3-65d68a8d3b62}"><label>TableOutput</label><description>TableOutput</description></output></ports></node><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{c628bfd9-d3ba-4ae3-8358-59657b971340}" width="50" x="600" y="1925"><label>File datasource</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/import_export_csv.py"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c9371107-df09-11e2-9f1e-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.importtable" uuid="{c6f6b972-9b35-4f78-8504-d57b6c9d3670}" width="50" x="1550" y="2000"><label>Table</label><description>Data source as a table</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"active_importer": {"description": "", "label": "", "order": 0, "type": "string", "value": "CSV"},"custom_importer_data": {"Auto": {"label": "", "order": 0, "type": "group"}, "CSV": {"data_end_row": {"description": "The last data row.", "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 0}, "data_start_row": {"description": "The first row where data is stored.", "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "delimiter": {"description": "", "label": "", "order": 0, "type": "string", "value": ","}, "description_row": {"description": "The row where the descriptions are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "descriptions": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "double_quotations": {"description": "Remove double quotations in importation.", "label": "Remove double quotations", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "label": "", "order": 0, "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "headers": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "no_preview_rows": {"description": "The number of preview rows to show.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20}, "other_delimiter": {"description": "Enter other delimiter than the standard ones.", "label": "", "order": 0, "type": "string", "value": " "}, "preview_start_row": {"description": "The first row where data will review from.", "editor": {"max": 500, "min": -500, "step": 1, "type": "spinbox"}, "label": "Preview start row", "order": 0, "type": "integer", "value": 1}, "source_coding": {"description": "", "label": "", "order": 0, "type": "string", "value": "utf_16_be"}, "transposed": {"description": "Transpose the data.", "label": "Transpose input data", "order": 0, "type": "boolean", "value": false}, "type": "group", "unit_row": {"description": "The row where the units are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "units": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}}, "HDF5": {"path_list": {"description": "The paths selected to import data from.", "editor": {"type": "combobox"}, "label": "Selected paths", "list": [], "order": 0, "passthrough": false, "type": "list", "value": [], "value_names": []}, "type": "group"}, "SQL": {"type": "group"}, "Table": {"type": "group"}, "XLS": {"data_end_row": {"description": "The last data row.", "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 0}, "data_start_row": {"description": "The first row where data is stored.", "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 2}, "description_row": {"description": "The row where the descriptions are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "descriptions": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "label": "", "order": 0, "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "headers": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20}, "preview_start_row": {"description": "The first row where data will review from.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Preview start row", "order": 0, "type": "integer", "value": 1}, "transposed": {"description": "Transpose the data.", "label": "Transpose input", "order": 0, "type": "boolean", "value": false}, "type": "group", "unit_row": {"description": "The row where the units are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "units": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "worksheet_name": {"description": "The worksheet to import from.", "editor": {"type": "combobox"}, "label": "Select worksheet", "list": [], "order": 0, "passthrough": false, "type": "list", "value": [0], "value_names": []}}, "label": "", "order": 0, "type": "group"},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{df3530cb-a138-4fb4-8499-1fb9fd76f3a7}"><label>DataSource</label><description>DataSource</description></input><output key="port1" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{1508f814-ce87-49d6-b52b-91002622bfe6}"><label>TableOutput</label><description>TableOutput</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.importtable" uuid="{d62ef980-149c-4461-a335-33f17579334a}" width="50" x="600" y="2525"><label>Table</label><description>Data source as a table</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"active_importer": {"description": "", "label": "", "order": 0, "type": "string", "value": "CSV"},"custom_importer_data": {"Auto": {"label": "", "order": 0, "type": "group"}, "CSV": {"data_end_row": {"description": "The last data row.", "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 0}, "data_start_row": {"description": "The first row where data is stored.", "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "delimiter": {"description": "", "label": "", "order": 0, "type": "string", "value": ","}, "description_row": {"description": "The row where the descriptions are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "descriptions": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "double_quotations": {"description": "Remove double quotations in importation.", "label": "Remove double quotations", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "label": "", "order": 0, "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "headers": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "no_preview_rows": {"description": "The number of preview rows to show.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20}, "other_delimiter": {"description": "Enter other delimiter than the standard ones.", "label": "", "order": 0, "type": "string", "value": " "}, "preview_start_row": {"description": "The first row where data will review from.", "editor": {"max": 500, "min": -500, "step": 1, "type": "spinbox"}, "label": "Preview start row", "order": 0, "type": "integer", "value": 1}, "source_coding": {"description": "", "label": "", "order": 0, "type": "string", "value": "windows-1252"}, "transposed": {"description": "Transpose the data.", "label": "Transpose input data", "order": 0, "type": "boolean", "value": false}, "type": "group", "unit_row": {"description": "The row where the units are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "units": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}}, "HDF5": {"path_list": {"description": "The paths selected to import data from.", "editor": {"type": "combobox"}, "label": "Selected paths", "list": [], "order": 0, "passthrough": false, "type": "list", "value": [], "value_names": []}, "type": "group"}, "SQL": {"type": "group"}, "Table": {"type": "group"}, "XLS": {"data_end_row": {"description": "The last data row.", "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 0}, "data_start_row": {"description": "The first row where data is stored.", "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 2}, "description_row": {"description": "The row where the descriptions are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "descriptions": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "label": "", "order": 0, "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "headers": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20}, "preview_start_row": {"description": "The first row where data will review from.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Preview start row", "order": 0, "type": "integer", "value": 1}, "transposed": {"description": "Transpose the data.", "label": "Transpose input", "order": 0, "type": "boolean", "value": false}, "type": "group", "unit_row": {"description": "The row where the units are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "units": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "worksheet_name": {"description": "The worksheet to import from.", "editor": {"type": "combobox"}, "label": "Select worksheet", "list": [], "order": 0, "passthrough": false, "type": "list", "value": [0], "value_names": []}}, "label": "", "order": 0, "type": "group"},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{7bf3f456-ae91-412e-aff1-0d189a5a2b7e}"><label>DataSource</label><description>DataSource</description></input><output key="port1" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{46376c5b-155a-4033-9de5-37ac54e0c7c0}"><label>TableOutput</label><description>TableOutput</description></output></ports></node><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{db8ece53-b0b4-4ee0-af08-cd018d7f5fe2}" width="50" x="475" y="2525"><label>Windows-1252 source</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/encoding_windows_1252.csv"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c938ec61-df09-11e2-bf42-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.importtable" uuid="{de9a3987-a05a-44c4-8d0f-70bf94eae945}" width="50" x="600" y="2000"><label>Table</label><description>Data source as a table</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"active_importer": {"description": "", "label": "", "order": 0, "type": "string", "value": "CSV"},"custom_importer_data": {"Auto": {"label": "", "order": 0, "type": "group"}, "CSV": {"data_end_row": {"description": "The last data row.", "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 0}, "data_start_row": {"description": "The first row where data is stored.", "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "delimiter": {"description": "", "label": "", "order": 0, "type": "string", "value": ","}, "description_row": {"description": "The row where the descriptions are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "descriptions": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "double_quotations": {"description": "Remove double quotations in importation.", "label": "Remove double quotations", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "label": "", "order": 0, "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "headers": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "no_preview_rows": {"description": "The number of preview rows to show.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20}, "other_delimiter": {"description": "Enter other delimiter than the standard ones.", "label": "", "order": 0, "type": "string", "value": " "}, "preview_start_row": {"description": "The first row where data will review from.", "editor": {"max": 500, "min": -500, "step": 1, "type": "spinbox"}, "label": "Preview start row", "order": 0, "type": "integer", "value": 1}, "source_coding": {"description": "", "label": "", "order": 0, "type": "string", "value": "ascii"}, "transposed": {"description": "Transpose the data.", "label": "Transpose input data", "order": 0, "type": "boolean", "value": false}, "type": "group", "unit_row": {"description": "The row where the units are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "units": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}}, "HDF5": {"path_list": {"description": "The paths selected to import data from.", "editor": {"type": "combobox"}, "label": "Selected paths", "list": [], "order": 0, "passthrough": false, "type": "list", "value": [], "value_names": []}, "type": "group"}, "SQL": {"type": "group"}, "Table": {"type": "group"}, "XLS": {"data_end_row": {"description": "The last data row.", "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 0}, "data_start_row": {"description": "The first row where data is stored.", "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 2}, "description_row": {"description": "The row where the descriptions are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "descriptions": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "label": "", "order": 0, "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "headers": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20}, "preview_start_row": {"description": "The first row where data will review from.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "Preview start row", "order": 0, "type": "integer", "value": 1}, "transposed": {"description": "Transpose the data.", "label": "Transpose input", "order": 0, "type": "boolean", "value": false}, "type": "group", "unit_row": {"description": "The row where the units are located.", "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}, "label": "", "order": 0, "type": "integer", "value": 1}, "units": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "worksheet_name": {"description": "The worksheet to import from.", "editor": {"type": "combobox"}, "label": "Select worksheet", "list": [], "order": 0, "passthrough": false, "type": "list", "value": [0], "value_names": []}}, "label": "", "order": 0, "type": "group"},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{0e6693f1-28cc-41ff-b189-c3587d8df239}"><label>DataSource</label><description>DataSource</description></input><output key="port1" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{a41016df-e462-44e5-a818-d5221c453daa}"><label>TableOutput</label><description>TableOutput</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.functionselectortable" uuid="{e3570ad0-48bd-4af7-9105-ccd037162852}" width="50" x="725" y="2000"><label>F(x) Table</label><description>Select and apply functions to a Table.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2012 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"clean_output": {"description": "Do not copy the input data to the output.", "label": "Clean output", "order": 0, "type": "boolean", "value": false},"selected_functions": {"description": "Select the functions to apply.", "editor": {"buttons": true, "filter": true, "passthrough": true, "selection": "multi", "type": "listview"}, "label": "Select functions", "list": ["UTF_8", "ISO_8859_1", "ISO_8859_15", "TestASCIIEncoding", "TestSignalLengths", "TestColumnDataTypes", "TestNoColumns", "UTF_16", "Windows_1252"], "order": 1, "passthrough": false, "type": "list", "value": [3], "value_names": ["TestASCIIEncoding"]},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{c93801f8-df09-11e2-9ac1-3c07546d87b6}"><label>Python *.py file</label><description>Python *.py file</description></input><input key="port2" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{c93802de-df09-11e2-9404-3c07546d87b6}"><label>Input</label><description>Input</description></input><output key="port3" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{c93803d7-df09-11e2-9ce6-3c07546d87b6}"><label>Output</label><description>Output</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.functionselectortable" uuid="{e3a87d69-0160-4448-9346-1530acfd372b}" width="50" x="725" y="2525"><label>F(x) Table</label><description>Select and apply functions to a Table.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2012 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"clean_output": {"description": "Do not copy the input data to the output.", "label": "Clean output", "order": 0, "type": "boolean", "value": false},"selected_functions": {"description": "Select the functions to apply.", "editor": {"buttons": true, "filter": true, "passthrough": true, "selection": "multi", "type": "listview"}, "label": "Select functions", "list": ["UTF_16", "ISO_8859_1", "ISO_8859_15", "TestASCIIEncoding", "TestColumnDataTypes", "TestNoColumns", "TestSignalLengths", "UTF_8", "Windows_1252"], "order": 1, "passthrough": false, "type": "list", "value": [8], "value_names": ["Windows_1252"]},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{c935422e-df09-11e2-b47a-3c07546d87b6}"><label>Python *.py file</label><description>Python *.py file</description></input><input key="port2" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{c9354397-df09-11e2-8a48-3c07546d87b6}"><label>Input</label><description>Input</description></input><output key="port3" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{c9354526-df09-11e2-9834-3c07546d87b6}"><label>Output</label><description>Output</description></output></ports></node><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{eb182387-889f-4435-b6d3-6987c896f444}" width="50" x="475" y="2175"><label>ISO_8859-1 source</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/encoding_iso_8859_1.csv"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c938f8b8-df09-11e2-9ccb-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{f5e5bf18-a1c9-4a64-a910-b896afe1e819}" width="50" x="1550" y="1925"><label>File datasource</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/import_export_csv.py"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c93366d1-df09-11e2-b74e-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><node height="50" id="org.sysess.sympathy.data.table.importtable" uuid="{f7c8d3f3-a310-4b09-bfd2-f93582d809aa}" width="50" x="1550" y="2175"><label>Table</label><description>Data source as a table</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"active_importer": {"description": "", "label": "", "order": 0, "type": "string", "value": "Auto"},"custom_importer_data": {"Auto": {"label": "", "order": 0, "type": "group"}, "label": "", "order": 0, "type": "group"},"type": "group"}]]></parameters><ports><input key="port1" optional="False" requiresdata="True" scheme="text" type="datasource" uuid="{5822cdf1-8034-41bf-9147-728a327dabfd}"><label>DataSource</label><description>DataSource</description></input><output key="port1" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{d99c2ed5-110b-48e9-bf59-334007d0830e}"><label>TableOutput</label><description>TableOutput</description></output></ports></node><node height="50" id="org.sysess.sympathy.datasources.filedatasource" uuid="{fd63cfa0-110c-4451-a30b-d1e8effdbbbb}" width="50" x="600" y="2100"><label>File datasource</label><description>Select a data source.</description><author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"datasource_type": {"description": "Type of datasource.", "label": "Datasource type", "list": ["File", "Database"], "order": 999, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_databasename": {"description": "The name of the database.", "label": "Database name", "order": 4, "type": "string", "value": ""},"db_driver": {"description": "Database driver to use.", "editor": {"type": "combobox"}, "label": "Database driver", "list": ["SQL Server"], "order": 2, "passthrough": false, "type": "list", "value": [0], "value_names": []},"db_password": {"description": "A valid password for the selected user.", "label": "Password", "order": 6, "type": "string", "value": ""},"db_servername": {"description": "A valid name to a database server.", "label": "Server name", "order": 3, "type": "string", "value": ""},"db_user": {"description": "A valid database user.", "label": "User", "order": 5, "type": "string", "value": ""},"filename": {"description": "A filename including path if needed", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "label": "Filename", "order": 1, "type": "string", "value": "data/import_export_csv.py"},"type": "group","use_relative_path": {"description": "Use the relative path to the file.", "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}]]></parameters><ports><output key="port1" optional="False" requiresdata="False" scheme="text" type="datasource" uuid="{c93978ee-df09-11e2-af3d-3c07546d87b6}"><label>DataSource</label><description>DataSource</description></output></ports></node><connection uuid="{08affec3-8f39-44ed-8bdd-188089bb0d60}"><source node="{192be6d9-6fc5-4fd1-9143-2ecb963026a8}" port="{c9395a75-df09-11e2-abc2-3c07546d87b6}"/><destination node="{f7c8d3f3-a310-4b09-bfd2-f93582d809aa}" port="{5822cdf1-8034-41bf-9147-728a327dabfd}"/></connection><connection uuid="{0c8de43b-c068-4378-a73f-8c058d8bf6c0}"><source node="{518e68e5-d586-4aad-a6b6-b5bc04c83598}" port="{416c6024-cbd5-48f7-bddf-e4fcbcf86f02}"/><destination node="{8a1945bf-93b4-491f-a1e4-afc51e7f4cf0}" port="{c9358d05-df09-11e2-b9a3-3c07546d87b6}"/></connection><connection uuid="{12e2fd02-defe-44fb-b7e2-e0a300490df6}"><source node="{7a053da4-ab65-4de4-8e51-3a57fa30c081}" port="{c937b997-df09-11e2-ac65-3c07546d87b6}"/><destination node="{518e68e5-d586-4aad-a6b6-b5bc04c83598}" port="{ab15e692-c026-46be-bb9f-66d13bba63ec}"/></connection><connection uuid="{1508692a-0d64-40dd-a8d7-d76e204df051}"><source node="{d62ef980-149c-4461-a335-33f17579334a}" port="{46376c5b-155a-4033-9de5-37ac54e0c7c0}"/><destination node="{e3a87d69-0160-4448-9346-1530acfd372b}" port="{c9354397-df09-11e2-8a48-3c07546d87b6}"/></connection><connection uuid="{3ae8a1b9-7578-466f-8590-b26b42abe077}"><source node="{aa4987ed-693a-428d-99f4-0b15eb9144d4}" port="{c93538eb-df09-11e2-ae96-3c07546d87b6}"/><destination node="{c6f6b972-9b35-4f78-8504-d57b6c9d3670}" port="{df3530cb-a138-4fb4-8499-1fb9fd76f3a7}"/></connection><connection uuid="{3e3b5b09-d9a4-4f44-a745-979722efa320}"><source node="{bbbcf544-0adf-48ce-ae5d-5a39753c653c}" port="{c935fa7a-df09-11e2-ab57-3c07546d87b6}"/><destination node="{1b45b9cc-e0bf-407c-8b7c-a3e8131bc14a}" port="{cdb8125b-406a-4593-bcf6-20bcf36db016}"/></connection><connection uuid="{4d8b3458-2ee7-47e1-aa53-5842d9a30a11}"><source node="{1b45b9cc-e0bf-407c-8b7c-a3e8131bc14a}" port="{3473620d-25b3-416f-8991-a465c101b714}"/><destination node="{22566c5a-605d-4217-bcfc-cd92375ab9c8}" port="{c935c226-df09-11e2-9b67-3c07546d87b6}"/></connection><connection uuid="{4dd15f6e-0cb5-49a5-ad7b-f88f5e76d498}"><source node="{b41fe192-ec46-4889-b9ff-d1482ff5de69}" port="{c93864d7-df09-11e2-b78d-3c07546d87b6}"/><destination node="{308b95b7-b1bd-4e23-8829-131ddf7ffacc}" port="{aabed58b-eb67-46ed-9259-53494539cc24}"/></connection><connection uuid="{5b1e840c-be58-4739-a1b5-2a2af058f548}"><source node="{f7c8d3f3-a310-4b09-bfd2-f93582d809aa}" port="{d99c2ed5-110b-48e9-bf59-334007d0830e}"/><destination node="{061a69d0-f8dd-45da-92b5-40725392f80b}" port="{c939b23d-df09-11e2-a778-3c07546d87b6}"/></connection><connection uuid="{63338ddd-5d5f-492a-b6c2-b6f207e31eec}"><source node="{c6f6b972-9b35-4f78-8504-d57b6c9d3670}" port="{1508f814-ce87-49d6-b52b-91002622bfe6}"/><destination node="{a97dfd54-d90e-4dd4-afb8-e025075876fc}" port="{c937ab54-df09-11e2-a4c9-3c07546d87b6}"/></connection><connection uuid="{74475a12-7871-4fe8-8859-09ae3fd73670}"><source node="{eb182387-889f-4435-b6d3-6987c896f444}" port="{c938f8b8-df09-11e2-9ccb-3c07546d87b6}"/><destination node="{c43c5342-ea7d-4609-a00b-d7da9593244e}" port="{fced0d3d-bcd8-4597-ad72-9b27bc1862eb}"/></connection><connection uuid="{7ab56579-1820-46ea-aea5-04e02036c3ba}"><source node="{db8ece53-b0b4-4ee0-af08-cd018d7f5fe2}" port="{c938ec61-df09-11e2-bf42-3c07546d87b6}"/><destination node="{d62ef980-149c-4461-a335-33f17579334a}" port="{7bf3f456-ae91-412e-aff1-0d189a5a2b7e}"/></connection><connection uuid="{9b7c38f3-b801-4032-93a5-6177616eb27e}"><source node="{2efb7790-3a2a-4663-adea-3b07292df328}" port="{129ecb54-eb9a-4646-8ebb-b3728f013898}"/><destination node="{035f658d-e04c-4f0c-abf9-ea53e6f4e62f}" port="{c937f45e-df09-11e2-9753-3c07546d87b6}"/></connection><connection uuid="{9fdc7227-4b60-47c2-8be5-ae77f5e7f8da}"><source node="{108c759e-902d-4f56-8441-e77806f9421a}" port="{c9380ade-df09-11e2-bde7-3c07546d87b6}"/><destination node="{2efb7790-3a2a-4663-adea-3b07292df328}" port="{ad189fc5-0b3b-47c3-9937-071bd1c52e73}"/></connection><connection uuid="{c615430b-bede-404f-a53b-29543c5aca23}"><source node="{11275bd1-7b2b-4f43-8bfa-fe040a1de516}" port="{c939905c-df09-11e2-9631-3c07546d87b6}"/><destination node="{de9a3987-a05a-44c4-8d0f-70bf94eae945}" port="{0e6693f1-28cc-41ff-b189-c3587d8df239}"/></connection><connection uuid="{c93b71ee-df09-11e2-9706-3c07546d87b6}"><source node="{2eaabbe1-448a-4420-9976-01280e06d23d}" port="{c9388273-df09-11e2-8428-3c07546d87b6}"/><destination node="{035f658d-e04c-4f0c-abf9-ea53e6f4e62f}" port="{c937f36e-df09-11e2-bcde-3c07546d87b6}"/></connection><connection uuid="{c93b7297-df09-11e2-a90a-3c07546d87b6}"><source node="{84d62beb-bbd4-42c2-b146-06cd6c6b0ca8}" port="{c936bd0c-df09-11e2-b432-3c07546d87b6}"/><destination node="{2acb4361-dbb5-4037-8cfe-390ba32d13f6}" port="{c9397eca-df09-11e2-b3ef-3c07546d87b6}"/></connection><connection uuid="{c93b734c-df09-11e2-9454-3c07546d87b6}"><source node="{c628bfd9-d3ba-4ae3-8358-59657b971340}" port="{c9371107-df09-11e2-9f1e-3c07546d87b6}"/><destination node="{e3570ad0-48bd-4af7-9105-ccd037162852}" port="{c93801f8-df09-11e2-9ac1-3c07546d87b6}"/></connection><connection uuid="{c93b73f5-df09-11e2-ac8e-3c07546d87b6}"><source node="{2349b2ac-3ab6-47d5-8436-b4c325d319e0}" port="{c937e614-df09-11e2-b1f5-3c07546d87b6}"/><destination node="{8a1945bf-93b4-491f-a1e4-afc51e7f4cf0}" port="{c9358b94-df09-11e2-9293-3c07546d87b6}"/></connection><connection uuid="{c93b749e-df09-11e2-8441-3c07546d87b6}"><source node="{fd63cfa0-110c-4451-a30b-d1e8effdbbbb}" port="{c93978ee-df09-11e2-af3d-3c07546d87b6}"/><destination node="{5e030eb0-02a7-4ccb-acc5-1ea2ab39dafe}" port="{c934e645-df09-11e2-adc2-3c07546d87b6}"/></connection><connection uuid="{c93b754a-df09-11e2-b016-3c07546d87b6}"><source node="{f5e5bf18-a1c9-4a64-a910-b896afe1e819}" port="{c93366d1-df09-11e2-b74e-3c07546d87b6}"/><destination node="{a97dfd54-d90e-4dd4-afb8-e025075876fc}" port="{c937a987-df09-11e2-a7f4-3c07546d87b6}"/></connection><connection uuid="{c93b75eb-df09-11e2-9551-3c07546d87b6}"><source node="{0b789416-a2a8-43c3-a686-f354b923f5ae}" port="{c935994a-df09-11e2-be91-3c07546d87b6}"/><destination node="{e3a87d69-0160-4448-9346-1530acfd372b}" port="{c935422e-df09-11e2-b47a-3c07546d87b6}"/></connection><connection uuid="{c93b7694-df09-11e2-ba05-3c07546d87b6}"><source node="{26149d6b-edda-4848-8a3e-7ec1c647d2df}" port="{c935d6d9-df09-11e2-adb3-3c07546d87b6}"/><destination node="{22566c5a-605d-4217-bcfc-cd92375ab9c8}" port="{c935c080-df09-11e2-8999-3c07546d87b6}"/></connection><connection uuid="{c93b773d-df09-11e2-a78b-3c07546d87b6}"><source node="{03089b49-e76b-4608-8ad6-83ac0add4e5d}" port="{c938d626-df09-11e2-8b2b-3c07546d87b6}"/><destination node="{b139edc1-de90-41c8-9a2f-35b899beddca}" port="{c93b2638-df09-11e2-ab04-3c07546d87b6}"/></connection><connection uuid="{c93b77dc-df09-11e2-92d9-3c07546d87b6}"><source node="{19b1e93d-caf3-412a-b92a-0bccaafce37a}" port="{c93adac2-df09-11e2-9ef2-3c07546d87b6}"/><destination node="{061a69d0-f8dd-45da-92b5-40725392f80b}" port="{c939b0ca-df09-11e2-a380-3c07546d87b6}"/></connection><connection uuid="{c9e4a967-5cd2-4ce1-96f3-04f2444a8b24}"><source node="{c43c5342-ea7d-4609-a00b-d7da9593244e}" port="{8e7d349a-3210-407a-b8d3-65d68a8d3b62}"/><destination node="{5e030eb0-02a7-4ccb-acc5-1ea2ab39dafe}" port="{c934e7c0-df09-11e2-a6ef-3c07546d87b6}"/></connection><connection uuid="{ca913092-6be8-4bee-ae10-a4a7c781175a}"><source node="{308b95b7-b1bd-4e23-8829-131ddf7ffacc}" port="{22dabe43-1f58-4159-b289-02861ea13c49}"/><destination node="{b139edc1-de90-41c8-9a2f-35b899beddca}" port="{c93b2717-df09-11e2-a704-3c07546d87b6}"/></connection><connection uuid="{d07c0d38-70bb-432c-ba9e-434fd9f08f53}"><source node="{de9a3987-a05a-44c4-8d0f-70bf94eae945}" port="{a41016df-e462-44e5-a818-d5221c453daa}"/><destination node="{e3570ad0-48bd-4af7-9105-ccd037162852}" port="{c93802de-df09-11e2-9404-3c07546d87b6}"/></connection><connection uuid="{d954aa63-4e60-4f9c-b172-b63fa98b284a}"><source node="{1a50059a-3d21-4e56-ab0c-c99d4411a57f}" port="{c93a6b8c-df09-11e2-a4d2-3c07546d87b6}"/><destination node="{895dd962-4334-4602-aab1-f6afad775f75}" port="{71e580f7-c929-4659-bb77-5a4079f77a28}"/></connection><connection uuid="{fa42da3c-b687-4712-9dd6-e24f76be55f3}"><source node="{895dd962-4334-4602-aab1-f6afad775f75}" port="{ebd2259c-5fd7-4d26-9798-5d0ccaeda8e6}"/><destination node="{2acb4361-dbb5-4037-8cfe-390ba32d13f6}" port="{c9397fc5-df09-11e2-9037-3c07546d87b6}"/></connection></flow></flow>