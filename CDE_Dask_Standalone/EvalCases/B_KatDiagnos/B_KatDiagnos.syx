<?xml version='1.0' encoding='ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" id="" is_locked="False" uuid="{f699185e-9f72-4c4b-9f61-e5f09fec2e2b}" width="50.0" x="2575.0" y="1625.0">
  <label>B_KatDiagnos.syx</label>
  <description></description>
  <author>Unknown</author>
  <copyright></copyright>
  <version>1.0</version>
  <source>EvalCases/B_KatDiagnos/B_KatDiagnos.syx</source>
  <ports>
    <input height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="[adaf]" uuid="{e1f67174-268d-4ecd-a699-551675938556}" width="50.0" x="1150.0" y="1925.0">
      <label>Port</label>
      <description>Port</description>
    </input>
    <output height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="text" type="[datasource]" uuid="{03489665-1c6b-4cb9-b956-406cd331c90b}" width="50.0" x="2575.0" y="1925.0">
      <label>Port</label>
      <description>Port</description>
    </output>
  </ports>
  <aggregation type="json"><![CDATA[null]]></aggregation>
  <parameters type="json"><![CDATA[{"environment": {}, "type": "json", "data": {"environment": {}, "data": {"environment": {}}, "type": "json"}}]]></parameters>
  <flow cls="Flow" height="50.0" id="" is_locked="False" uuid="{01aea40e-3f31-45bf-8045-00c4b3580dcf}" width="50.0" x="1422.0" y="1818.0">
    <label>Required signals</label>
    <description></description>
    <author>Unknown</author>
    <copyright></copyright>
    <version>1.0</version>
    <source></source>
    <ports>
      <output height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{6be43155-f8f8-42d7-ba54-ed1a06c8e238}" width="50.0" x="1725.0" y="1650.0">
        <label>Port</label>
        <description>Port</description>
      </output>
    </ports>
    <aggregation type="json"><![CDATA[null]]></aggregation>
    <parameters type="json"><![CDATA[{"environment": {}}]]></parameters>
    <node height="50.0" id="org.sysess.sympathy.data.table.importtable" uuid="{92afacee-e7db-41a5-883c-c6b7c553d461}" width="50.0" x="1600.0" y="1650.0">
      <label>Table</label>
      <description>Data source as a table</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"custom_importer_data": {"type": "group", "HDF5": {"path_list": {"description": "The paths selected to import data from.", "passthrough": false, "list": [], "value": [], "label": "Selected paths", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "type": "group"}, "Auto": {"type": "group", "order": 0, "label": ""}, "label": "", "SQL": {"join_columns": {"description": "", "passthrough": false, "list": [], "value": [0], "label": "", "editor": null, "value_names": [], "type": "list", "order": 0}, "table_names": {"description": "", "passthrough": false, "list": [], "value": [0], "label": "", "editor": null, "value_names": [], "type": "list", "order": 0}, "custom_query": {"description": "", "value": false, "label": "", "editor": null, "type": "boolean", "order": 0}, "where_comparison_combo": {"description": "", "passthrough": false, "list": ["=", "<", ">", ">=", "<=", "!=", " LIKE ", " GLOB ", " BETWEEN "], "value": [0], "label": "", "editor": null, "value_names": [], "type": "list", "order": 0}, "type": "group", "where_column_combo": {"description": "", "passthrough": false, "list": [], "value": [0], "label": "", "editor": null, "value_names": [], "type": "list", "order": 0}, "odbc": {"description": "ODBC method to use.", "passthrough": false, "list": ["default", "pyodbc", "ceODBC"], "value": [0], "label": "ODBC method", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "lineedit_query": {"description": "", "value": false, "label": "", "editor": null, "type": "boolean", "order": 0}, "join_tables": {"description": "", "passthrough": false, "list": [], "value": [0], "label": "", "editor": null, "value_names": [], "type": "list", "order": 0}, "preview_query": {"description": "", "value": "", "label": "", "editor": null, "type": "string", "order": 0}, "table_columns": {"description": "", "passthrough": false, "list": [], "value": [0], "label": "", "editor": null, "value_names": [], "type": "list", "order": 0}, "table_query": {"description": "", "value": true, "label": "", "editor": null, "type": "boolean", "order": 0}, "where_add_comparison": {"description": "", "value": "", "label": "", "editor": null, "type": "string", "order": 0}, "where_condition": {"description": "", "value": "", "label": "", "editor": null, "type": "string", "order": 0}, "query_str": {"description": "", "value": "", "label": "", "editor": null, "type": "string", "order": 0}, "where_condition_list": {"description": "", "passthrough": false, "list": [], "value": [0], "label": "", "editor": null, "value_names": [], "type": "list", "order": 0}, "join_column_selection": {"description": "", "passthrough": false, "list": [], "value": [0], "label": "", "editor": null, "value_names": [], "type": "list", "order": 0}}, "Table": {"type": "group"}, "CSV": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "transposed": {"description": "Transpose the data.", "value": false, "label": "Transpose input data", "editor": null, "type": "boolean", "order": 0}, "data_start_row": {"description": "The first row where data is stored.", "value": 2, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": 0, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "source_coding": {"description": "", "value": "utf_8", "label": "", "editor": null, "type": "string", "order": 0}, "other_delimiter": {"description": "Enter other delimiter than the standard ones.", "value": " ", "label": "", "editor": null, "type": "string", "order": 0}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "delimiter": {"description": "", "value": ";", "label": "", "editor": null, "type": "string", "order": 0}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "double_quotations": {"description": "Remove double quotations in importation.", "value": false, "label": "Remove double quotations", "editor": null, "type": "boolean", "order": 0}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"description": "File has headers.", "value": false, "label": "", "editor": null, "type": "boolean", "order": 0}, "units": {"description": "File has headers.", "value": false, "label": "", "editor": null, "type": "boolean", "order": 0}, "end_of_file": {"description": "Select all rows to the end of the file.", "value": true, "label": "", "editor": null, "type": "boolean", "order": 0}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group", "headers": {"description": "File has headers.", "value": true, "label": "", "editor": null, "type": "boolean", "order": 0}}, "XLS": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "transposed": {"description": "Transpose the data.", "value": false, "label": "Transpose input", "editor": null, "type": "boolean", "order": 0}, "data_start_row": {"description": "The first row where data is stored.", "value": 2, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": 0, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "worksheet_name": {"description": "The worksheet to import from.", "passthrough": false, "list": [], "value": [0], "label": "Select worksheet", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "headers": {"description": "File has headers.", "value": true, "label": "", "editor": null, "type": "boolean", "order": 0}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"description": "File has headers.", "value": false, "label": "", "editor": null, "type": "boolean", "order": 0}, "units": {"description": "File has headers.", "value": false, "label": "", "editor": null, "type": "boolean", "order": 0}, "end_of_file": {"description": "Select all rows to the end of the file.", "value": true, "label": "", "editor": null, "type": "boolean", "order": 0}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group"}, "order": 2}, "active_importer": {"description": "", "value": "CSV", "label": "", "editor": null, "type": "string", "order": 0}, "fail_strategy": {"description": "", "passthrough": false, "list": ["Exception", "Create Empty Entry"], "value": [1], "label": "Action on import failure", "editor": {"type": "combobox"}, "value_names": ["Create Empty Entry"], "type": "list", "order": 1}, "type": "group"}]]></parameters>
      <ports>
        <input key="port1" requiresdata="True" scheme="text" type="datasource" uuid="{a8f0ed5b-9f33-4a1f-8ef0-c459cd9f5973}">
          <label>DataSource</label>
          <description>DataSource</description>
        </input>
        <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{fba200f9-7824-4cb4-84b9-92945d19886a}">
          <label>TableOutput</label>
          <description>TableOutput</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.datasources.filedatasource" uuid="{dc161f92-0fa6-42ac-b8bf-42705a834b84}" width="50.0" x="1450.0" y="1650.0">
      <label>Datasource</label>
      <description>Select a data source.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"db_password": {"description": "A valid password for the selected user.", "value": "", "label": "Password", "editor": null, "type": "string", "order": 6}, "filename": {"description": "A filename including path if needed", "value": "$(SY_FLOW_DIR)/Aliases.csv", "label": "Filename", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "type": "string", "order": 1}, "db_driver": {"description": "Database driver to use.", "passthrough": false, "list": ["SQL Server"], "value": [0], "label": "Database driver", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 2}, "db_connection_string": {"description": "A connection string that will override other settings.", "value": "", "label": "Connection string", "editor": null, "type": "string", "order": 7}, "db_user": {"description": "A valid database user.", "value": "", "label": "User", "editor": null, "type": "string", "order": 5}, "db_databasename": {"description": "The name of the database.", "value": "", "label": "Database name", "editor": null, "type": "string", "order": 4}, "db_servername": {"description": "A valid name to a database server.", "value": "", "label": "Server name", "editor": null, "type": "string", "order": 3}, "use_relative_path": {"description": "Use the relative path to the file.", "value": true, "label": "Use relative path", "editor": null, "type": "boolean", "order": 0}, "type": "group", "datasource_type": {"description": "Type of datasource.", "passthrough": false, "list": ["File", "Database"], "value": [0], "label": "Datasource type", "editor": null, "value_names": [], "type": "list", "order": 8}}]]></parameters>
      <ports>
        <output key="port1" requiresdata="False" scheme="text" type="datasource" uuid="{0fe3b60f-dda9-4182-9973-2d3d7a490a2b}">
          <label>DataSource</label>
          <description>DataSource</description>
        </output>
      </ports>
    </node>
    <connection uuid="{5e60d804-0502-45c8-80a3-277a63080f34}">
      <source node="{92afacee-e7db-41a5-883c-c6b7c553d461}" port="{fba200f9-7824-4cb4-84b9-92945d19886a}"/>
      <destination node="{01aea40e-3f31-45bf-8045-00c4b3580dcf}" port="{6be43155-f8f8-42d7-ba54-ed1a06c8e238}"/>
    </connection>
    <connection uuid="{6af1577e-4ca5-4387-bcd5-eb7f95e3124e}">
      <source node="{dc161f92-0fa6-42ac-b8bf-42705a834b84}" port="{0fe3b60f-dda9-4182-9973-2d3d7a490a2b}"/>
      <destination node="{92afacee-e7db-41a5-883c-c6b7c553d461}" port="{a8f0ed5b-9f33-4a1f-8ef0-c459cd9f5973}"/>
    </connection>
  </flow>
  <flow cls="Flow" height="50.0" id="" is_locked="False" uuid="{2aa3365f-80d5-4d40-9c96-a492cba0927a}" width="50.0" x="1975.0" y="1925.0">
    <label>Add eval name/description</label>
    <description></description>
    <author>Unknown</author>
    <copyright></copyright>
    <version>1.0</version>
    <source></source>
    <ports>
      <input height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="adaf" uuid="{6017808b-74a7-4ff9-ae4b-b5962b971f5f}" width="50.0" x="1375.0" y="1775.0">
        <label>Port</label>
        <description>Port</description>
      </input>
      <output height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="adaf" uuid="{5d838de1-44d7-494b-b9e0-299898cc00d4}" width="50.0" x="2375.0" y="1775.0">
        <label>Port</label>
        <description>Port</description>
      </output>
    </ports>
    <aggregation type="json"><![CDATA[{"uuid_selected": ["{98e06262-8c36-47c6-bad7-7936af13732f}"], "group_structure": {"type": "group", "uuid": null, "children": [{"type": "node", "uuid": "{98e06262-8c36-47c6-bad7-7936af13732f}"}]}}]]></aggregation>
    <parameters type="json"><![CDATA[{"environment": {}}]]></parameters>
    <node height="50.0" id="org.sysess.sympathy.data.table.hjointable" uuid="{18feb3af-2451-4f0b-a225-8a476051f222}" width="50.0" x="2150.0" y="1700.0">
      <label>HJoin Table</label>
      <description>Horizontal join of two Tables</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
      <ports>
        <input key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{62b99899-607a-40f4-922b-b747589e340d}">
          <label>Table1</label>
          <description>Table1</description>
        </input>
        <input key="port2" requiresdata="False" scheme="hdf5" type="table" uuid="{9d6d2849-7cd6-47a5-a533-311cae3d389c}">
          <label>Table2</label>
          <description>Table2</description>
        </input>
        <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{47655a76-e086-4204-a2e6-33926c0a7fbd}">
          <label>TableOutput</label>
          <description>TableOutput</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.adaf.adaf2table" uuid="{35df4fd8-9bc9-41b0-9d47-868e69be9634}" width="50.0" x="1650.0" y="1700.0">
      <label>ADAF to Table</label>
      <description>Export of data from an ADAF to a Table.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"type": "group", "export_group": {"description": "Group to export.", "passthrough": false, "list": ["Meta", "Result", "Time series"], "value": [0], "label": "Export group", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "tb": {"description": "", "passthrough": false, "list": [], "value": [], "label": "Time basis raster", "editor": {"filter": true, "type": "listview"}, "value_names": [], "type": "list", "order": 1}, "tb_col_name": {"description": "What column name should the time basis have in the resulting table? Leave blank to use the raster's name.", "value": "", "label": "Time basis column name", "editor": null, "type": "string", "order": 2}}]]></parameters>
      <ports>
        <input key="port1" requiresdata="False" scheme="hdf5" type="adaf" uuid="{3bfb2734-d117-4a6e-8ddc-5c92eee4f689}">
          <label>ADAF</label>
          <description>ADAF</description>
        </input>
        <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{97421a82-37c9-4d7b-a923-04346a4fb32d}">
          <label>Table</label>
          <description>Table</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="com.vcc.CDE.addevalpurpose" uuid="{98e06262-8c36-47c6-bad7-7936af13732f}" width="50.0" x="1500.0" y="1775.0">
      <label>Add evaluation purpose</label>
      <description></description>
      <author>Magnus Sand&#233;n</author>
      <copyright>(c) 2015 Volvo Cars Coorporation</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"eval_short_name": {"description": "This will be used in the output filename, so keep it short and descriptive.", "value": "Dist fit", "label": "Plot name:", "editor": null, "type": "string", "order": 0}, "type": "group", "eval_description": {"description": "This description will show up in the plot metadata area.", "value": "", "label": "Plot description:", "editor": null, "type": "string", "order": 1}}]]></parameters>
      <ports>
        <input key="in" requiresdata="False" scheme="hdf5" type="adaf" uuid="{bafed361-2c7a-40da-aeec-1c92ef767e82}">
          <label>None</label>
          <description>None</description>
        </input>
        <output key="out" requiresdata="False" scheme="hdf5" type="adaf" uuid="{13641601-7189-426d-9218-591e93c4a7a2}">
          <label>None</label>
          <description>None</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.table.updateadafwithtable" uuid="{9ef0f311-3fe6-4744-83e8-d8df787f68a4}" width="50.0" x="2275.0" y="1775.0">
      <label>Update ADAF with Table</label>
      <description>Export content of Table to specified container in ADAF.</description>
      <author>Erik der Hagopian &lt;erik.hagopian@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"export_to_group": {"description": "Group to put table data.", "passthrough": false, "list": ["Meta", "Result", "Time series"], "value": [0], "label": "Export to group", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "type": "group", "tb": {"description": "", "passthrough": false, "list": [], "value": [], "label": "Time basis column", "editor": {"filter": true, "type": "listview"}, "value_names": [], "type": "list", "order": 3}, "system": {"description": "", "value": "system_139", "label": "Time series system name", "editor": null, "type": "string", "order": 1}, "raster": {"description": "", "value": "None", "label": "Time series raster name", "editor": null, "type": "string", "order": 2}}]]></parameters>
      <ports>
        <input key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{07ae2e4f-9810-4157-b070-c241b7c8b7ee}">
          <label>Table</label>
          <description>Table</description>
        </input>
        <input key="port2" requiresdata="False" scheme="hdf5" type="adaf" uuid="{a1690902-b08e-4e22-8030-732e61fbb5cd}">
          <label>ADAF</label>
          <description>ADAF</description>
        </input>
        <output key="port1" requiresdata="False" scheme="hdf5" type="adaf" uuid="{1fe637c1-64eb-4d6d-a585-7dfd4b511a8e}">
          <label>ADAF</label>
          <description>ADAF</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.table.calculator" uuid="{b0a896de-8390-48bc-a74d-e6d6fd15f4a2}" width="50.0" x="1900.0" y="1625.0">
      <label>Calculator</label>
      <description>Performs user-defined python calculations</description>
      <author>Greger Cronquist &lt;greger.cronquist@sysess.org&gt;, Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;, Sara Gustafzelius &lt;sara.gustafzelius@combine.se&gt;</author>
      <copyright>(c) 2012 Combine AB</copyright>
      <version>2.0</version>
      <parameters type="json"><![CDATA[{"same_length_res": {"description": "Gather all the results generated from an incoming Table into a common output table. This requires that the results all have the same length. An error will be given if the lengths of the outgoing results differ.", "value": true, "label": "Put results in common outputs.", "editor": null, "type": "boolean", "order": 1}, "column_names": {"description": "", "passthrough": false, "list": [], "value": [0], "label": "", "editor": null, "value_names": ["DATASET_calculation"], "type": "list"}, "type": "group", "calc_list": {"description": "List of calculations.", "passthrough": false, "list": ["${plot_output_path} = np.array([os.path.join(op, u\"_\".join((wfn, dsn, esn)) + \".png\") for op, wfn, dsn, esn in zip(\n    ${DATASET_Output_Path}, ${DATASET_Workflow_name}, ${DATASET_Name}, ${DATASET_Eval_short_name})])"], "value": [0], "label": "List of calculations", "editor": null, "value_names": [], "type": "list", "order": 0}}]]></parameters>
      <ports>
        <input key="port0" requiresdata="False" scheme="hdf5" type="[table]" uuid="{3371b452-9662-40de-b624-55d14d1bf8d3}">
          <label>Table</label>
          <description>Table</description>
        </input>
        <output key="port1" requiresdata="False" scheme="hdf5" type="[table]" uuid="{8764ad3d-1640-43d2-8992-3c4610eca594}">
          <label>OutTable</label>
          <description>OutTable</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.list.itemtolist" uuid="{eaf0b4df-f349-4ca0-9c1e-2b42774cfac1}" width="50.0" x="1775.0" y="1625.0">
      <label>Item to List</label>
      <description></description>
      <author>Erik der Hagopian &lt;erik.hagopian@sysess.org&gt;</author>
      <copyright>(C) 2015 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
      <ports>
        <input key="item" requiresdata="False" scheme="hdf5" type="table" uuid="{e73c01c8-7ab7-455f-aca7-58e9acdfbe4b}">
          <label>Item</label>
          <description>Item</description>
        </input>
        <output key="list" requiresdata="False" scheme="hdf5" type="[table]" uuid="{6a6a4919-8945-4313-97b7-6c6dc59d536f}">
          <label>List</label>
          <description>List</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.list.getitemlist" uuid="{fe99c9e3-87d7-4013-8465-0c0f8786c32a}" width="50.0" x="2025.0" y="1625.0">
      <label>Get Item List</label>
      <description></description>
      <author>Erik der Hagopian &lt;erik.hagopian@sysess.org&gt;</author>
      <copyright>(C) 2015 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"index": {"description": "Choose item index in list.", "passthrough": false, "list": [], "value": [0], "label": "Index", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "type": "group"}]]></parameters>
      <ports>
        <input key="list" requiresdata="False" scheme="hdf5" type="[table]" uuid="{fc8ebda2-5025-4e23-bf8b-8d6a3bec486c}">
          <label>List</label>
          <description>List</description>
        </input>
        <output key="item" requiresdata="False" scheme="hdf5" type="table" uuid="{0b3cb44b-67ca-4a0b-90fa-f8ee89d0f73c}">
          <label>Item</label>
          <description>Item</description>
        </output>
      </ports>
    </node>
    <connection uuid="{0c6615a7-f1f9-4a35-aeb9-7b49609716f4}">
      <source node="{35df4fd8-9bc9-41b0-9d47-868e69be9634}" port="{97421a82-37c9-4d7b-a923-04346a4fb32d}"/>
      <destination node="{18feb3af-2451-4f0b-a225-8a476051f222}" port="{9d6d2849-7cd6-47a5-a533-311cae3d389c}"/>
    </connection>
    <connection uuid="{158e22bd-2636-4d33-9130-7cff0ee4cd22}">
      <source node="{9ef0f311-3fe6-4744-83e8-d8df787f68a4}" port="{1fe637c1-64eb-4d6d-a585-7dfd4b511a8e}"/>
      <destination node="{2aa3365f-80d5-4d40-9c96-a492cba0927a}" port="{5d838de1-44d7-494b-b9e0-299898cc00d4}"/>
    </connection>
    <connection uuid="{15c479b0-3521-4159-81b6-c9dcf47fc554}">
      <source node="{2aa3365f-80d5-4d40-9c96-a492cba0927a}" port="{6017808b-74a7-4ff9-ae4b-b5962b971f5f}"/>
      <destination node="{98e06262-8c36-47c6-bad7-7936af13732f}" port="{bafed361-2c7a-40da-aeec-1c92ef767e82}"/>
    </connection>
    <connection uuid="{16bf603a-3a31-4c02-9c67-411546e3d3f2}">
      <source node="{98e06262-8c36-47c6-bad7-7936af13732f}" port="{13641601-7189-426d-9218-591e93c4a7a2}"/>
      <destination node="{9ef0f311-3fe6-4744-83e8-d8df787f68a4}" port="{a1690902-b08e-4e22-8030-732e61fbb5cd}"/>
    </connection>
    <connection uuid="{2124e53c-20f4-4f5b-b8f6-1f0f34584645}">
      <source node="{b0a896de-8390-48bc-a74d-e6d6fd15f4a2}" port="{8764ad3d-1640-43d2-8992-3c4610eca594}"/>
      <destination node="{fe99c9e3-87d7-4013-8465-0c0f8786c32a}" port="{fc8ebda2-5025-4e23-bf8b-8d6a3bec486c}"/>
    </connection>
    <connection uuid="{3c347e4a-8dab-4c39-8e32-2c71dc9c67c4}">
      <source node="{98e06262-8c36-47c6-bad7-7936af13732f}" port="{13641601-7189-426d-9218-591e93c4a7a2}"/>
      <destination node="{35df4fd8-9bc9-41b0-9d47-868e69be9634}" port="{3bfb2734-d117-4a6e-8ddc-5c92eee4f689}"/>
    </connection>
    <connection uuid="{5d109bc0-c153-49fc-824e-f5c3e7b60b0c}">
      <source node="{eaf0b4df-f349-4ca0-9c1e-2b42774cfac1}" port="{6a6a4919-8945-4313-97b7-6c6dc59d536f}"/>
      <destination node="{b0a896de-8390-48bc-a74d-e6d6fd15f4a2}" port="{3371b452-9662-40de-b624-55d14d1bf8d3}"/>
    </connection>
    <connection uuid="{81b00bf8-2e18-4a95-b44b-46f92db40b0c}">
      <source node="{18feb3af-2451-4f0b-a225-8a476051f222}" port="{47655a76-e086-4204-a2e6-33926c0a7fbd}"/>
      <destination node="{9ef0f311-3fe6-4744-83e8-d8df787f68a4}" port="{07ae2e4f-9810-4157-b070-c241b7c8b7ee}"/>
    </connection>
    <connection uuid="{96c12253-1d1c-4344-a73c-6092b4708113}">
      <source node="{35df4fd8-9bc9-41b0-9d47-868e69be9634}" port="{97421a82-37c9-4d7b-a923-04346a4fb32d}"/>
      <destination node="{eaf0b4df-f349-4ca0-9c1e-2b42774cfac1}" port="{e73c01c8-7ab7-455f-aca7-58e9acdfbe4b}"/>
    </connection>
    <connection uuid="{b52c922c-ee98-4d39-a894-027901a972b9}">
      <source node="{fe99c9e3-87d7-4013-8465-0c0f8786c32a}" port="{0b3cb44b-67ca-4a0b-90fa-f8ee89d0f73c}"/>
      <destination node="{18feb3af-2451-4f0b-a225-8a476051f222}" port="{62b99899-607a-40f4-922b-b747589e340d}"/>
    </connection>
  </flow>
  <flow cls="Flow" height="50.0" id="" is_locked="False" source_uuid="{fce2e68f-b176-4407-81df-8f2c08e3173d}" uuid="{468cdf9e-b3ed-42d9-a5e3-af2ec2d1fb01}" width="50.0" x="1575.0" y="1925.0" href="../../subflows/select_signals.syx">
    <label>Select signals</label>
    <description></description>
    <author></author>
    <copyright></copyright>
    <version></version>
    <source>../../subflows/select_signals.syx</source>
    <ports>
      <input height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" source_uuid="{f224aec8-85b1-42d8-ad94-b5a4f47a4aed}" type="table" uuid="{f224aec8-85b1-42d8-ad94-b5a4f47a4aed}" width="50.0" x="1700.0" y="1675.0">
        <label>Port</label>
        <description>Port</description>
      </input>
      <input height="50.0" index="1" key="Port" optional="False" requiresdata="False" scheme="hdf5" source_uuid="{b9a9832b-3648-4d86-870f-db4c0cbb1fab}" type="[adaf]" uuid="{d2fee64e-f86c-473d-b1cb-e5fda0dfb6b8}" width="50.0" x="1700.0" y="2000.0">
        <label>Port</label>
        <description>Port</description>
      </input>
      <output height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" source_uuid="{bf9ad577-a834-412b-903f-8fd02331d0ef}" type="[adaf]" uuid="{c43d2009-7c02-4447-9704-406fbd11266a}" width="50.0" x="2775.0" y="1975.0">
        <label>Port</label>
        <description>Port</description>
      </output>
    </ports>
  </flow>
  <flow cls="Flow" height="50.0" id="" is_locked="False" uuid="{58919083-db7c-4367-bb78-c92bc1214a16}" width="50.0" x="2450.0" y="1925.0">
    <label>Export report</label>
    <description></description>
    <author>Unknown</author>
    <copyright></copyright>
    <version>1.0</version>
    <source></source>
    <ports>
      <input height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="report" uuid="{1353b441-778a-4db7-8226-5371cf106bfc}" width="50.0" x="2325.0" y="1600.0">
        <label>Port</label>
        <description>Port</description>
      </input>
      <input height="50.0" index="1" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="[adaf]" uuid="{ebb4b452-0c9c-4b59-ade9-fb11f05c1a49}" width="50.0" x="1600.0" y="1800.0">
        <label>Port</label>
        <description>Port</description>
      </input>
      <output height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="text" type="[datasource]" uuid="{a0c6f4f1-f5d0-4108-94af-2e6890107200}" width="50.0" x="2600.0" y="1800.0">
        <label>Port</label>
        <description>Port</description>
      </output>
    </ports>
    <aggregation type="json"><![CDATA[null]]></aggregation>
    <parameters type="json"><![CDATA[{"environment": {}}]]></parameters>
    <node height="50.0" id="org.sysess.sympathy.data.table.tabletodsrcs" uuid="{08c1bff7-c722-41a8-8f7f-d276a4a7a4a3}" width="50.0" x="2325.0" y="1800.0">
      <label>Table to Datasources</label>
      <description>Convert a table with file paths into a list of data sources pointing to those files.</description>
      <author>Greger Cronquist &lt;greger.cronquist@sysess.org&gt;</author>
      <copyright>(c) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"files": {"description": "Column containing the filenames", "passthrough": false, "list": ["plot_output_path"], "value": [0], "label": "File names", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "type": "group"}]]></parameters>
      <ports>
        <input key="" requiresdata="False" scheme="hdf5" type="table" uuid="{ec1a6a77-3853-4c39-ab78-0bb3a822625a}">
          <label>Table containing a column of filepaths.</label>
          <description>Table containing a column of filepaths.</description>
        </input>
        <output key="" requiresdata="False" scheme="text" type="[datasource]" uuid="{cd04ff71-bede-4ee9-a7f2-d692debe1af8}">
          <label>Datasources</label>
          <description>Datasources</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.slice.slicedatatable" uuid="{1398ddd9-eefe-4aa2-b1b0-a4129f39545d}" width="50.0" x="2175.0" y="1800.0">
      <label>Slice data Table</label>
      <description></description>
      <author>Erik der Hagopian &lt;erik.hagopian@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"type": "group", "slice": {"description": "", "value": "[:1]", "label": "", "editor": null, "type": "string", "order": 0}, "limit": {"description": "", "value": 100, "label": "", "editor": null, "type": "integer", "order": 1}}]]></parameters>
      <ports>
        <input key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{fe61eeca-ae10-4283-a504-6743f70c3874}">
          <label>InTable</label>
          <description>InTable</description>
        </input>
        <output key="port2" requiresdata="False" scheme="hdf5" type="table" uuid="{d4e203bf-29e4-4738-b5d9-4d2e0a292cc5}">
          <label>OutTable</label>
          <description>OutTable</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.table.selecttablescolumns" uuid="{4c585036-639b-4353-aaa8-c83d7364227f}" width="50.0" x="1900.0" y="1800.0">
      <label>Select columns in Tables</label>
      <description>Select columns in Tables by using the configuration GUI.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(c) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"complement": {"description": "When enabled, the selected columns will be removed. When disabled, the non-selected columns will be removed.", "value": false, "label": "Remove selected columns", "editor": null, "type": "boolean", "order": 0}, "type": "group", "columns": {"description": "Select the columns which will proceed.", "passthrough": false, "list": ["DATASET_Eval_purpose", "DATASET_Eval_short_name", "DATASET_Name", "DATASET_Output_Path", "DATASET_Path", "DATASET_Workflow_name", "DATASET_calculation", "DATASET_extra_text", "DATASET_filecount", "DATASET_filter", "DATASET_filter_filecount", "DATASET_new_signal_length", "DATASET_original_signal_length", "DATASET_raster", "DATASET_subgroup", "DATASET_total_filecount", "FILENAME_field_0", "FILENAME_field_1", "FILENAME_field_2", "FILENAME_field_3", "FILENAME_field_4", "MDF_Database", "MDF_Devices", "MDF_Experiment", "MDF_Pre-trigger_Time", "MDF_Program_Description", "MDF_RP", "MDF_Recording_Duration", "MDF_Time", "MDF_WP", "MDF_Workspace", "MDF_[R", "MDF_author", "MDF_comment", "MDF_date", "MDF_division", "MDF_filename", "MDF_filename_fullpath", "MDF_program", "MDF_project", "MDF_subject", "MDF_time", "MDF_version", "UserMeta_EngingRunning", "UserMeta_mdf_date_isoformat", "VJoin-index", "VehicleList_Reg No", "VehicleList_VIN", "VehicleList_duration", "VehicleList_engine", "VehicleList_mileage", "VehicleList_transmission", "plot_output_path"], "value": [52], "label": "Select columns", "editor": {"buttons": true, "filter": true, "selection": "multi", "invertbutton": true, "type": "listview"}, "value_names": ["plot_output_path"], "type": "list", "order": 1}}]]></parameters>
      <ports>
        <input key="" requiresdata="False" scheme="hdf5" type="[table]" uuid="{e942374f-1b50-47e2-ab52-3760a8ce5cda}">
          <label>TablesInput</label>
          <description>TablesInput</description>
        </input>
        <output key="" requiresdata="False" scheme="hdf5" type="[table]" uuid="{62e19135-a0aa-4ab4-ba8a-066f652cf55c}">
          <label>TablesOutput</label>
          <description>TablesOutput</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.empty.emptyadafs" uuid="{7aedc292-bebe-4ee7-8d8e-9af20f30119d}" width="50.0" x="2325.0" y="1700.0">
      <label>Empty ADAFs</label>
      <description></description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(c) 2013 Combine AB</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
      <ports>
        <output key="port0" requiresdata="False" scheme="hdf5" type="[adaf]" uuid="{b13a9bc8-db97-4edc-808b-0e7cf12edf6f}">
          <label>File</label>
          <description>File</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.table.vjointablenodes" uuid="{9228b046-5e5c-4b0c-a6a5-9ce1e879eab3}" width="50.0" x="2050.0" y="1800.0">
      <label>VJoin Tables</label>
      <description>Vertical join of Tables.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2012 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"output_index": {"description": "Specify name for output index column. Can be left empty.", "value": "", "label": "Output index", "editor": null, "type": "string", "order": 2}, "minimum_increment": {"description": "Specify the increment in the outgoing index column at the existence of tables with the number of rows equal to zero.", "value": 1, "label": "Increment in index column", "editor": {"max": 1, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 1}, "type": "group", "fill": {"description": "Select if columns that are not represented in all Tables to be complemented with either NaNs or empty strings.", "value": false, "label": "Complement missing columns", "editor": null, "type": "boolean", "order": 0}}]]></parameters>
      <ports>
        <input key="port1" requiresdata="False" scheme="hdf5" type="[table]" uuid="{fb91ce60-7447-43f9-b0ab-6829846751ed}">
          <label>Tables</label>
          <description>Tables</description>
        </input>
        <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{43c35cd1-86d9-4f0e-a93a-1c8c157ae1bc}">
          <label>TableOutput</label>
          <description>TableOutput</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.report.apply.adafswithdsrcs" uuid="{c78c992c-8e60-4f4d-9f35-7334f83df710}" width="50.0" x="2475.0" y="1800.0">
      <label>Report Apply ADAFs with Datasource</label>
      <description></description>
      <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
      <copyright>(C) 2016 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"type": "group", "signal_mapping": {"description": "Mapping of incoming signal names to template signal names.", "value": "{}", "label": "Signal Mapping", "editor": null, "type": "string", "order": 1}, "file_format": {"description": "File format of exported pages.", "passthrough": false, "list": ["png", "jpg"], "value": [0], "label": "File Format", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}}]]></parameters>
      <ports>
        <input key="template" requiresdata="False" scheme="text" type="report" uuid="{66f4e5e4-8a57-47b0-af5e-89170d5135b7}">
          <label>ReportTemplate</label>
          <description>ReportTemplate</description>
        </input>
        <input key="adafs" requiresdata="False" scheme="hdf5" type="[adaf]" uuid="{eadc59e0-ab89-4adf-80a6-9926d635de1d}">
          <label>ADAFList</label>
          <description>ADAFList</description>
        </input>
        <input key="dsrc" requiresdata="False" scheme="text" type="[datasource]" uuid="{b2c63bcd-16a7-45e6-953c-7f7b3028b41a}">
          <label>Save path</label>
          <description>Save path</description>
        </input>
        <output key="dsrc" requiresdata="False" scheme="text" type="[datasource]" uuid="{ef8fca58-e41b-4317-898e-19e78ce1c8c6}">
          <label>Output files</label>
          <description>Output files</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.adaf.adafs2tables" uuid="{ec9b2521-f6a6-4435-91e8-a2485787a0f2}" width="50.0" x="1750.0" y="1800.0">
      <label>ADAFs to Tables</label>
      <description>Elementwise export of data from list of ADAFs to a list of Tables.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"tb": {"description": "", "passthrough": false, "list": [], "value": [], "label": "Time basis raster", "editor": {"filter": true, "type": "listview"}, "value_names": [], "type": "list", "order": 1}, "export_group": {"description": "Group to export.", "passthrough": false, "list": ["Meta", "Result", "Time series"], "value": [0], "label": "Export group", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "type": "group", "tb_col_name": {"description": "What column name should the time basis have in the resulting table? Leave blank to use the raster's name.", "value": "", "label": "Time basis column name", "editor": null, "type": "string", "order": 2}}]]></parameters>
      <ports>
        <input key="port1" requiresdata="False" scheme="hdf5" type="[adaf]" uuid="{a51219cb-2002-4147-a81e-6741616cc76f}">
          <label>ADAF</label>
          <description>ADAF</description>
        </input>
        <output key="port1" requiresdata="False" scheme="hdf5" type="[table]" uuid="{e977b8fc-b036-4207-a42f-b42a2e6d2c56}">
          <label>Table</label>
          <description>Table</description>
        </output>
      </ports>
    </node>
    <connection uuid="{21fb8065-7120-45c1-99bc-6a85c6d27070}">
      <source node="{58919083-db7c-4367-bb78-c92bc1214a16}" port="{ebb4b452-0c9c-4b59-ade9-fb11f05c1a49}"/>
      <destination node="{ec9b2521-f6a6-4435-91e8-a2485787a0f2}" port="{a51219cb-2002-4147-a81e-6741616cc76f}"/>
    </connection>
    <connection uuid="{38232d8e-0796-45c5-ae4f-24c575ccc79c}">
      <source node="{1398ddd9-eefe-4aa2-b1b0-a4129f39545d}" port="{d4e203bf-29e4-4738-b5d9-4d2e0a292cc5}"/>
      <destination node="{08c1bff7-c722-41a8-8f7f-d276a4a7a4a3}" port="{ec1a6a77-3853-4c39-ab78-0bb3a822625a}"/>
    </connection>
    <connection uuid="{5485f6b0-11c9-4cd8-a9c2-df56f8553102}">
      <source node="{58919083-db7c-4367-bb78-c92bc1214a16}" port="{1353b441-778a-4db7-8226-5371cf106bfc}"/>
      <destination node="{c78c992c-8e60-4f4d-9f35-7334f83df710}" port="{66f4e5e4-8a57-47b0-af5e-89170d5135b7}"/>
    </connection>
    <connection uuid="{7613cbd6-d713-4289-a6f8-1ded08850602}">
      <source node="{9228b046-5e5c-4b0c-a6a5-9ce1e879eab3}" port="{43c35cd1-86d9-4f0e-a93a-1c8c157ae1bc}"/>
      <destination node="{1398ddd9-eefe-4aa2-b1b0-a4129f39545d}" port="{fe61eeca-ae10-4283-a504-6743f70c3874}"/>
    </connection>
    <connection uuid="{8962cd4b-5205-4bb6-870d-cfae8b060ed8}">
      <source node="{4c585036-639b-4353-aaa8-c83d7364227f}" port="{62e19135-a0aa-4ab4-ba8a-066f652cf55c}"/>
      <destination node="{9228b046-5e5c-4b0c-a6a5-9ce1e879eab3}" port="{fb91ce60-7447-43f9-b0ab-6829846751ed}"/>
    </connection>
    <connection uuid="{91598087-87d6-4676-8d7a-350ecfe9785a}">
      <source node="{c78c992c-8e60-4f4d-9f35-7334f83df710}" port="{ef8fca58-e41b-4317-898e-19e78ce1c8c6}"/>
      <destination node="{58919083-db7c-4367-bb78-c92bc1214a16}" port="{a0c6f4f1-f5d0-4108-94af-2e6890107200}"/>
    </connection>
    <connection uuid="{acf16f51-9dfb-47b5-b12e-df34e14072a5}">
      <source node="{08c1bff7-c722-41a8-8f7f-d276a4a7a4a3}" port="{cd04ff71-bede-4ee9-a7f2-d692debe1af8}"/>
      <destination node="{c78c992c-8e60-4f4d-9f35-7334f83df710}" port="{b2c63bcd-16a7-45e6-953c-7f7b3028b41a}"/>
    </connection>
    <connection uuid="{cb076939-9933-442e-9896-25ee08d233cb}">
      <source node="{7aedc292-bebe-4ee7-8d8e-9af20f30119d}" port="{b13a9bc8-db97-4edc-808b-0e7cf12edf6f}"/>
      <destination node="{c78c992c-8e60-4f4d-9f35-7334f83df710}" port="{eadc59e0-ab89-4adf-80a6-9926d635de1d}"/>
    </connection>
    <connection uuid="{f650156c-0653-41b9-9934-bd602eafb688}">
      <source node="{ec9b2521-f6a6-4435-91e8-a2485787a0f2}" port="{e977b8fc-b036-4207-a42f-b42a2e6d2c56}"/>
      <destination node="{4c585036-639b-4353-aaa8-c83d7364227f}" port="{e942374f-1b50-47e2-ab52-3760a8ce5cda}"/>
    </connection>
  </flow>
  <flow cls="Flow" height="50.0" id="" is_locked="False" uuid="{a84d7aeb-1428-4f62-926d-e5a3b70c1799}" width="50.0" x="1700.0" y="1925.0">
    <label>Create signals</label>
    <description></description>
    <author>Unknown</author>
    <copyright></copyright>
    <version>1.0</version>
    <source></source>
    <ports>
      <input height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="[adaf]" uuid="{ddf5b41a-63e4-4809-b313-e612cdbddbfa}" width="50.0" x="1625.0" y="1975.0">
        <label>Port</label>
        <description>Port</description>
      </input>
      <output height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="[adaf]" uuid="{c8c5279c-cbe8-4fe3-ba3d-b03cc7d2390f}" width="50.0" x="2275.0" y="1975.0">
        <label>Port</label>
        <description>Port</description>
      </output>
    </ports>
    <aggregation type="json"><![CDATA[{"uuid_selected": ["{3aa64b3f-2cc7-42a4-a255-b916f1b621d9}"], "group_structure": {"type": "group", "uuid": null, "children": [{"type": "node", "uuid": "{3aa64b3f-2cc7-42a4-a255-b916f1b621d9}"}]}}]]></aggregation>
    <parameters type="json"><![CDATA[{"environment": {}}]]></parameters>
    <node height="50.0" id="org.sysess.sympathy.data.table.hjointables" uuid="{2a052bfe-de5e-4e6f-afe6-0a5840a6ce08}" width="50.0" x="2000.0" y="1900.0">
      <label>HJoin Tables</label>
      <description>Pairwise horizontal join of two list of Tables.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
      <ports>
        <input key="port1" requiresdata="False" scheme="hdf5" type="[table]" uuid="{81fc7e22-5553-4750-9187-14c08a2b5d9d}">
          <label>Tables1</label>
          <description>Tables1</description>
        </input>
        <input key="port2" requiresdata="False" scheme="hdf5" type="[table]" uuid="{4f18e927-aaa0-4574-a633-23c0eca06cf2}">
          <label>Tables2</label>
          <description>Tables2</description>
        </input>
        <output key="port1" requiresdata="False" scheme="hdf5" type="[table]" uuid="{be896111-40e5-41e3-a249-c5e10f9ac911}">
          <label>TablesOutput</label>
          <description>TablesOutput</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.table.calculator" uuid="{3aa64b3f-2cc7-42a4-a255-b916f1b621d9}" width="50.0" x="1875.0" y="1850.0">
      <label>Calculator</label>
      <description>Performs user-defined python calculations</description>
      <author>Greger Cronquist &lt;greger.cronquist@sysess.org&gt;, Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;, Sara Gustafzelius &lt;sara.gustafzelius@combine.se&gt;</author>
      <copyright>(c) 2012 Combine AB</copyright>
      <version>2.0</version>
      <parameters type="json"><![CDATA[{"same_length_res": {"description": "Gather all the results generated from an incoming Table into a common output table. This requires that the results all have the same length. An error will be given if the lengths of the outgoing results differ.", "value": true, "label": "Put results in common outputs.", "editor": null, "type": "boolean", "order": 1}, "column_names": {"description": "", "passthrough": false, "list": ["Exh_tSim1Fld_mp", "OxiCat_facHCCnvRat", "OxiCat_mHCMonPas_mp", "Resampled raster"], "value": [0], "label": "", "editor": null, "value_names": ["Exh_tSim1Fld_mp"], "type": "list", "order": 0}, "type": "group", "calc_list": {"description": "List of calculations.", "passthrough": false, "list": ["${KatDiag_Enable} = cde.first_in_seq(${OxiCat_mHCMonPas_mp} >= 4)"], "value": [0], "label": "List of calculations", "editor": null, "value_names": [], "type": "list", "order": 0}}]]></parameters>
      <ports>
        <input key="port0" requiresdata="False" scheme="hdf5" type="[table]" uuid="{19ec770f-aca9-4b63-88ab-7e997e86f462}">
          <label>Table</label>
          <description>Table</description>
        </input>
        <output key="port1" requiresdata="False" scheme="hdf5" type="[table]" uuid="{a66bf6af-f389-4b73-9f9f-e5218bf25be1}">
          <label>OutTable</label>
          <description>OutTable</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.adaf.adafs2tables" uuid="{deb86dbb-ec14-4f02-b55c-6d4ff8197dec}" width="50.0" x="1750.0" y="1900.0">
      <label>ADAFs to Tables</label>
      <description>Elementwise export of data from list of ADAFs to a list of Tables.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"tb": {"description": "", "passthrough": false, "list": ["Resampled system/Resampled raster/"], "value": [0], "label": "Time basis raster", "editor": {"filter": true, "type": "listview"}, "value_names": ["Resampled system/Resampled raster/"], "type": "list", "order": 1}, "export_group": {"description": "Group to export.", "passthrough": false, "list": ["Meta", "Result", "Time series"], "value": [2], "label": "Export group", "editor": {"type": "combobox"}, "value_names": ["Time series"], "type": "list", "order": 0}, "type": "group", "tb_col_name": {"description": "", "value": "Resampled raster", "label": "Time basis column name", "editor": null, "type": "string", "order": 2}}]]></parameters>
      <ports>
        <input key="port1" requiresdata="False" scheme="hdf5" type="[adaf]" uuid="{0162fd05-5358-4e05-b220-f3c505f74ffc}">
          <label>ADAF</label>
          <description>ADAF</description>
        </input>
        <output key="port1" requiresdata="False" scheme="hdf5" type="[table]" uuid="{25fef72b-5c68-46b9-aac6-ee918258923a}">
          <label>Table</label>
          <description>Table</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.table.updateadafswithtables" uuid="{e0b1dc8f-d354-4e62-8674-3a9c9adf9961}" width="50.0" x="2150.0" y="1975.0">
      <label>Update ADAFs with Tables</label>
      <description>Export content of Table to specified container in ADAF.</description>
      <author>Erik der Hagopian &lt;erik.hagopian@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"export_to_group": {"description": "Group to put table data.", "passthrough": false, "list": ["Meta", "Result", "Time series"], "value": [2], "label": "Export to group", "editor": {"type": "combobox"}, "value_names": ["Time series"], "type": "list", "order": 0}, "raster": {"description": "", "value": "Resampled raster", "label": "Time series raster name", "editor": null, "type": "string", "order": 2}, "tb": {"description": "", "passthrough": false, "list": ["Resampled raster", "Exh_tSim1Fld_mp", "KatDiag_Enable", "OxiCat_facHCCnvRat", "OxiCat_mHCMonPas_mp"], "value": [0], "label": "Time basis column", "editor": {"filter": true, "type": "listview"}, "value_names": ["Resampled raster"], "type": "list", "order": 3}, "system": {"description": "", "value": "Resampled system", "label": "Time series system name", "editor": null, "type": "string", "order": 1}, "type": "group"}]]></parameters>
      <ports>
        <input key="port1" requiresdata="False" scheme="hdf5" type="[table]" uuid="{d3cf64e3-5f09-463d-9643-c62a69c23de8}">
          <label>Tables</label>
          <description>Tables</description>
        </input>
        <input key="port2" requiresdata="False" scheme="hdf5" type="[adaf]" uuid="{d4646a17-ab8c-4333-b93b-185343ddd1f5}">
          <label>ADAFs</label>
          <description>ADAFs</description>
        </input>
        <output key="port1" requiresdata="False" scheme="hdf5" type="[adaf]" uuid="{e3bbfd11-fc99-407e-b2d3-ea603101c96e}">
          <label>ADAFs</label>
          <description>ADAFs</description>
        </output>
      </ports>
    </node>
    <connection uuid="{02fe80f4-b684-47c8-a58e-8109b9c33aa4}">
      <source node="{deb86dbb-ec14-4f02-b55c-6d4ff8197dec}" port="{25fef72b-5c68-46b9-aac6-ee918258923a}"/>
      <destination node="{2a052bfe-de5e-4e6f-afe6-0a5840a6ce08}" port="{4f18e927-aaa0-4574-a633-23c0eca06cf2}"/>
    </connection>
    <connection uuid="{2fc07fe9-69e1-4eb0-88d9-1301a7d09eb3}">
      <source node="{deb86dbb-ec14-4f02-b55c-6d4ff8197dec}" port="{25fef72b-5c68-46b9-aac6-ee918258923a}"/>
      <destination node="{3aa64b3f-2cc7-42a4-a255-b916f1b621d9}" port="{19ec770f-aca9-4b63-88ab-7e997e86f462}"/>
    </connection>
    <connection uuid="{30db839e-936d-4858-a405-88676a5326fd}">
      <source node="{a84d7aeb-1428-4f62-926d-e5a3b70c1799}" port="{ddf5b41a-63e4-4809-b313-e612cdbddbfa}"/>
      <destination node="{e0b1dc8f-d354-4e62-8674-3a9c9adf9961}" port="{d4646a17-ab8c-4333-b93b-185343ddd1f5}"/>
    </connection>
    <connection uuid="{392c0a3b-ae9c-40dc-acb7-1e13edb071fb}">
      <source node="{a84d7aeb-1428-4f62-926d-e5a3b70c1799}" port="{ddf5b41a-63e4-4809-b313-e612cdbddbfa}"/>
      <destination node="{deb86dbb-ec14-4f02-b55c-6d4ff8197dec}" port="{0162fd05-5358-4e05-b220-f3c505f74ffc}"/>
    </connection>
    <connection uuid="{8ddbe50b-056e-44e9-b2d8-08e06eec0003}">
      <source node="{e0b1dc8f-d354-4e62-8674-3a9c9adf9961}" port="{e3bbfd11-fc99-407e-b2d3-ea603101c96e}"/>
      <destination node="{a84d7aeb-1428-4f62-926d-e5a3b70c1799}" port="{c8c5279c-cbe8-4fe3-ba3d-b03cc7d2390f}"/>
    </connection>
    <connection uuid="{c5ee6259-a349-4f8e-b909-2f09db110a76}">
      <source node="{2a052bfe-de5e-4e6f-afe6-0a5840a6ce08}" port="{be896111-40e5-41e3-a249-c5e10f9ac911}"/>
      <destination node="{e0b1dc8f-d354-4e62-8674-3a9c9adf9961}" port="{d3cf64e3-5f09-463d-9643-c62a69c23de8}"/>
    </connection>
    <connection uuid="{f597f951-a636-482c-a530-78cd20a2edcf}">
      <source node="{3aa64b3f-2cc7-42a4-a255-b916f1b621d9}" port="{a66bf6af-f389-4b73-9f9f-e5218bf25be1}"/>
      <destination node="{2a052bfe-de5e-4e6f-afe6-0a5840a6ce08}" port="{81fc7e22-5553-4750-9187-14c08a2b5d9d}"/>
    </connection>
  </flow>
  <flow cls="Flow" height="50.0" id="" is_locked="False" source_uuid="{8f129a1f-a38a-4d45-b6d5-5d01b1024e65}" uuid="{ae6183d3-b30c-426c-aef5-3c6e88f15fba}" width="50.0" x="1425.0" y="1925.0" href="../../subflows/select raster.syx">
    <label>Select raster</label>
    <description></description>
    <author></author>
    <copyright></copyright>
    <version></version>
    <source>../../subflows/select raster.syx</source>
    <ports>
      <input height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" source_uuid="{36bbbef2-b8b3-4a2f-b161-91e2d9238cef}" type="[adaf]" uuid="{f21502ea-f63f-41a1-b80c-92afe1d18c94}" width="50.0" x="1700.0" y="2325.0">
        <label>Port</label>
        <description>Port</description>
      </input>
      <output height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" source_uuid="{9c0968cc-f1db-4352-80a1-d7e8b996d085}" type="[adaf]" uuid="{a1cd11d8-10ac-4323-a55c-fe869c1b99c3}" width="50.0" x="2525.0" y="2325.0">
        <label>Port</label>
        <description>Port</description>
      </output>
    </ports>
  </flow>
  <flow cls="Flow" height="50.0" id="" is_locked="False" uuid="{b7bc93cd-65db-4c11-b4b4-c430e531d32c}" width="50.0" x="1850.0" y="1925.0">
    <label>Apply mask</label>
    <description></description>
    <author>Unknown</author>
    <copyright></copyright>
    <version>1.0</version>
    <source></source>
    <ports>
      <input height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="[adaf]" uuid="{636a13d4-a6ff-43d6-bb30-ec4828519eb4}" width="50.0" x="1400.0" y="1950.0">
        <label>Port</label>
        <description>Port</description>
      </input>
      <output height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="adaf" uuid="{2a867fcc-e34b-426c-801c-b38dc6a01061}" width="50.0" x="2800.0" y="1875.0">
        <label>Port</label>
        <description>Port</description>
      </output>
    </ports>
    <aggregation type="json"><![CDATA[{"uuid_selected": ["{1091084c-cc48-42a4-8d13-b9807b91eb83}"], "group_structure": {"type": "group", "uuid": null, "children": [{"type": "node", "uuid": "{1091084c-cc48-42a4-8d13-b9807b91eb83}"}]}}]]></aggregation>
    <parameters type="json"><![CDATA[{"environment": {}, "data": {}, "type": "json"}]]></parameters>
    <flow cls="Flow" height="50.0" id="" is_locked="False" uuid="{4b5d59cc-e8dd-418a-a93b-70a337fc3046}" width="50.0" x="2225.0" y="1875.0">
      <label>New signal length</label>
      <description></description>
      <author>Unknown</author>
      <copyright></copyright>
      <version>1.0</version>
      <source></source>
      <ports>
        <input height="50.0" index="0" key="Table" optional="False" requiresdata="False" scheme="hdf5" type="[table]" uuid="{03e555f8-cf1c-4a56-9de8-b5fe78823a8f}" width="50.0" x="2125.0" y="1925.0">
          <label>Table</label>
          <description>Table</description>
        </input>
        <output height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{e6706181-3c98-4e58-a516-0cf480c99e29}" width="50.0" x="2850.0" y="1925.0">
          <label>Port</label>
          <description>Port</description>
        </output>
      </ports>
      <aggregation type="json"><![CDATA[{}]]></aggregation>
      <parameters type="json"><![CDATA[{"environment": {}}]]></parameters>
      <flow cls="Lambda" height="50.0" id="" is_locked="False" uuid="{5b1edf35-bb58-487b-b00b-7b81c3c0ffc9}" width="50.0" x="2350.0" y="1700.0">
        <label>Sum of signal
lengths</label>
        <description></description>
        <author>Unknown</author>
        <copyright></copyright>
        <version>1.0</version>
        <source></source>
        <ports>
          <input height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="[table]" uuid="{8bcf3445-7d24-4349-acfc-64a074418762}" width="50.0" x="1900.0" y="2000.0">
            <label>Port</label>
            <description>Port</description>
          </input>
          <output height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="[table]" uuid="{41bf8fad-a678-4c9d-8a9a-95a0bcbf7661}" width="50.0" x="2100.0" y="2000.0">
            <label>Port</label>
            <description>Port</description>
          </output>
        </ports>
        <basic_ports>
          <output key="Function" requiresdata="False" scheme="hdf5" type="[table] -&gt; [table]" uuid="{dd303f9d-71be-4502-a3a8-084411f57f44}">
            <label>Lambda function</label>
            <description>Lambda function</description>
          </output>
        </basic_ports>
        <aggregation type="json"><![CDATA[null]]></aggregation>
        <parameters type="json"><![CDATA[{"environment": {}}]]></parameters>
        <node height="50.0" id="org.sysess.sympathy.data.table.calculator" uuid="{22cffd76-378d-45b3-bbf1-fb4b2f3a8dae}" width="50.0" x="2000.0" y="2000.0">
          <label>Calculator</label>
          <description>Performs user-defined python calculations</description>
          <author>Greger Cronquist &lt;greger.cronquist@sysess.org&gt;, Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;, Sara Gustafzelius &lt;sara.gustafzelius@combine.se&gt;</author>
          <copyright>(c) 2012 Combine AB</copyright>
          <version>2.0</version>
          <parameters type="json"><![CDATA[{"same_length_res": {"description": "Gather all the results generated from an incoming Table into a common output table. This requires that the results all have the same length. An error will be given if the lengths of the outgoing results differ.", "value": true, "label": "Put results in common outputs.", "editor": null, "type": "boolean", "order": 1}, "column_names": {"description": "", "passthrough": false, "list": [], "value": [0], "label": "", "editor": null, "value_names": ["new_signal_length"], "type": "list", "order": 0}, "type": "group", "calc_list": {"description": "List of calculations.", "passthrough": false, "list": ["${DATASET_new_signal_length} = sum(${new_signal_length})"], "value": [0], "label": "List of calculations", "editor": null, "value_names": [], "type": "list", "order": 0}}]]></parameters>
          <ports>
            <input key="port0" requiresdata="False" scheme="hdf5" type="[table]" uuid="{398e95c0-1166-41a9-b966-00fda8e6f690}">
              <label>Table</label>
              <description>Table</description>
            </input>
            <output key="port1" requiresdata="False" scheme="hdf5" type="[table]" uuid="{c14fda14-55c2-449e-8d1b-abc734cd9d18}">
              <label>OutTable</label>
              <description>OutTable</description>
            </output>
          </ports>
        </node>
        <connection uuid="{4f11e5da-413f-4862-93c7-8166c6f5428a}">
          <source node="{22cffd76-378d-45b3-bbf1-fb4b2f3a8dae}" port="{c14fda14-55c2-449e-8d1b-abc734cd9d18}"/>
          <destination node="{5b1edf35-bb58-487b-b00b-7b81c3c0ffc9}" port="{41bf8fad-a678-4c9d-8a9a-95a0bcbf7661}"/>
        </connection>
        <connection uuid="{82ae7c97-1ebf-48b7-9d7e-54b3cda8ff6d}">
          <source node="{5b1edf35-bb58-487b-b00b-7b81c3c0ffc9}" port="{8bcf3445-7d24-4349-acfc-64a074418762}"/>
          <destination node="{22cffd76-378d-45b3-bbf1-fb4b2f3a8dae}" port="{398e95c0-1166-41a9-b966-00fda8e6f690}"/>
        </connection>
      </flow>
      <flow cls="Lambda" height="50.0" id="" is_locked="False" uuid="{865b6a0b-bd36-4963-bbe3-bfb004304acd}" width="50.0" x="2350.0" y="1800.0">
        <label>Zero signal
length</label>
        <description></description>
        <author>Unknown</author>
        <copyright></copyright>
        <version>1.0</version>
        <source></source>
        <ports>
          <input height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="[table]" uuid="{8f2fd354-9c58-4829-b1af-bc21b1aa9909}" width="50.0" x="1900.0" y="2000.0">
            <label>Port</label>
            <description>Port</description>
          </input>
          <output height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="[table]" uuid="{5ce03efc-8698-4fd0-975b-900b2b171b0b}" width="50.0" x="2100.0" y="2000.0">
            <label>Port</label>
            <description>Port</description>
          </output>
        </ports>
        <basic_ports>
          <output key="Function" requiresdata="False" scheme="hdf5" type="[table] -&gt; [table]" uuid="{a91682d2-f3c8-449d-b459-125a8664ec81}">
            <label>Lambda function</label>
            <description>Lambda function</description>
          </output>
        </basic_ports>
        <aggregation type="json"><![CDATA[null]]></aggregation>
        <parameters type="json"><![CDATA[{"environment": {}}]]></parameters>
        <node height="50.0" id="org.sysess.sympathy.data.table.calculator" uuid="{41a469f1-b99c-42f6-8cf4-159e75daa6a8}" width="50.0" x="2000.0" y="2000.0">
          <label>Calculator</label>
          <description>Performs user-defined python calculations</description>
          <author>Greger Cronquist &lt;greger.cronquist@sysess.org&gt;, Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;, Sara Gustafzelius &lt;sara.gustafzelius@combine.se&gt;</author>
          <copyright>(c) 2012 Combine AB</copyright>
          <version>2.0</version>
          <parameters type="json"><![CDATA[{"same_length_res": {"description": "Gather all the results generated from an incoming Table into a common output table. This requires that the results all have the same length. An error will be given if the lengths of the outgoing results differ.", "value": true, "label": "Put results in common outputs.", "editor": null, "type": "boolean", "order": 1}, "column_names": {"description": "", "passthrough": false, "list": [], "value": [0], "label": "", "editor": null, "value_names": ["new_signal_length"], "type": "list", "order": 0}, "type": "group", "calc_list": {"description": "List of calculations.", "passthrough": false, "list": ["${DATASET_new_signal_length} = 0"], "value": [0], "label": "List of calculations", "editor": null, "value_names": [], "type": "list", "order": 0}}]]></parameters>
          <ports>
            <input key="port0" requiresdata="False" scheme="hdf5" type="[table]" uuid="{6c7dc16c-b729-4933-848e-1ef2e3cc2060}">
              <label>Table</label>
              <description>Table</description>
            </input>
            <output key="port1" requiresdata="False" scheme="hdf5" type="[table]" uuid="{fb91157a-8cb6-4b3b-b747-b3edd99cff88}">
              <label>OutTable</label>
              <description>OutTable</description>
            </output>
          </ports>
        </node>
        <connection uuid="{566a2e99-c3e9-49f7-970c-fa304bac073c}">
          <source node="{41a469f1-b99c-42f6-8cf4-159e75daa6a8}" port="{fb91157a-8cb6-4b3b-b747-b3edd99cff88}"/>
          <destination node="{865b6a0b-bd36-4963-bbe3-bfb004304acd}" port="{5ce03efc-8698-4fd0-975b-900b2b171b0b}"/>
        </connection>
        <connection uuid="{5b8dfecf-f183-45c1-aeac-97e8d774ca56}">
          <source node="{865b6a0b-bd36-4963-bbe3-bfb004304acd}" port="{8f2fd354-9c58-4829-b1af-bc21b1aa9909}"/>
          <destination node="{41a469f1-b99c-42f6-8cf4-159e75daa6a8}" port="{6c7dc16c-b729-4933-848e-1ef2e3cc2060}"/>
        </connection>
      </flow>
      <node height="50.0" id="org.sysess.builtin.apply" uuid="{1af57493-c826-4da0-a8b9-01f4a693b9f2}" width="50.0" x="2600.0" y="1925.0">
        <label>Apply</label>
        <description>Apply Lambda function to Argument</description>
        <author>SysESS</author>
        <copyright>See about dialog</copyright>
        <version>See about dialog</version>
        <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
        <ports>
          <input key="Function" requiresdata="False" scheme="hdf5" type="[table] -&gt; [table]" uuid="{59a05a9f-6695-4ac3-9806-89715b4dbcec}">
            <label>Lambda Function to Apply</label>
            <description>Lambda Function to Apply</description>
          </input>
          <input key="Argument" requiresdata="False" scheme="hdf5" type="[table]" uuid="{da3e6857-e60f-4d1d-b7a8-60549d12017b}">
            <label>Argument</label>
            <description>Argument</description>
          </input>
          <output key="Output" requiresdata="False" scheme="hdf5" type="[table]" uuid="{0aabd362-1e52-488b-84b0-9197c4188721}">
            <label>Output</label>
            <description>Output</description>
          </output>
        </ports>
      </node>
      <node height="50.0" id="org.sysess.sympathy.data.table.calculator" uuid="{54974220-27eb-49fc-8981-0a0bf9c3ff90}" width="50.0" x="2225.0" y="1925.0">
        <label>Calculator</label>
        <description>Performs user-defined python calculations</description>
        <author>Greger Cronquist &lt;greger.cronquist@sysess.org&gt;, Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;, Sara Gustafzelius &lt;sara.gustafzelius@combine.se&gt;</author>
        <copyright>(c) 2012 Combine AB</copyright>
        <version>2.0</version>
        <parameters type="json"><![CDATA[{"same_length_res": {"description": "Gather all the results generated from an incoming Table into a common output table. This requires that the results all have the same length. An error will be given if the lengths of the outgoing results differ.", "value": true, "label": "Put results in common outputs.", "editor": null, "type": "boolean", "order": 1}, "column_names": {"description": "", "passthrough": false, "list": [], "value": [0], "label": "", "editor": null, "value_names": ["Exh_tSim1Fld_mp"], "type": "list", "order": 0}, "type": "group", "calc_list": {"description": "List of calculations.", "passthrough": false, "list": ["${new_signal_length} = ${Resampled raster}.size"], "value": [0], "label": "List of calculations", "editor": null, "value_names": [], "type": "list", "order": 0}}]]></parameters>
        <ports>
          <input key="port0" requiresdata="False" scheme="hdf5" type="[table]" uuid="{6abb075b-3e3c-415f-8073-ed2415f42584}">
            <label>Table</label>
            <description>Table</description>
          </input>
          <output key="port1" requiresdata="False" scheme="hdf5" type="[table]" uuid="{cb19279d-3384-4906-b522-32015aea12f3}">
            <label>OutTable</label>
            <description>OutTable</description>
          </output>
        </ports>
      </node>
      <node height="50.0" id="org.sysess.sympathy.data.table.vjointablenodes" uuid="{5c7fe5f9-fc13-4f55-a1b6-2975d77927fe}" width="50.0" x="2350.0" y="1925.0">
        <label>VJoin Tables</label>
        <description>Vertical join of Tables.</description>
        <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
        <copyright>(C) 2012 System Engineering Software Society</copyright>
        <version>1.0</version>
        <parameters type="json"><![CDATA[{"output_index": {"description": "Specify name for output index column. Can be left empty.", "value": "VJoin-index", "label": "Output index", "editor": null, "type": "string", "order": 2}, "minimum_increment": {"description": "Specify the increment in the outgoing index column at the existence of tables with the number of rows equal to zero.", "value": 1, "label": "Increment in index column", "editor": {"max": 1, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "type": "group", "fill": {"description": "Select if columns that are not represented in all Tables to be complemented with either NaNs or empty strings.", "value": false, "label": "Complement missing columns", "editor": null, "type": "boolean", "order": 1}}]]></parameters>
        <ports>
          <input key="port1" requiresdata="False" scheme="hdf5" type="[table]" uuid="{60f563ea-6ab9-4083-b934-bf50b96e7153}">
            <label>Tables</label>
            <description>Tables</description>
          </input>
          <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{08ec7acd-d51d-4460-904e-b605dbed3aa0}">
            <label>TableOutput</label>
            <description>TableOutput</description>
          </output>
        </ports>
      </node>
      <node height="50.0" id="org.sysess.sympathy.data.table.table2tables" uuid="{6009101c-c8e5-4505-ba06-5051df32286e}" width="50.0" x="2475.0" y="1925.0">
        <label>Table to Tables</label>
        <description>Convert a single Table item to a list of Tables.</description>
        <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
        <copyright>(c) 2013 Combine AB</copyright>
        <version>0.1</version>
        <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
        <ports>
          <input key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{e9b6e45a-e50f-45c3-825d-9e011d7eb480}">
            <label>Table</label>
            <description>Table</description>
          </input>
          <output key="port1" requiresdata="False" scheme="hdf5" type="[table]" uuid="{fe2515e0-0006-4e9d-baa1-62fffae74633}">
            <label>OutTable</label>
            <description>OutTable</description>
          </output>
        </ports>
      </node>
      <node height="50.0" id="org.sysess.sympathy.list.getitemtable" uuid="{909b10ba-9ae1-45a3-b2db-63d5e073f66b}" width="50.0" x="2725.0" y="1925.0">
        <label>Get Item Table</label>
        <description>Get an item from a list</description>
        <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
        <copyright>(C) 2013 System Engineering Software Society</copyright>
        <version>1.0</version>
        <parameters type="json"><![CDATA[{"type": "group", "combo": {"description": "List indexes.", "passthrough": false, "list": [], "value": [0], "label": "Index", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}}]]></parameters>
        <ports>
          <input key="port1" requiresdata="False" scheme="hdf5" type="[table]" uuid="{cba03200-cd49-4b44-9804-26e3e958bbf8}">
            <label>List</label>
            <description>List</description>
          </input>
          <output key="port3" requiresdata="False" scheme="hdf5" type="table" uuid="{3043b887-358b-4895-8c97-61d016c38444}">
            <label>Item</label>
            <description>Item</description>
          </output>
        </ports>
      </node>
      <node height="50.0" id="org.sysess.sympathy.list.eitherwithdatapredicate" uuid="{9b6581b6-7ae1-4324-b535-23a150c7e4b7}" width="50.0" x="2475.0" y="1800.0">
        <label>Either with Data Predicate</label>
        <description>Either of inputs using predicate and data to compare.</description>
        <author>Erik der Hagopian &lt;erik.hagopian@sysess.org&gt;</author>
        <copyright>(C) 2015 System Engineering Software Society</copyright>
        <version>1.0</version>
        <parameters type="json"><![CDATA[{"predicate": {"description": "Either predicate function", "value": "lambda x: x.number_of_rows()", "label": "Either predicate function", "editor": null, "type": "string", "order": 0}, "type": "group"}]]></parameters>
        <ports>
          <input key="true" requiresdata="False" scheme="hdf5" type="[table] -&gt; [table]" uuid="{e5846b04-7cd4-4fdd-af69-ceb1d048afcf}">
            <label>First, returned if predicate held true</label>
            <description>First, returned if predicate held true</description>
          </input>
          <input key="false" requiresdata="False" scheme="hdf5" type="[table] -&gt; [table]" uuid="{59383df9-8d12-4d0f-92b5-9c3790292604}">
            <label>Second, returned if predicate did not hold true</label>
            <description>Second, returned if predicate did not hold true</description>
          </input>
          <input key="data" requiresdata="False" scheme="hdf5" type="table" uuid="{45b91120-047f-4f43-8829-660745c840ec}">
            <label>Data for the predicate comparison</label>
            <description>Data for the predicate comparison</description>
          </input>
          <output key="output" requiresdata="False" scheme="hdf5" type="[table] -&gt; [table]" uuid="{025e7b14-3a20-4a46-b49f-7e7291d2cc70}">
            <label>Output, First if the predicate holds true otherwise Second</label>
            <description>Output, First if the predicate holds true otherwise Second</description>
          </output>
        </ports>
      </node>
      <connection uuid="{1b1953a6-770c-416b-9dbd-ed0f3cf8c9d7}">
        <source node="{5b1edf35-bb58-487b-b00b-7b81c3c0ffc9}" port="{dd303f9d-71be-4502-a3a8-084411f57f44}"/>
        <destination node="{9b6581b6-7ae1-4324-b535-23a150c7e4b7}" port="{e5846b04-7cd4-4fdd-af69-ceb1d048afcf}"/>
      </connection>
      <connection uuid="{480c369e-db63-420f-9559-af611d3d5793}">
        <source node="{6009101c-c8e5-4505-ba06-5051df32286e}" port="{fe2515e0-0006-4e9d-baa1-62fffae74633}"/>
        <destination node="{1af57493-c826-4da0-a8b9-01f4a693b9f2}" port="{da3e6857-e60f-4d1d-b7a8-60549d12017b}"/>
      </connection>
      <connection uuid="{5a84f597-ec48-496d-aea6-e2dfcd508d40}">
        <source node="{9b6581b6-7ae1-4324-b535-23a150c7e4b7}" port="{025e7b14-3a20-4a46-b49f-7e7291d2cc70}"/>
        <destination node="{1af57493-c826-4da0-a8b9-01f4a693b9f2}" port="{59a05a9f-6695-4ac3-9806-89715b4dbcec}"/>
      </connection>
      <connection uuid="{7430c6e7-7458-4d59-a47c-0af521eafbe2}">
        <source node="{1af57493-c826-4da0-a8b9-01f4a693b9f2}" port="{0aabd362-1e52-488b-84b0-9197c4188721}"/>
        <destination node="{909b10ba-9ae1-45a3-b2db-63d5e073f66b}" port="{cba03200-cd49-4b44-9804-26e3e958bbf8}"/>
      </connection>
      <connection uuid="{b1defc1d-6e13-401d-b290-39e18b7a7447}">
        <source node="{54974220-27eb-49fc-8981-0a0bf9c3ff90}" port="{cb19279d-3384-4906-b522-32015aea12f3}"/>
        <destination node="{5c7fe5f9-fc13-4f55-a1b6-2975d77927fe}" port="{60f563ea-6ab9-4083-b934-bf50b96e7153}"/>
      </connection>
      <connection uuid="{b8a3bf65-0527-4eeb-bc02-1dbe1737729b}">
        <source node="{4b5d59cc-e8dd-418a-a93b-70a337fc3046}" port="{03e555f8-cf1c-4a56-9de8-b5fe78823a8f}"/>
        <destination node="{54974220-27eb-49fc-8981-0a0bf9c3ff90}" port="{6abb075b-3e3c-415f-8073-ed2415f42584}"/>
      </connection>
      <connection uuid="{c36cf422-fefb-4f5d-983b-42792873d508}">
        <source node="{5c7fe5f9-fc13-4f55-a1b6-2975d77927fe}" port="{08ec7acd-d51d-4460-904e-b605dbed3aa0}"/>
        <destination node="{6009101c-c8e5-4505-ba06-5051df32286e}" port="{e9b6e45a-e50f-45c3-825d-9e011d7eb480}"/>
      </connection>
      <connection uuid="{c668f254-113f-4255-975b-506c51770e4c}">
        <source node="{909b10ba-9ae1-45a3-b2db-63d5e073f66b}" port="{3043b887-358b-4895-8c97-61d016c38444}"/>
        <destination node="{4b5d59cc-e8dd-418a-a93b-70a337fc3046}" port="{e6706181-3c98-4e58-a516-0cf480c99e29}"/>
      </connection>
      <connection uuid="{d99203d5-2d52-4141-b660-5698e2b2b768}">
        <source node="{5c7fe5f9-fc13-4f55-a1b6-2975d77927fe}" port="{08ec7acd-d51d-4460-904e-b605dbed3aa0}"/>
        <destination node="{9b6581b6-7ae1-4324-b535-23a150c7e4b7}" port="{45b91120-047f-4f43-8829-660745c840ec}"/>
      </connection>
      <connection uuid="{f974a3ac-1df2-467d-8e73-3bc4f690457e}">
        <source node="{865b6a0b-bd36-4963-bbe3-bfb004304acd}" port="{a91682d2-f3c8-449d-b459-125a8664ec81}"/>
        <destination node="{9b6581b6-7ae1-4324-b535-23a150c7e4b7}" port="{59383df9-8d12-4d0f-92b5-9c3790292604}"/>
      </connection>
    </flow>
    <flow cls="Flow" height="50.0" id="" is_locked="False" uuid="{4e54a35c-169d-405f-9649-ec881fcdc68b}" width="50.0" x="2000.0" y="1775.0">
      <label>Create selection table</label>
      <description></description>
      <author>Unknown</author>
      <copyright></copyright>
      <version>1.0</version>
      <source></source>
      <ports>
        <input height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="[table]" uuid="{6621508c-f463-451b-bf14-5e47d92f8def}" width="50.0" x="1425.0" y="1725.0">
          <label>Port</label>
          <description>Port</description>
        </input>
        <output height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{3523d25e-0c28-4808-86e6-4956948e9b33}" width="50.0" x="2225.0" y="1725.0">
          <label>Port</label>
          <description>Port</description>
        </output>
      </ports>
      <aggregation type="json"><![CDATA[{"uuid_selected": ["{0acb2c0d-9270-48c8-b360-60e10ef78bde}"], "group_structure": {"type": "group", "uuid": null, "children": [{"type": "node", "uuid": "{0acb2c0d-9270-48c8-b360-60e10ef78bde}"}]}}]]></aggregation>
      <parameters type="json"><![CDATA[{"environment": {}}]]></parameters>
      <node height="50.0" id="org.sysess.sympathy.data.table.calculator" uuid="{0acb2c0d-9270-48c8-b360-60e10ef78bde}" width="50.0" x="1825.0" y="1800.0">
        <label>Calculator</label>
        <description>Performs user-defined python calculations</description>
        <author>Greger Cronquist &lt;greger.cronquist@sysess.org&gt;, Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;, Sara Gustafzelius &lt;sara.gustafzelius@combine.se&gt;</author>
        <copyright>(c) 2012 Combine AB</copyright>
        <version>2.0</version>
        <parameters type="json"><![CDATA[{"same_length_res": {"description": "Gather all the results generated from an incoming Table into a common output table. This requires that the results all have the same length. An error will be given if the lengths of the outgoing results differ.", "value": true, "label": "Put results in common outputs.", "editor": null, "type": "boolean", "order": 1}, "column_names": {"description": "", "passthrough": false, "list": ["colnames"], "value": [0], "label": "", "editor": null, "value_names": ["colnames"], "type": "list"}, "type": "group", "calc_list": {"description": "List of calculations.", "passthrough": false, "list": ["${operators} = np.array([u'equal']*len(${colnames}))", "${value} = np.array([True]*len(${colnames}))"], "value": [0], "label": "List of calculations", "editor": null, "value_names": [], "type": "list", "order": 0}}]]></parameters>
        <ports>
          <input key="port0" requiresdata="False" scheme="hdf5" type="[table]" uuid="{ad7c4962-4426-4fbb-87bb-004c1c893d9e}">
            <label>Table</label>
            <description>Table</description>
          </input>
          <output key="port1" requiresdata="False" scheme="hdf5" type="[table]" uuid="{67455b5f-ed1a-4cd2-8ecd-7440eec8685d}">
            <label>OutTable</label>
            <description>OutTable</description>
          </output>
        </ports>
      </node>
      <node height="50.0" id="com.vcc.CDE.selectsignal" uuid="{1091084c-cc48-42a4-8d13-b9807b91eb83}" width="50.0" x="1550.0" y="1725.0">
        <label>Select signal</label>
        <description>Select signal</description>
        <author>Magnus Sand&#233;n</author>
        <copyright>(c) Copyright 2015 Volvo Cars Coorporation</copyright>
        <version>1.0</version>
        <parameters type="json"><![CDATA[{"signal": {"description": "Samples where this mask is False will be removed.", "passthrough": false, "list": ["Resampled raster", "KatDiag_Enable", "Exh_tSim1Fld_mp", "OxiCat_mHCMonPas_mp", "OxiCat_facHCCnvRat"], "value": [1], "label": "Select mask:", "editor": {"type": "combobox"}, "value_names": ["KatDiag_Enable"], "type": "list", "order": 0}, "type": "group"}]]></parameters>
        <ports>
          <input key="in" requiresdata="False" scheme="hdf5" type="[table]" uuid="{e3465359-f728-4763-9fff-0dc5a68d2a9b}">
            <label>None</label>
            <description>None</description>
          </input>
          <output key="out" requiresdata="False" scheme="hdf5" type="table" uuid="{495f9d8a-f64f-4afd-b17c-4e4b8fc380a8}">
            <label>None</label>
            <description>None</description>
          </output>
        </ports>
      </node>
      <node height="50.0" id="org.sysess.sympathy.data.table.table2tables" uuid="{1308b484-844a-41d1-8438-3542dbb0e4ca}" width="50.0" x="1700.0" y="1800.0">
        <label>Table to Tables</label>
        <description>Convert a single Table item to a list of Tables.</description>
        <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
        <copyright>(c) 2013 Combine AB</copyright>
        <version>0.1</version>
        <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
        <ports>
          <input key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{5a90d74c-5896-48b0-b949-dbb4e45e31fb}">
            <label>Table</label>
            <description>Table</description>
          </input>
          <output key="port1" requiresdata="False" scheme="hdf5" type="[table]" uuid="{c0884d26-9432-45fb-a7d1-5e72500fa34f}">
            <label>OutTable</label>
            <description>OutTable</description>
          </output>
        </ports>
      </node>
      <node height="50.0" id="org.sysess.sympathy.data.table.hjointable" uuid="{5685ef3e-74b7-4a6d-ade0-2062510f1b15}" width="50.0" x="2100.0" y="1725.0">
        <label>HJoin Table</label>
        <description>Horizontal join of two Tables</description>
        <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
        <copyright>(C) 2013 System Engineering Software Society</copyright>
        <version>1.0</version>
        <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
        <ports>
          <input key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{14114aa1-ce23-43a2-a6ca-1fae9caed8d8}">
            <label>Table1</label>
            <description>Table1</description>
          </input>
          <input key="port2" requiresdata="False" scheme="hdf5" type="table" uuid="{689f96cb-6b18-476d-aa79-a8382d5541c9}">
            <label>Table2</label>
            <description>Table2</description>
          </input>
          <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{ea7c4d18-0d16-4b2a-baed-0d3fc6501489}">
            <label>TableOutput</label>
            <description>TableOutput</description>
          </output>
        </ports>
      </node>
      <node height="50.0" id="org.sysess.sympathy.list.getitemtable" uuid="{acde8dff-181f-480c-b44e-a0316f2e136c}" width="50.0" x="1950.0" y="1800.0">
        <label>Get Item Table</label>
        <description>Get an item from a list</description>
        <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
        <copyright>(C) 2013 System Engineering Software Society</copyright>
        <version>1.0</version>
        <parameters type="json"><![CDATA[{"type": "group", "combo": {"description": "List indexes.", "passthrough": false, "list": ["0\t"], "value": [0], "label": "Index", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}}]]></parameters>
        <ports>
          <input key="port1" requiresdata="False" scheme="hdf5" type="[table]" uuid="{52623480-418e-4297-bc1e-f11b2142ac44}">
            <label>List</label>
            <description>List</description>
          </input>
          <output key="port3" requiresdata="False" scheme="hdf5" type="table" uuid="{e11889aa-a40b-40fc-beca-b87c0e1d305c}">
            <label>Item</label>
            <description>Item</description>
          </output>
        </ports>
      </node>
      <connection uuid="{237e8f82-23cd-43ee-8d33-ceba2e131944}">
        <source node="{1091084c-cc48-42a4-8d13-b9807b91eb83}" port="{495f9d8a-f64f-4afd-b17c-4e4b8fc380a8}"/>
        <destination node="{1308b484-844a-41d1-8438-3542dbb0e4ca}" port="{5a90d74c-5896-48b0-b949-dbb4e45e31fb}"/>
      </connection>
      <connection uuid="{256f60f3-ee13-4817-906d-fa333dfd4a27}">
        <source node="{4e54a35c-169d-405f-9649-ec881fcdc68b}" port="{6621508c-f463-451b-bf14-5e47d92f8def}"/>
        <destination node="{1091084c-cc48-42a4-8d13-b9807b91eb83}" port="{e3465359-f728-4763-9fff-0dc5a68d2a9b}"/>
      </connection>
      <connection uuid="{4d1ca324-04d0-4745-8308-c724b56dbf3d}">
        <source node="{1091084c-cc48-42a4-8d13-b9807b91eb83}" port="{495f9d8a-f64f-4afd-b17c-4e4b8fc380a8}"/>
        <destination node="{5685ef3e-74b7-4a6d-ade0-2062510f1b15}" port="{14114aa1-ce23-43a2-a6ca-1fae9caed8d8}"/>
      </connection>
      <connection uuid="{53e36230-cb22-41ea-a4f7-e0d1356f0479}">
        <source node="{5685ef3e-74b7-4a6d-ade0-2062510f1b15}" port="{ea7c4d18-0d16-4b2a-baed-0d3fc6501489}"/>
        <destination node="{4e54a35c-169d-405f-9649-ec881fcdc68b}" port="{3523d25e-0c28-4808-86e6-4956948e9b33}"/>
      </connection>
      <connection uuid="{77caa0ed-9a45-4a87-b11c-d73b404720fd}">
        <source node="{0acb2c0d-9270-48c8-b360-60e10ef78bde}" port="{67455b5f-ed1a-4cd2-8ecd-7440eec8685d}"/>
        <destination node="{acde8dff-181f-480c-b44e-a0316f2e136c}" port="{52623480-418e-4297-bc1e-f11b2142ac44}"/>
      </connection>
      <connection uuid="{a3299fae-d531-483b-b606-56eebc316efd}">
        <source node="{1308b484-844a-41d1-8438-3542dbb0e4ca}" port="{c0884d26-9432-45fb-a7d1-5e72500fa34f}"/>
        <destination node="{0acb2c0d-9270-48c8-b360-60e10ef78bde}" port="{ad7c4962-4426-4fbb-87bb-004c1c893d9e}"/>
      </connection>
      <connection uuid="{c5137509-5e29-405c-b4aa-8994ecdf9de1}">
        <source node="{acde8dff-181f-480c-b44e-a0316f2e136c}" port="{e11889aa-a40b-40fc-beca-b87c0e1d305c}"/>
        <destination node="{5685ef3e-74b7-4a6d-ade0-2062510f1b15}" port="{689f96cb-6b18-476d-aa79-a8382d5541c9}"/>
      </connection>
    </flow>
    <flow cls="Flow" height="50.0" id="" is_locked="False" uuid="{82efa087-28e0-4db9-9b62-491f8fe84f57}" width="50.0" x="2225.0" y="1775.0">
      <label>Calculation string</label>
      <description></description>
      <author>Unknown</author>
      <copyright></copyright>
      <version>1.0</version>
      <source></source>
      <ports>
        <input height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{03713e09-5996-4c12-ba3b-814b10e2845f}" width="50.0" x="2075.0" y="1525.0">
          <label>Port</label>
          <description>Port</description>
        </input>
        <input height="50.0" index="1" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="[table]" uuid="{199539e2-22b9-4d62-a4ef-d46b87e956ab}" width="50.0" x="2075.0" y="1625.0">
          <label>Port</label>
          <description>Port</description>
        </input>
        <output height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{67d5c9e6-9646-4d43-937e-4323324044d3}" width="50.0" x="2950.0" y="1575.0">
          <label>Port</label>
          <description>Port</description>
        </output>
      </ports>
      <aggregation type="json"><![CDATA[null]]></aggregation>
      <parameters type="json"><![CDATA[{"environment": {}}]]></parameters>
      <node height="50.0" id="org.sysess.sympathy.data.table.getcolumnattrtable" uuid="{2645f379-0c51-4f48-9c8f-f47ea9375be8}" width="50.0" x="2525.0" y="1575.0">
        <label>Get Column Attribute Table</label>
        <description></description>
        <author>Daniel Hedendahl &lt;daniel.hedendahl@combine.se&gt;</author>
        <copyright>(C) 2014 System Engineering Software Society</copyright>
        <version>1.0</version>
        <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
        <ports>
          <input key="Input" requiresdata="False" scheme="hdf5" type="table" uuid="{8180dd2a-e399-46fa-88c5-2d3475ccba7a}">
            <label>Input</label>
            <description>Input</description>
          </input>
          <output key="Output" requiresdata="False" scheme="hdf5" type="table" uuid="{75906f95-8b80-4329-8ea3-990b3e77f957}">
            <label>Output</label>
            <description>Output</description>
          </output>
        </ports>
      </node>
      <node height="50.0" id="org.sysess.sympathy.data.table.tablevaluesearchreplace" uuid="{2d6c9c71-e7f1-46e7-ad82-0d972e1d5700}" width="50.0" x="2825.0" y="1575.0">
        <label>Replace values in Table</label>
        <description>Search and replace values in Table.</description>
        <author>Greger Cronquist &lt;greger.cronquist@sysess.org&gt;</author>
        <copyright>(c) 2013 System Engineering Software Society</copyright>
        <version>1.0</version>
        <parameters type="json"><![CDATA[{"default": {"description": "Specify default value", "value": "", "label": "Default value", "editor": null, "type": "string", "order": 4}, "replace": {"description": "Specify replace expression.", "value": "", "label": "Replacement expression", "editor": null, "type": "string", "order": 2}, "use_default": {"description": "Use default value when not found.", "value": false, "label": "Use default", "editor": null, "type": "boolean", "order": 3}, "type": "group", "find": {"description": "Specify search expression.", "value": "^\\$\\{.*\\} = ", "label": "Search expression", "editor": null, "type": "string", "order": 1}, "columns": {"description": "Select the columns to use perform replacement on", "passthrough": false, "list": ["DATASET_calculation"], "value": [0], "label": "Select columns", "editor": {"filter": true, "selection": "multi", "type": "listview"}, "value_names": ["DATASET_calculation"], "type": "list", "order": 0}}]]></parameters>
        <ports>
          <input key="table" requiresdata="False" scheme="hdf5" type="table" uuid="{90ac6f7f-6703-4278-ae50-1520d6187133}">
            <label>Input</label>
            <description>Input</description>
          </input>
          <output key="table" requiresdata="False" scheme="hdf5" type="table" uuid="{3d62fc18-6000-47af-b073-a0224d95a0bb}">
            <label>Output</label>
            <description>Output</description>
          </output>
        </ports>
      </node>
      <node height="50.0" id="org.sysess.sympathy.list.getitemtable" uuid="{56e3b950-7aff-4a7c-8e4a-ae8672a61d81}" width="50.0" x="2375.0" y="1575.0">
        <label>Get Item Table</label>
        <description>Get an item from a list</description>
        <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
        <copyright>(C) 2013 System Engineering Software Society</copyright>
        <version>1.0</version>
        <parameters type="json"><![CDATA[{"type": "group", "combo": {"description": "List indexes.", "passthrough": false, "list": ["0\tResampled raster", "1\tResampled raster", "2\tResampled raster", "3\tResampled raster", "4\tResampled raster", "5\tResampled raster", "6\tResampled raster", "7\tResampled raster", "8\tResampled raster", "9\tResampled raster", "10\tResampled raster", "11\tResampled raster", "12\tResampled raster", "13\tResampled raster", "14\tResampled raster", "15\tResampled raster", "16\tResampled raster", "17\tResampled raster", "18\tResampled raster", "19\tResampled raster", "20\tResampled raster", "21\tResampled raster", "22\tResampled raster", "23\tResampled raster"], "value": [0], "label": "Index", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}}]]></parameters>
        <ports>
          <input key="port1" requiresdata="False" scheme="hdf5" type="[table]" uuid="{530927f3-fac7-45f5-94b5-27f7383396ec}">
            <label>List</label>
            <description>List</description>
          </input>
          <output key="port3" requiresdata="False" scheme="hdf5" type="table" uuid="{83625542-6f23-480e-87ea-2fa0150fead7}">
            <label>Item</label>
            <description>Item</description>
          </output>
        </ports>
      </node>
      <node height="50.0" id="org.sysess.sympathy.data.table.renamesingletablecolumns" uuid="{9c899d4e-a496-4512-90c3-733ace24b60c}" width="50.0" x="2675.0" y="1575.0">
        <label>Rename columns in Table</label>
        <description>Rename the Table columns by using regular expressions.</description>
        <author>Greger Cronquist &lt;greger.cronquist@sysess.org&gt;</author>
        <copyright>(c) 2013 System Engineering Software Society</copyright>
        <version>1.0</version>
        <parameters type="json"><![CDATA[{"src_expr": {"description": "Specify the regular expression which will be replaced", "value": "^.*:calculation$", "label": "Search expression", "editor": null, "type": "string", "order": 0}, "dst_expr": {"description": "Specify the regular expression for replacement", "value": "DATASET_calculation", "label": "Replacement expression", "editor": null, "type": "string", "order": 1}, "type": "group"}]]></parameters>
        <ports>
          <input key="Input" requiresdata="False" scheme="hdf5" type="table" uuid="{449bcd8b-3319-4e01-89a9-df3bea19ccb0}">
            <label>Input</label>
            <description>Input</description>
          </input>
          <output key="Output" requiresdata="False" scheme="hdf5" type="table" uuid="{86caf33b-fc59-4247-abb9-34f22c053d7a}">
            <label>Output</label>
            <description>Output</description>
          </output>
        </ports>
      </node>
      <node height="50.0" id="org.sysess.sympathy.data.table.selecttablecolumnsfromtables" uuid="{bdcd788a-8032-4344-bc34-2f7599213794}" width="50.0" x="2225.0" y="1575.0">
        <label>Select columns in Tables with Table</label>
        <description>Select columns in Tables by using column in selection Table.</description>
        <author>Greger Cronquist &lt;greger.cronquist@sysess.org&gt;, Erik der Hagopian &lt;erik.hagopian@sysess.org&gt;</author>
        <copyright>(c) 2013 System Engineering Software Society</copyright>
        <version>1.0</version>
        <parameters type="json"><![CDATA[{"complement": {"description": "When enabled, the selected columns will be removed. When disabled, the non-selected columns will be removed.", "value": false, "label": "Remove selected columns", "editor": null, "type": "boolean", "order": 0}, "selection_column": {"description": "Select column in Selection Table used for column name filtration.", "passthrough": false, "list": ["colnames", "operators", "value"], "value": [0], "label": "Column with column names", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 1}, "type": "group"}]]></parameters>
        <ports>
          <input key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{a47205fb-ae40-4307-9c9c-3037c5ce7904}">
            <label>Selection</label>
            <description>Selection</description>
          </input>
          <input key="port2" requiresdata="False" scheme="hdf5" type="[table]" uuid="{1ebf3b26-67f1-4cb4-bffc-49218b5a4e6d}">
            <label>TablesInput</label>
            <description>TablesInput</description>
          </input>
          <output key="port1" requiresdata="False" scheme="hdf5" type="[table]" uuid="{6aa1c027-e8cd-4f0d-b89f-b4e007fe7600}">
            <label>TablesOutput</label>
            <description>TablesOutput</description>
          </output>
        </ports>
      </node>
      <connection uuid="{0786b2b9-966f-4f05-97a3-05bbe5e40402}">
        <source node="{56e3b950-7aff-4a7c-8e4a-ae8672a61d81}" port="{83625542-6f23-480e-87ea-2fa0150fead7}"/>
        <destination node="{2645f379-0c51-4f48-9c8f-f47ea9375be8}" port="{8180dd2a-e399-46fa-88c5-2d3475ccba7a}"/>
      </connection>
      <connection uuid="{10263d33-44f0-4ec5-a7ae-14dd327c6e1e}">
        <source node="{2645f379-0c51-4f48-9c8f-f47ea9375be8}" port="{75906f95-8b80-4329-8ea3-990b3e77f957}"/>
        <destination node="{9c899d4e-a496-4512-90c3-733ace24b60c}" port="{449bcd8b-3319-4e01-89a9-df3bea19ccb0}"/>
      </connection>
      <connection uuid="{730cf9e2-8b22-4e45-ad7d-cc7b867cb671}">
        <source node="{9c899d4e-a496-4512-90c3-733ace24b60c}" port="{86caf33b-fc59-4247-abb9-34f22c053d7a}"/>
        <destination node="{2d6c9c71-e7f1-46e7-ad82-0d972e1d5700}" port="{90ac6f7f-6703-4278-ae50-1520d6187133}"/>
      </connection>
      <connection uuid="{7e61b160-c123-448c-a27f-5ba46c05bf8e}">
        <source node="{82efa087-28e0-4db9-9b62-491f8fe84f57}" port="{03713e09-5996-4c12-ba3b-814b10e2845f}"/>
        <destination node="{bdcd788a-8032-4344-bc34-2f7599213794}" port="{a47205fb-ae40-4307-9c9c-3037c5ce7904}"/>
      </connection>
      <connection uuid="{ac1c83eb-11cd-47b6-bf11-657c77f0a2e4}">
        <source node="{82efa087-28e0-4db9-9b62-491f8fe84f57}" port="{199539e2-22b9-4d62-a4ef-d46b87e956ab}"/>
        <destination node="{bdcd788a-8032-4344-bc34-2f7599213794}" port="{1ebf3b26-67f1-4cb4-bffc-49218b5a4e6d}"/>
      </connection>
      <connection uuid="{c15aa29d-54fe-41fc-8674-c18755991276}">
        <source node="{2d6c9c71-e7f1-46e7-ad82-0d972e1d5700}" port="{3d62fc18-6000-47af-b073-a0224d95a0bb}"/>
        <destination node="{82efa087-28e0-4db9-9b62-491f8fe84f57}" port="{67d5c9e6-9646-4d43-937e-4323324044d3}"/>
      </connection>
      <connection uuid="{db635f11-c5f6-4bb0-9ca6-a427c8a8d104}">
        <source node="{bdcd788a-8032-4344-bc34-2f7599213794}" port="{6aa1c027-e8cd-4f0d-b89f-b4e007fe7600}"/>
        <destination node="{56e3b950-7aff-4a7c-8e4a-ae8672a61d81}" port="{530927f3-fac7-45f5-94b5-27f7383396ec}"/>
      </connection>
    </flow>
    <flow cls="Flow" height="50.0" id="" is_locked="False" uuid="{ba46da78-1dac-43f3-879d-383dab242170}" width="50.0" x="2225.0" y="1675.0">
      <label>Original signal length</label>
      <description></description>
      <author>Unknown</author>
      <copyright></copyright>
      <version>1.0</version>
      <source></source>
      <ports>
        <input height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="[adaf]" uuid="{f0a4ba16-4856-45bf-9839-5c24e58b2ee8}" width="50.0" x="2200.0" y="1825.0">
          <label>Port</label>
          <description>Port</description>
        </input>
        <output height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{e8548c42-7ef0-40d2-8c74-ed14f5d52a9e}" width="50.0" x="3100.0" y="1825.0">
          <label>Port</label>
          <description>Port</description>
        </output>
      </ports>
      <aggregation type="json"><![CDATA[{}]]></aggregation>
      <parameters type="json"><![CDATA[{"environment": {}, "data": {}, "type": "json"}]]></parameters>
      <flow cls="Lambda" height="50.0" id="" is_locked="False" uuid="{2654fe3b-d6b8-4e08-8687-8a92576c5e2c}" width="50.0" x="2600.0" y="1700.0">
        <label>Zero signal
length</label>
        <description></description>
        <author>Unknown</author>
        <copyright></copyright>
        <version>1.0</version>
        <source></source>
        <ports>
          <input height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="[table]" uuid="{b9a06c69-b619-4985-88d0-14685d1fbd96}" width="50.0" x="1900.0" y="2000.0">
            <label>Port</label>
            <description>Port</description>
          </input>
          <output height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="[table]" uuid="{6a7a9062-962c-4f89-a6e0-0ad0c580932c}" width="50.0" x="2100.0" y="2000.0">
            <label>Port</label>
            <description>Port</description>
          </output>
        </ports>
        <basic_ports>
          <output key="Function" requiresdata="False" scheme="hdf5" type="[table] -&gt; [table]" uuid="{20a9e110-5f1f-4875-8607-267156c39c29}">
            <label>Lambda function</label>
            <description>Lambda function</description>
          </output>
        </basic_ports>
        <aggregation type="json"><![CDATA[null]]></aggregation>
        <parameters type="json"><![CDATA[{"environment": {}}]]></parameters>
        <node height="50.0" id="org.sysess.sympathy.data.table.calculator" uuid="{e34e313e-037e-4047-861c-73e596fc16ad}" width="50.0" x="2000.0" y="2000.0">
          <label>Calculator</label>
          <description>Performs user-defined python calculations</description>
          <author>Greger Cronquist &lt;greger.cronquist@sysess.org&gt;, Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;, Sara Gustafzelius &lt;sara.gustafzelius@combine.se&gt;</author>
          <copyright>(c) 2012 Combine AB</copyright>
          <version>2.0</version>
          <parameters type="json"><![CDATA[{"same_length_res": {"description": "Gather all the results generated from an incoming Table into a common output table. This requires that the results all have the same length. An error will be given if the lengths of the outgoing results differ.", "value": true, "label": "Put results in common outputs.", "editor": null, "type": "boolean", "order": 1}, "column_names": {"description": "", "passthrough": false, "list": [], "value": [0], "label": "", "editor": null, "value_names": ["original_signal_length"], "type": "list", "order": 0}, "type": "group", "calc_list": {"description": "List of calculations.", "passthrough": false, "list": ["${DATASET_original_signal_length} = 0"], "value": [0], "label": "List of calculations", "editor": null, "value_names": [], "type": "list", "order": 0}}]]></parameters>
          <ports>
            <input key="port0" requiresdata="False" scheme="hdf5" type="[table]" uuid="{14e03dbf-33cb-4286-bd32-9f56ca857628}">
              <label>Table</label>
              <description>Table</description>
            </input>
            <output key="port1" requiresdata="False" scheme="hdf5" type="[table]" uuid="{839aa7f5-fbdb-4f85-a394-14e06459d1b1}">
              <label>OutTable</label>
              <description>OutTable</description>
            </output>
          </ports>
        </node>
        <connection uuid="{4df6aed8-2409-4a77-b218-4c0d6228c6a0}">
          <source node="{e34e313e-037e-4047-861c-73e596fc16ad}" port="{839aa7f5-fbdb-4f85-a394-14e06459d1b1}"/>
          <destination node="{2654fe3b-d6b8-4e08-8687-8a92576c5e2c}" port="{6a7a9062-962c-4f89-a6e0-0ad0c580932c}"/>
        </connection>
        <connection uuid="{8afee487-dc71-4773-b939-025502e05fde}">
          <source node="{2654fe3b-d6b8-4e08-8687-8a92576c5e2c}" port="{b9a06c69-b619-4985-88d0-14685d1fbd96}"/>
          <destination node="{e34e313e-037e-4047-861c-73e596fc16ad}" port="{14e03dbf-33cb-4286-bd32-9f56ca857628}"/>
        </connection>
      </flow>
      <flow cls="Lambda" height="50.0" id="" is_locked="False" uuid="{7418c624-ab46-45e6-8b1f-0d19afc0cb2c}" width="50.0" x="2600.0" y="1600.0">
        <label>Sum of signal
lengths</label>
        <description></description>
        <author>Unknown</author>
        <copyright></copyright>
        <version>1.0</version>
        <source></source>
        <ports>
          <input height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="[table]" uuid="{16c6fa6d-c885-4e42-b054-69c0ac6d9c1c}" width="50.0" x="1900.0" y="2000.0">
            <label>Port</label>
            <description>Port</description>
          </input>
          <output height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="[table]" uuid="{f2a9c25f-0966-49a6-a868-25d4742a90d1}" width="50.0" x="2100.0" y="2000.0">
            <label>Port</label>
            <description>Port</description>
          </output>
        </ports>
        <basic_ports>
          <output key="Function" requiresdata="False" scheme="hdf5" type="[table] -&gt; [table]" uuid="{90aefa5c-248a-4206-b5b5-c16012484a8a}">
            <label>Lambda function</label>
            <description>Lambda function</description>
          </output>
        </basic_ports>
        <aggregation type="json"><![CDATA[null]]></aggregation>
        <parameters type="json"><![CDATA[{"environment": {}}]]></parameters>
        <node height="50.0" id="org.sysess.sympathy.data.table.calculator" uuid="{b4166e58-cc26-4703-b28e-2adff06b4411}" width="50.0" x="2000.0" y="2000.0">
          <label>Calculator</label>
          <description>Performs user-defined python calculations</description>
          <author>Greger Cronquist &lt;greger.cronquist@sysess.org&gt;, Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;, Sara Gustafzelius &lt;sara.gustafzelius@combine.se&gt;</author>
          <copyright>(c) 2012 Combine AB</copyright>
          <version>2.0</version>
          <parameters type="json"><![CDATA[{"same_length_res": {"description": "Gather all the results generated from an incoming Table into a common output table. This requires that the results all have the same length. An error will be given if the lengths of the outgoing results differ.", "value": true, "label": "Put results in common outputs.", "editor": null, "type": "boolean", "order": 1}, "column_names": {"description": "", "passthrough": false, "list": [], "value": [0], "label": "", "editor": null, "value_names": ["original_signal_length"], "type": "list", "order": 0}, "type": "group", "calc_list": {"description": "List of calculations.", "passthrough": false, "list": ["${DATASET_original_signal_length} = sum(${original_signal_length})"], "value": [0], "label": "List of calculations", "editor": null, "value_names": [], "type": "list", "order": 0}}]]></parameters>
          <ports>
            <input key="port0" requiresdata="False" scheme="hdf5" type="[table]" uuid="{481ef9ca-1ac8-469c-89b3-ce32cf306467}">
              <label>Table</label>
              <description>Table</description>
            </input>
            <output key="port1" requiresdata="False" scheme="hdf5" type="[table]" uuid="{aae295be-b7e9-4178-9bff-e0519eb246df}">
              <label>OutTable</label>
              <description>OutTable</description>
            </output>
          </ports>
        </node>
        <connection uuid="{5de45102-32c7-43ce-970e-99b424fe791b}">
          <source node="{7418c624-ab46-45e6-8b1f-0d19afc0cb2c}" port="{16c6fa6d-c885-4e42-b054-69c0ac6d9c1c}"/>
          <destination node="{b4166e58-cc26-4703-b28e-2adff06b4411}" port="{481ef9ca-1ac8-469c-89b3-ce32cf306467}"/>
        </connection>
        <connection uuid="{a1f819c4-6a6a-4d5f-981a-24cec975b710}">
          <source node="{b4166e58-cc26-4703-b28e-2adff06b4411}" port="{aae295be-b7e9-4178-9bff-e0519eb246df}"/>
          <destination node="{7418c624-ab46-45e6-8b1f-0d19afc0cb2c}" port="{f2a9c25f-0966-49a6-a868-25d4742a90d1}"/>
        </connection>
      </flow>
      <node height="50.0" id="org.sysess.sympathy.list.eitherwithdatapredicate" uuid="{01e4bea9-f01c-49d4-b7fe-d1ea68f1c916}" width="50.0" x="2725.0" y="1700.0">
        <label>Either with Data Predicate</label>
        <description>Either of inputs using predicate and data to compare.</description>
        <author>Erik der Hagopian &lt;erik.hagopian@sysess.org&gt;</author>
        <copyright>(C) 2015 System Engineering Software Society</copyright>
        <version>1.0</version>
        <parameters type="json"><![CDATA[{"predicate": {"description": "Either predicate function", "value": "lambda x: x.number_of_rows()", "label": "Either predicate function", "editor": null, "type": "string", "order": 0}, "type": "group"}]]></parameters>
        <ports>
          <input key="true" requiresdata="False" scheme="hdf5" type="[table] -&gt; [table]" uuid="{399b4695-f9a0-4885-ac16-8acd19258fb6}">
            <label>First, returned if predicate held true</label>
            <description>First, returned if predicate held true</description>
          </input>
          <input key="false" requiresdata="False" scheme="hdf5" type="[table] -&gt; [table]" uuid="{f832ba11-df63-4b90-81eb-393dfdae69f0}">
            <label>Second, returned if predicate did not hold true</label>
            <description>Second, returned if predicate did not hold true</description>
          </input>
          <input key="data" requiresdata="False" scheme="hdf5" type="table" uuid="{341a2a49-0a0d-4233-853a-84063a72bfb0}">
            <label>Data for the predicate comparison</label>
            <description>Data for the predicate comparison</description>
          </input>
          <output key="output" requiresdata="False" scheme="hdf5" type="[table] -&gt; [table]" uuid="{06ec2f23-f756-49bf-ad43-74c995ef3e7a}">
            <label>Output, First if the predicate holds true otherwise Second</label>
            <description>Output, First if the predicate holds true otherwise Second</description>
          </output>
        </ports>
      </node>
      <node height="50.0" id="org.sysess.sympathy.data.table.vjointablenodes" uuid="{13e624d2-188f-45c7-98e3-9a4c6344d390}" width="50.0" x="2600.0" y="1825.0">
        <label>VJoin Tables</label>
        <description>Vertical join of Tables.</description>
        <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
        <copyright>(C) 2012 System Engineering Software Society</copyright>
        <version>1.0</version>
        <parameters type="json"><![CDATA[{"output_index": {"description": "Specify name for output index column. Can be left empty.", "value": "VJoin-index", "label": "Output index", "editor": null, "type": "string", "order": 2}, "fill": {"description": "Select if columns that are not represented in all Tables to be complemented with either NaNs or empty strings.", "value": false, "label": "Complement missing columns", "editor": null, "type": "boolean", "order": 1}, "type": "group", "minimum_increment": {"description": "Specify the increment in the outgoing index column at the existence of tables with the number of rows equal to zero.", "value": 1, "label": "Increment in index column", "editor": {"max": 1, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}}]]></parameters>
        <ports>
          <input key="port1" requiresdata="False" scheme="hdf5" type="[table]" uuid="{97b0d799-7e13-41ea-9e93-582f9af24e40}">
            <label>Tables</label>
            <description>Tables</description>
          </input>
          <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{5daba261-6c49-4e13-af42-2aef223b1306}">
            <label>TableOutput</label>
            <description>TableOutput</description>
          </output>
        </ports>
      </node>
      <node height="50.0" id="org.sysess.sympathy.data.adaf.adafs2tables" uuid="{1569778b-e298-43de-ab82-65af6c021873}" width="50.0" x="2350.0" y="1825.0">
        <label>ADAFs to Tables</label>
        <description>Elementwise export of data from list of ADAFs to a list of Tables.</description>
        <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
        <copyright>(C) 2013 System Engineering Software Society</copyright>
        <version>1.0</version>
        <parameters type="json"><![CDATA[{"type": "group", "export_group": {"description": "Group to export.", "passthrough": false, "list": ["Meta", "Result", "Time series"], "value": [2], "label": "Export group", "editor": {"type": "combobox"}, "value_names": ["Time series"], "type": "list", "order": 0}, "tb": {"description": "", "passthrough": false, "list": ["Resampled system/Resampled raster/"], "value": [0], "label": "Time basis raster", "editor": {"filter": true, "type": "listview"}, "value_names": ["Resampled system/Resampled raster/"], "type": "list", "order": 1}, "tb_col_name": {"description": "", "value": "Resampled raster", "label": "Time basis column name", "editor": null, "type": "string", "order": 2}}]]></parameters>
        <ports>
          <input key="port1" requiresdata="False" scheme="hdf5" type="[adaf]" uuid="{30f9c01a-75c7-4009-ac66-0d5a6c3bf6dd}">
            <label>ADAF</label>
            <description>ADAF</description>
          </input>
          <output key="port1" requiresdata="False" scheme="hdf5" type="[table]" uuid="{f88221eb-da29-45a2-b3ad-76c6f1ef27ea}">
            <label>Table</label>
            <description>Table</description>
          </output>
        </ports>
      </node>
      <node height="50.0" id="org.sysess.sympathy.data.table.table2tables" uuid="{715fd4de-7dcd-473a-9f22-ed4fd3fd639d}" width="50.0" x="2725.0" y="1825.0">
        <label>Table to Tables</label>
        <description>Convert a single Table item to a list of Tables.</description>
        <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
        <copyright>(c) 2013 Combine AB</copyright>
        <version>0.1</version>
        <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
        <ports>
          <input key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{73d8af1c-3921-4ebd-90ca-b4949a259c5b}">
            <label>Table</label>
            <description>Table</description>
          </input>
          <output key="port1" requiresdata="False" scheme="hdf5" type="[table]" uuid="{43c085f2-b640-4d51-8156-f434001987e7}">
            <label>OutTable</label>
            <description>OutTable</description>
          </output>
        </ports>
      </node>
      <node height="50.0" id="org.sysess.builtin.apply" uuid="{86179b48-0557-4030-8193-de8812812220}" width="50.0" x="2850.0" y="1825.0">
        <label>Apply</label>
        <description>Apply Lambda function to Argument</description>
        <author>SysESS</author>
        <copyright>See about dialog</copyright>
        <version>See about dialog</version>
        <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
        <ports>
          <input key="Function" requiresdata="False" scheme="hdf5" type="[table] -&gt; [table]" uuid="{2d044032-e4a4-4544-bdd9-1483b562d806}">
            <label>Lambda Function to Apply</label>
            <description>Lambda Function to Apply</description>
          </input>
          <input key="Argument" requiresdata="False" scheme="hdf5" type="[table]" uuid="{45891495-ec8d-4f93-93ec-4cca1390657e}">
            <label>Argument</label>
            <description>Argument</description>
          </input>
          <output key="Output" requiresdata="False" scheme="hdf5" type="[table]" uuid="{8e405e95-13ef-403b-8149-0accecb4a495}">
            <label>Output</label>
            <description>Output</description>
          </output>
        </ports>
      </node>
      <node height="50.0" id="org.sysess.sympathy.data.table.calculator" uuid="{c382bb65-8da7-47ba-93a2-1d31ec913572}" width="50.0" x="2475.0" y="1825.0">
        <label>Calculator</label>
        <description>Performs user-defined python calculations</description>
        <author>Greger Cronquist &lt;greger.cronquist@sysess.org&gt;, Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;, Sara Gustafzelius &lt;sara.gustafzelius@combine.se&gt;</author>
        <copyright>(c) 2012 Combine AB</copyright>
        <version>2.0</version>
        <parameters type="json"><![CDATA[{"same_length_res": {"description": "Gather all the results generated from an incoming Table into a common output table. This requires that the results all have the same length. An error will be given if the lengths of the outgoing results differ.", "value": true, "label": "Put results in common outputs.", "editor": null, "type": "boolean", "order": 1}, "column_names": {"description": "", "passthrough": false, "list": ["Exh_tSim1Fld_mp", "KatDiag_Enable", "OxiCat_facHCCnvRat", "OxiCat_mHCMonPas_mp", "Resampled raster"], "value": [0], "label": "", "editor": null, "value_names": ["Exh_tSim1Fld_mp"], "type": "list", "order": 0}, "type": "group", "calc_list": {"description": "List of calculations.", "passthrough": false, "list": ["${original_signal_length} = ${Resampled raster}.size"], "value": [0], "label": "List of calculations", "editor": null, "value_names": [], "type": "list", "order": 0}}]]></parameters>
        <ports>
          <input key="port0" requiresdata="False" scheme="hdf5" type="[table]" uuid="{9ff754b6-8a81-454a-bd08-8c7f76cff200}">
            <label>Table</label>
            <description>Table</description>
          </input>
          <output key="port1" requiresdata="False" scheme="hdf5" type="[table]" uuid="{ea745d56-4115-4927-b7ba-ba8cf6bce991}">
            <label>OutTable</label>
            <description>OutTable</description>
          </output>
        </ports>
      </node>
      <node height="50.0" id="org.sysess.sympathy.list.getitemtable" uuid="{e06733ae-0787-4aff-b0a3-76a425ce9e5e}" width="50.0" x="2975.0" y="1825.0">
        <label>Get Item Table</label>
        <description>Get an item from a list</description>
        <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
        <copyright>(C) 2013 System Engineering Software Society</copyright>
        <version>1.0</version>
        <parameters type="json"><![CDATA[{"type": "group", "combo": {"description": "List indexes.", "passthrough": false, "list": ["0\t"], "value": [0], "label": "Index", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}}]]></parameters>
        <ports>
          <input key="port1" requiresdata="False" scheme="hdf5" type="[table]" uuid="{152c42ee-015c-4bc8-b6cb-b3295526caef}">
            <label>List</label>
            <description>List</description>
          </input>
          <output key="port3" requiresdata="False" scheme="hdf5" type="table" uuid="{eb2ea361-c5d7-4696-a683-3fa0156473c4}">
            <label>Item</label>
            <description>Item</description>
          </output>
        </ports>
      </node>
      <connection uuid="{1937e597-8ff3-4b54-b5c5-6b21f8cc6642}">
        <source node="{7418c624-ab46-45e6-8b1f-0d19afc0cb2c}" port="{90aefa5c-248a-4206-b5b5-c16012484a8a}"/>
        <destination node="{01e4bea9-f01c-49d4-b7fe-d1ea68f1c916}" port="{399b4695-f9a0-4885-ac16-8acd19258fb6}"/>
      </connection>
      <connection uuid="{1b7ae724-995a-4f37-992e-2459943102ef}">
        <source node="{715fd4de-7dcd-473a-9f22-ed4fd3fd639d}" port="{43c085f2-b640-4d51-8156-f434001987e7}"/>
        <destination node="{86179b48-0557-4030-8193-de8812812220}" port="{45891495-ec8d-4f93-93ec-4cca1390657e}"/>
      </connection>
      <connection uuid="{2931ffa8-d708-47de-b612-2c390ee362d7}">
        <source node="{86179b48-0557-4030-8193-de8812812220}" port="{8e405e95-13ef-403b-8149-0accecb4a495}"/>
        <destination node="{e06733ae-0787-4aff-b0a3-76a425ce9e5e}" port="{152c42ee-015c-4bc8-b6cb-b3295526caef}"/>
      </connection>
      <connection uuid="{43a5903f-2d83-4055-b663-25dfd486608f}">
        <source node="{c382bb65-8da7-47ba-93a2-1d31ec913572}" port="{ea745d56-4115-4927-b7ba-ba8cf6bce991}"/>
        <destination node="{13e624d2-188f-45c7-98e3-9a4c6344d390}" port="{97b0d799-7e13-41ea-9e93-582f9af24e40}"/>
      </connection>
      <connection uuid="{4b7c8773-d640-4ad8-874a-6e32b37fc656}">
        <source node="{2654fe3b-d6b8-4e08-8687-8a92576c5e2c}" port="{20a9e110-5f1f-4875-8607-267156c39c29}"/>
        <destination node="{01e4bea9-f01c-49d4-b7fe-d1ea68f1c916}" port="{f832ba11-df63-4b90-81eb-393dfdae69f0}"/>
      </connection>
      <connection uuid="{66cc58cf-7a46-4300-83c4-817e8189de8a}">
        <source node="{1569778b-e298-43de-ab82-65af6c021873}" port="{f88221eb-da29-45a2-b3ad-76c6f1ef27ea}"/>
        <destination node="{c382bb65-8da7-47ba-93a2-1d31ec913572}" port="{9ff754b6-8a81-454a-bd08-8c7f76cff200}"/>
      </connection>
      <connection uuid="{a66e77c5-7943-4ec6-a08e-77e3a3de89f3}">
        <source node="{ba46da78-1dac-43f3-879d-383dab242170}" port="{f0a4ba16-4856-45bf-9839-5c24e58b2ee8}"/>
        <destination node="{1569778b-e298-43de-ab82-65af6c021873}" port="{30f9c01a-75c7-4009-ac66-0d5a6c3bf6dd}"/>
      </connection>
      <connection uuid="{cae86157-4ad2-4fb9-8991-f40c9b1f81e5}">
        <source node="{01e4bea9-f01c-49d4-b7fe-d1ea68f1c916}" port="{06ec2f23-f756-49bf-ad43-74c995ef3e7a}"/>
        <destination node="{86179b48-0557-4030-8193-de8812812220}" port="{2d044032-e4a4-4544-bdd9-1483b562d806}"/>
      </connection>
      <connection uuid="{d608fc57-5efe-4d30-a2f2-a6b73d20e18d}">
        <source node="{e06733ae-0787-4aff-b0a3-76a425ce9e5e}" port="{eb2ea361-c5d7-4696-a683-3fa0156473c4}"/>
        <destination node="{ba46da78-1dac-43f3-879d-383dab242170}" port="{e8548c42-7ef0-40d2-8c74-ed14f5d52a9e}"/>
      </connection>
      <connection uuid="{ec432d22-8331-48ef-abf1-308309b97ec4}">
        <source node="{13e624d2-188f-45c7-98e3-9a4c6344d390}" port="{5daba261-6c49-4e13-af42-2aef223b1306}"/>
        <destination node="{01e4bea9-f01c-49d4-b7fe-d1ea68f1c916}" port="{341a2a49-0a0d-4233-853a-84063a72bfb0}"/>
      </connection>
      <connection uuid="{fccf9861-6773-4c7f-b406-5de5c25de97e}">
        <source node="{13e624d2-188f-45c7-98e3-9a4c6344d390}" port="{5daba261-6c49-4e13-af42-2aef223b1306}"/>
        <destination node="{715fd4de-7dcd-473a-9f22-ed4fd3fd639d}" port="{73d8af1c-3921-4ebd-90ca-b4949a259c5b}"/>
      </connection>
    </flow>
    <flow cls="Flow" height="50.0" id="" is_locked="False" uuid="{e0bf9a25-eb10-4ea8-8901-286a8689ced3}" width="50.0" x="2650.0" y="1875.0">
      <label>Add metadata</label>
      <description></description>
      <author>Unknown</author>
      <copyright></copyright>
      <version>1.0</version>
      <source></source>
      <ports>
        <input height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{c211dbbd-d7ef-4e70-b5e6-2068820a3d43}" width="50.0" x="2300.0" y="1725.0">
          <label>Port</label>
          <description>Port</description>
        </input>
        <input height="50.0" index="1" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{7ec419a2-65a8-446e-b57d-1dca26625cb0}" width="50.0" x="2300.0" y="1800.0">
          <label>Port</label>
          <description>Port</description>
        </input>
        <input height="50.0" index="2" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{6d77f9ca-3297-4ee6-b0de-4ea457c43a1c}" width="50.0" x="2300.0" y="1900.0">
          <label>Port</label>
          <description>Port</description>
        </input>
        <input height="50.0" index="3" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="adaf" uuid="{779b5670-4c52-49f1-941b-825d8e2e6396}" width="50.0" x="2300.0" y="2000.0">
          <label>Port</label>
          <description>Port</description>
        </input>
        <output height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="adaf" uuid="{e11fa9f6-f5e3-4175-821f-1364b5cea2ed}" width="50.0" x="3200.0" y="2000.0">
          <label>Port</label>
          <description>Port</description>
        </output>
      </ports>
      <aggregation type="json"><![CDATA[null]]></aggregation>
      <parameters type="json"><![CDATA[{"environment": {}}]]></parameters>
      <flow cls="Flow" height="50.0" id="" is_locked="False" uuid="{969313b1-22cb-49fc-9862-f2b778a0ffcc}" width="50.0" x="2525.0" y="1950.0">
        <label>Minimum 1 row</label>
        <description></description>
        <author>Unknown</author>
        <copyright></copyright>
        <version>1.0</version>
        <source></source>
        <ports>
          <input height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{17410a91-e296-42d1-bad2-30c2deb343b3}" width="50.0" x="1650.0" y="1950.0">
            <label>Port</label>
            <description>Port</description>
          </input>
          <output height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{6debbfb3-c890-4e3b-ba9a-674f923c35c6}" width="50.0" x="1925.0" y="1925.0">
            <label>Port</label>
            <description>Port</description>
          </output>
        </ports>
        <aggregation type="json"><![CDATA[null]]></aggregation>
        <parameters type="json"><![CDATA[{"environment": {}}]]></parameters>
        <node height="50.0" id="org.sysess.sympathy.list.eitherwithdatapredicate" uuid="{c2c21cd7-a062-4b27-b974-f1e9e7ae3a32}" width="50.0" x="1825.0" y="1925.0">
          <label>Either with Data Predicate</label>
          <description>Either of inputs using predicate and data to compare.</description>
          <author>Erik der Hagopian &lt;erik.hagopian@sysess.org&gt;</author>
          <copyright>(C) 2015 System Engineering Software Society</copyright>
          <version>1.0</version>
          <parameters type="json"><![CDATA[{"predicate": {"description": "Either predicate function", "value": "lambda x: x.number_of_rows()", "label": "Either predicate function", "editor": null, "type": "string", "order": 0}, "type": "group"}]]></parameters>
          <ports>
            <input key="true" requiresdata="False" scheme="hdf5" type="table" uuid="{9167c947-e2bd-4281-9626-49797fb9087c}">
              <label>First, returned if predicate held true</label>
              <description>First, returned if predicate held true</description>
            </input>
            <input key="false" requiresdata="False" scheme="hdf5" type="table" uuid="{bc508f85-8a78-4434-afbd-8fdfb8e11562}">
              <label>Second, returned if predicate did not hold true</label>
              <description>Second, returned if predicate did not hold true</description>
            </input>
            <input key="data" requiresdata="False" scheme="hdf5" type="table" uuid="{fc30f515-4ab3-4010-93b3-66a527eefe4b}">
              <label>Data for the predicate comparison</label>
              <description>Data for the predicate comparison</description>
            </input>
            <output key="output" requiresdata="False" scheme="hdf5" type="table" uuid="{4edc418a-6e5f-4ce4-973a-50f3ec3529a5}">
              <label>Output, First if the predicate holds true otherwise Second</label>
              <description>Output, First if the predicate holds true otherwise Second</description>
            </output>
          </ports>
        </node>
        <node height="50.0" id="org.sysess.sympathy.random.randomtable" uuid="{e44396c0-76ea-48b7-9bfb-d116d6895b9f}" width="50.0" x="1550.0" y="1850.0">
          <label>Random Table</label>
          <description>Random Table generator.</description>
          <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
          <copyright>(c) 2013 Combine AB</copyright>
          <version>0.1</version>
          <parameters type="json"><![CDATA[{"column_length": {"description": "The length of columns to be generated.", "value": 1, "label": "Column length", "editor": {"max": 100000000, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 1}, "column_entries": {"description": "The number of column entries to be generated.", "value": 1, "label": "Column entries", "editor": {"max": 1000000, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "type": "group"}]]></parameters>
          <ports>
            <output key="port0" requiresdata="False" scheme="hdf5" type="table" uuid="{5e720697-7f18-4393-b1bd-05369b39d7f2}">
              <label>File</label>
              <description>File</description>
            </output>
          </ports>
        </node>
        <node height="50.0" id="org.sysess.sympathy.data.table.renamesingletablecolumns" uuid="{e44f8460-b499-4c5e-86c5-90616b9e67b1}" width="50.0" x="1650.0" y="1850.0">
          <label>Rename columns in Table</label>
          <description>Rename the Table columns by using regular expressions.</description>
          <author>Greger Cronquist &lt;greger.cronquist@sysess.org&gt;</author>
          <copyright>(c) 2013 System Engineering Software Society</copyright>
          <version>1.0</version>
          <parameters type="json"><![CDATA[{"src_expr": {"description": "Specify the regular expression which will be replaced", "value": "0", "label": "Search expression", "editor": null, "type": "string", "order": 0}, "dst_expr": {"description": "Specify the regular expression for replacement", "value": "__ensure_single_row__", "label": "Replacement expression", "editor": null, "type": "string", "order": 1}, "type": "group"}]]></parameters>
          <ports>
            <input key="Input" requiresdata="False" scheme="hdf5" type="table" uuid="{e9b80427-8e28-4a79-bef3-02bb631c85d2}">
              <label>Input</label>
              <description>Input</description>
            </input>
            <output key="Output" requiresdata="False" scheme="hdf5" type="table" uuid="{4d42f58f-5834-4ee0-965a-132b7e15e54b}">
              <label>Output</label>
              <description>Output</description>
            </output>
          </ports>
        </node>
        <connection uuid="{169e6ad0-413e-4f90-9ed3-793dbaa36559}">
          <source node="{e44396c0-76ea-48b7-9bfb-d116d6895b9f}" port="{5e720697-7f18-4393-b1bd-05369b39d7f2}"/>
          <destination node="{e44f8460-b499-4c5e-86c5-90616b9e67b1}" port="{e9b80427-8e28-4a79-bef3-02bb631c85d2}"/>
        </connection>
        <connection uuid="{5c958bce-809a-44a1-aabe-e89d8b904746}">
          <source node="{969313b1-22cb-49fc-9862-f2b778a0ffcc}" port="{17410a91-e296-42d1-bad2-30c2deb343b3}"/>
          <destination node="{c2c21cd7-a062-4b27-b974-f1e9e7ae3a32}" port="{9167c947-e2bd-4281-9626-49797fb9087c}"/>
        </connection>
        <connection uuid="{799fca53-6226-4908-b76a-cfc2c8abdece}">
          <source node="{e44f8460-b499-4c5e-86c5-90616b9e67b1}" port="{4d42f58f-5834-4ee0-965a-132b7e15e54b}"/>
          <destination node="{c2c21cd7-a062-4b27-b974-f1e9e7ae3a32}" port="{bc508f85-8a78-4434-afbd-8fdfb8e11562}"/>
        </connection>
        <connection uuid="{97b1507c-86cd-4a06-a401-83c1a0bd2b6a}">
          <source node="{969313b1-22cb-49fc-9862-f2b778a0ffcc}" port="{17410a91-e296-42d1-bad2-30c2deb343b3}"/>
          <destination node="{c2c21cd7-a062-4b27-b974-f1e9e7ae3a32}" port="{fc30f515-4ab3-4010-93b3-66a527eefe4b}"/>
        </connection>
        <connection uuid="{e6f35f5c-21ac-410f-b888-1862dd8826fb}">
          <source node="{c2c21cd7-a062-4b27-b974-f1e9e7ae3a32}" port="{4edc418a-6e5f-4ce4-973a-50f3ec3529a5}"/>
          <destination node="{969313b1-22cb-49fc-9862-f2b778a0ffcc}" port="{6debbfb3-c890-4e3b-ba9a-674f923c35c6}"/>
        </connection>
      </flow>
      <node height="50.0" id="org.sysess.sympathy.data.adaf.adaf2table" uuid="{070d2cb5-1461-4506-be6d-f263af8e3d9a}" width="50.0" x="2400.0" y="1950.0">
        <label>ADAF to Table</label>
        <description>Export of data from an ADAF to a Table.</description>
        <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
        <copyright>(C) 2013 System Engineering Software Society</copyright>
        <version>1.0</version>
        <parameters type="json"><![CDATA[{"type": "group", "export_group": {"description": "Group to export.", "passthrough": false, "list": ["Meta", "Result", "Time series"], "value": [0], "label": "Export group", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "tb": {"description": "", "passthrough": false, "list": ["Resampled system/Resampled raster/"], "value": [0], "label": "Time basis raster", "editor": {"filter": true, "type": "listview"}, "value_names": ["Resampled system/Resampled raster/"], "type": "list", "order": 1}, "tb_col_name": {"description": "What column name should the time basis have in the resulting table? Leave blank to use the raster's name.", "value": "", "label": "Time basis column name", "editor": null, "type": "string", "order": 2}}]]></parameters>
        <ports>
          <input key="port1" requiresdata="False" scheme="hdf5" type="adaf" uuid="{5ff0a8b3-0e81-4eb3-b184-be1bed5e5fa6}">
            <label>ADAF</label>
            <description>ADAF</description>
          </input>
          <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{029a65b6-d513-459b-afe6-116545d0987e}">
            <label>Table</label>
            <description>Table</description>
          </output>
        </ports>
      </node>
      <node height="50.0" id="org.sysess.sympathy.data.table.hjointable" uuid="{11d300a8-51ec-4dc5-8971-3ab4161e3931}" width="50.0" x="2775.0" y="1950.0">
        <label>HJoin Table</label>
        <description>Horizontal join of two Tables</description>
        <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
        <copyright>(C) 2013 System Engineering Software Society</copyright>
        <version>1.0</version>
        <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
        <ports>
          <input key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{e642265e-1140-48db-96c7-06d5176deb6d}">
            <label>Table1</label>
            <description>Table1</description>
          </input>
          <input key="port2" requiresdata="False" scheme="hdf5" type="table" uuid="{79643148-f997-46ab-95d1-05a0ae42339b}">
            <label>Table2</label>
            <description>Table2</description>
          </input>
          <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{1b24d57a-8426-4d0b-9c57-760153820b6e}">
            <label>TableOutput</label>
            <description>TableOutput</description>
          </output>
        </ports>
      </node>
      <node height="50.0" id="org.sysess.sympathy.data.table.matchtwotables" uuid="{61141847-373c-4349-a9ad-99bfc2157ebf}" width="50.0" x="2650.0" y="1875.0">
        <label>Match Table lengths</label>
        <description>Match the column lengths of two Tables.</description>
        <author>Greger Cronquist &lt;greger.cronquist@sysess.org</author>
        <copyright>(c) 2013 System Engineering Software Society</copyright>
        <version>1.0</version>
        <parameters type="json"><![CDATA[{"type": "group", "fill": {"description": "", "passthrough": false, "list": ["Last value", "0.0 or empty string", "np.NaN or empty string"], "value": [0], "label": "Extend values", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}}]]></parameters>
        <ports>
          <input key="guide" requiresdata="False" scheme="hdf5" type="table" uuid="{2de736e8-33f2-425a-83aa-3bad143ec068}">
            <label>Guide</label>
            <description>Guide</description>
          </input>
          <input key="input" requiresdata="False" scheme="hdf5" type="table" uuid="{4fbcd4f2-483e-4603-99ae-cd474973c779}">
            <label>Input</label>
            <description>Input</description>
          </input>
          <output key="output" requiresdata="False" scheme="hdf5" type="table" uuid="{8c2ee6af-e5b9-4f95-ad96-1442c9199721}">
            <label>Output</label>
            <description>Output</description>
          </output>
        </ports>
      </node>
      <node height="50.0" id="org.sysess.sympathy.data.table.hjointable" uuid="{95d61baa-8dd9-45e1-975c-9db72a4aa8ca}" width="50.0" x="2525.0" y="1850.0">
        <label>HJoin Table</label>
        <description>Horizontal join of two Tables</description>
        <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
        <copyright>(C) 2013 System Engineering Software Society</copyright>
        <version>1.0</version>
        <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
        <ports>
          <input key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{00e7d725-8c46-4c35-b3be-d66c4601b83d}">
            <label>Table1</label>
            <description>Table1</description>
          </input>
          <input key="port2" requiresdata="False" scheme="hdf5" type="table" uuid="{86e68ad9-2892-4282-b6de-56c194cff46c}">
            <label>Table2</label>
            <description>Table2</description>
          </input>
          <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{a958fbd7-b891-4ba5-bfbf-ae7235c331e6}">
            <label>TableOutput</label>
            <description>TableOutput</description>
          </output>
        </ports>
      </node>
      <node height="50.0" id="org.sysess.sympathy.data.table.hjointable" uuid="{9c874ef6-2347-4ba0-a6c8-b45cbbcfa8bd}" width="50.0" x="2400.0" y="1775.0">
        <label>HJoin Table</label>
        <description>Horizontal join of two Tables</description>
        <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
        <copyright>(C) 2013 System Engineering Software Society</copyright>
        <version>1.0</version>
        <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
        <ports>
          <input key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{603c44fc-d833-4f7c-9a6f-5096a19d46a8}">
            <label>Table1</label>
            <description>Table1</description>
          </input>
          <input key="port2" requiresdata="False" scheme="hdf5" type="table" uuid="{df810fe1-8cd1-4aad-acf9-9f8e5de9cd4c}">
            <label>Table2</label>
            <description>Table2</description>
          </input>
          <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{c76f5aae-655d-4e34-aff9-43f0ced33f02}">
            <label>TableOutput</label>
            <description>TableOutput</description>
          </output>
        </ports>
      </node>
      <node height="50.0" id="org.sysess.sympathy.data.table.selecttablecolumns" uuid="{bd6ef2fd-9fec-4bb0-8b05-76cd86faddc5}" width="50.0" x="2925.0" y="1950.0">
        <label>Select columns in Table</label>
        <description>Select columns in Table by using the configuration GUI.</description>
        <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
        <copyright>(c) 2013 System Engineering Software Society</copyright>
        <version>1.0</version>
        <parameters type="json"><![CDATA[{"complement": {"description": "When enabled, the selected columns will be removed. When disabled, the non-selected columns will be removed.", "value": true, "label": "Remove selected columns", "editor": null, "type": "boolean", "order": 0}, "type": "group", "columns": {"description": "Select the columns which will proceed.", "passthrough": false, "list": ["__ensure_single_row__"], "value": [0], "label": "Select columns", "editor": {"buttons": true, "filter": true, "selection": "multi", "invertbutton": true, "type": "listview"}, "value_names": ["__ensure_single_row__"], "type": "list", "order": 1}}]]></parameters>
        <ports>
          <input key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{61392ff7-1754-44c4-aa41-88b8a370a621}">
            <label>TableInput</label>
            <description>TableInput</description>
          </input>
          <output key="port2" requiresdata="False" scheme="hdf5" type="table" uuid="{0c8aff97-e67a-4279-8bda-47be5b09774f}">
            <label>Included</label>
            <description>Included</description>
          </output>
        </ports>
      </node>
      <node height="50.0" id="org.sysess.sympathy.data.table.updateadafwithtable" uuid="{f57bc20b-ea93-41d5-90a7-75ffd2b45d06}" width="50.0" x="3100.0" y="2000.0">
        <label>Update ADAF with Table</label>
        <description>Export content of Table to specified container in ADAF.</description>
        <author>Erik der Hagopian &lt;erik.hagopian@sysess.org&gt;</author>
        <copyright>(C) 2013 System Engineering Software Society</copyright>
        <version>1.0</version>
        <parameters type="json"><![CDATA[{"export_to_group": {"description": "Group to put table data.", "passthrough": false, "list": ["Meta", "Result", "Time series"], "value": [0], "label": "Export to group", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "type": "group", "tb": {"description": "", "passthrough": false, "list": ["DATASET_filter_filecount"], "value": [0], "label": "Time basis column", "editor": {"filter": true, "type": "listview"}, "value_names": ["DATASET_filter_filecount"], "type": "list", "order": 3}, "system": {"description": "", "value": "system_18669", "label": "Time series system name", "editor": null, "type": "string", "order": 1}, "raster": {"description": "", "value": "DATASET_filter_filecount", "label": "Time series raster name", "editor": null, "type": "string", "order": 2}}]]></parameters>
        <ports>
          <input key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{b792f5d9-e64b-4455-a371-d7c15f1a85ff}">
            <label>Table</label>
            <description>Table</description>
          </input>
          <input key="port2" requiresdata="False" scheme="hdf5" type="adaf" uuid="{50b79339-d0f2-4bfe-a70a-36dcf06561a0}">
            <label>ADAF</label>
            <description>ADAF</description>
          </input>
          <output key="port1" requiresdata="False" scheme="hdf5" type="adaf" uuid="{a0bc011a-4f3f-4b38-825e-3be8e1d94de0}">
            <label>ADAF</label>
            <description>ADAF</description>
          </output>
        </ports>
      </node>
      <connection uuid="{1a17aee5-e5e8-4d7e-ba61-520d65fa3bec}">
        <source node="{e0bf9a25-eb10-4ea8-8901-286a8689ced3}" port="{c211dbbd-d7ef-4e70-b5e6-2068820a3d43}"/>
        <destination node="{9c874ef6-2347-4ba0-a6c8-b45cbbcfa8bd}" port="{603c44fc-d833-4f7c-9a6f-5096a19d46a8}"/>
      </connection>
      <connection uuid="{2b9bddfa-8330-4de7-a4c2-ae8681bacf45}">
        <source node="{f57bc20b-ea93-41d5-90a7-75ffd2b45d06}" port="{a0bc011a-4f3f-4b38-825e-3be8e1d94de0}"/>
        <destination node="{e0bf9a25-eb10-4ea8-8901-286a8689ced3}" port="{e11fa9f6-f5e3-4175-821f-1364b5cea2ed}"/>
      </connection>
      <connection uuid="{3b6f1241-93ec-42ab-8772-c006a62198d3}">
        <source node="{bd6ef2fd-9fec-4bb0-8b05-76cd86faddc5}" port="{0c8aff97-e67a-4279-8bda-47be5b09774f}"/>
        <destination node="{f57bc20b-ea93-41d5-90a7-75ffd2b45d06}" port="{b792f5d9-e64b-4455-a371-d7c15f1a85ff}"/>
      </connection>
      <connection uuid="{480ab386-675f-48b2-a1b3-d4e418678d73}">
        <source node="{e0bf9a25-eb10-4ea8-8901-286a8689ced3}" port="{6d77f9ca-3297-4ee6-b0de-4ea457c43a1c}"/>
        <destination node="{95d61baa-8dd9-45e1-975c-9db72a4aa8ca}" port="{86e68ad9-2892-4282-b6de-56c194cff46c}"/>
      </connection>
      <connection uuid="{55a10166-4c8a-4276-8fca-8051152961cc}">
        <source node="{9c874ef6-2347-4ba0-a6c8-b45cbbcfa8bd}" port="{c76f5aae-655d-4e34-aff9-43f0ced33f02}"/>
        <destination node="{95d61baa-8dd9-45e1-975c-9db72a4aa8ca}" port="{00e7d725-8c46-4c35-b3be-d66c4601b83d}"/>
      </connection>
      <connection uuid="{6806889d-50f8-4b9a-af97-41ff7282a7e1}">
        <source node="{95d61baa-8dd9-45e1-975c-9db72a4aa8ca}" port="{a958fbd7-b891-4ba5-bfbf-ae7235c331e6}"/>
        <destination node="{61141847-373c-4349-a9ad-99bfc2157ebf}" port="{4fbcd4f2-483e-4603-99ae-cd474973c779}"/>
      </connection>
      <connection uuid="{7098613f-1a54-4be6-b70a-7a202c836b59}">
        <source node="{e0bf9a25-eb10-4ea8-8901-286a8689ced3}" port="{779b5670-4c52-49f1-941b-825d8e2e6396}"/>
        <destination node="{f57bc20b-ea93-41d5-90a7-75ffd2b45d06}" port="{50b79339-d0f2-4bfe-a70a-36dcf06561a0}"/>
      </connection>
      <connection uuid="{acf160f5-c943-40cf-a301-ed580912ae26}">
        <source node="{969313b1-22cb-49fc-9862-f2b778a0ffcc}" port="{6debbfb3-c890-4e3b-ba9a-674f923c35c6}"/>
        <destination node="{11d300a8-51ec-4dc5-8971-3ab4161e3931}" port="{e642265e-1140-48db-96c7-06d5176deb6d}"/>
      </connection>
      <connection uuid="{be30b7ac-52d0-4fb3-8a9f-8dcb4b512b7d}">
        <source node="{11d300a8-51ec-4dc5-8971-3ab4161e3931}" port="{1b24d57a-8426-4d0b-9c57-760153820b6e}"/>
        <destination node="{bd6ef2fd-9fec-4bb0-8b05-76cd86faddc5}" port="{61392ff7-1754-44c4-aa41-88b8a370a621}"/>
      </connection>
      <connection uuid="{d0e1532d-d0ea-4018-a1a5-eac9052e4465}">
        <source node="{070d2cb5-1461-4506-be6d-f263af8e3d9a}" port="{029a65b6-d513-459b-afe6-116545d0987e}"/>
        <destination node="{969313b1-22cb-49fc-9862-f2b778a0ffcc}" port="{17410a91-e296-42d1-bad2-30c2deb343b3}"/>
      </connection>
      <connection uuid="{d4802131-af71-46c6-8a1d-e4833d813577}">
        <source node="{e0bf9a25-eb10-4ea8-8901-286a8689ced3}" port="{779b5670-4c52-49f1-941b-825d8e2e6396}"/>
        <destination node="{070d2cb5-1461-4506-be6d-f263af8e3d9a}" port="{5ff0a8b3-0e81-4eb3-b184-be1bed5e5fa6}"/>
      </connection>
      <connection uuid="{dd0480e1-6646-40c1-8dae-bb60d8eed567}">
        <source node="{969313b1-22cb-49fc-9862-f2b778a0ffcc}" port="{6debbfb3-c890-4e3b-ba9a-674f923c35c6}"/>
        <destination node="{61141847-373c-4349-a9ad-99bfc2157ebf}" port="{2de736e8-33f2-425a-83aa-3bad143ec068}"/>
      </connection>
      <connection uuid="{e272bb15-400b-4444-ade1-ae6096c58565}">
        <source node="{61141847-373c-4349-a9ad-99bfc2157ebf}" port="{8c2ee6af-e5b9-4f95-ad96-1442c9199721}"/>
        <destination node="{11d300a8-51ec-4dc5-8971-3ab4161e3931}" port="{79643148-f997-46ab-95d1-05a0ae42339b}"/>
      </connection>
      <connection uuid="{f58f14f3-46ec-47c5-b643-cfcae3a002a5}">
        <source node="{e0bf9a25-eb10-4ea8-8901-286a8689ced3}" port="{7ec419a2-65a8-446e-b57d-1dca26625cb0}"/>
        <destination node="{9c874ef6-2347-4ba0-a6c8-b45cbbcfa8bd}" port="{df810fe1-8cd1-4aad-acf9-9f8e5de9cd4c}"/>
      </connection>
    </flow>
    <node height="50.0" id="org.sysess.sympathy.data.adaf.adafs2tables" uuid="{1f805ae6-f7d4-46d0-9e3e-48fff96de399}" width="50.0" x="1875.0" y="1925.0">
      <label>ADAFs to Tables</label>
      <description>Elementwise export of data from list of ADAFs to a list of Tables.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"type": "group", "export_group": {"description": "Group to export.", "passthrough": false, "list": ["Meta", "Result", "Time series"], "value": [2], "label": "Export group", "editor": {"type": "combobox"}, "value_names": ["Time series"], "type": "list", "order": 0}, "tb": {"description": "", "passthrough": false, "list": ["Resampled system/Resampled raster/"], "value": [0], "label": "Time basis raster", "editor": {"filter": true, "type": "listview"}, "value_names": ["Resampled system/Resampled raster/"], "type": "list", "order": 1}, "tb_col_name": {"description": "", "value": "Resampled raster", "label": "Time basis column name", "editor": null, "type": "string", "order": 2}}]]></parameters>
      <ports>
        <input key="port1" requiresdata="False" scheme="hdf5" type="[adaf]" uuid="{b466f7f8-4a71-46a4-b442-97d01f65aee0}">
          <label>ADAF</label>
          <description>ADAF</description>
        </input>
        <output key="port1" requiresdata="False" scheme="hdf5" type="[table]" uuid="{264a91d8-a299-41bd-a9c7-f7e62e2adb85}">
          <label>Table</label>
          <description>Table</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.table.selecttablesrowsfromtable" uuid="{215de89d-ca93-4437-be48-302a17cb2bb6}" width="50.0" x="2100.0" y="1925.0">
      <label>Select rows in Tables with Table</label>
      <description>Select rows in Tables by using an additional selection Table with predefined comparison relations.</description>
      <author>Greger Cronquist &lt;greger.cronquist@sysess.org&gt;</author>
      <copyright>(c) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"column": {"description": "Select column in the selection Table that includes listed column names.", "passthrough": false, "list": ["colnames", "operators", "value"], "value": [0], "label": "Column with column names", "editor": {"type": "combobox"}, "value_names": ["colnames"], "type": "list", "order": 0}, "relation": {"description": "Select column in the selection Table that includes listed comparison operators.", "passthrough": false, "list": ["colnames", "operators", "value"], "value": [1], "label": "Column with comparison operators", "editor": {"type": "combobox"}, "value_names": ["operators"], "type": "list", "order": 1}, "reduction": {"description": "If there are multiple selection criteria, do ALL of them need to be fulfilled for a data row to be selected, or is it enough that ANY single criterion is fulfilled?", "passthrough": false, "list": ["all", "any"], "value": [0], "label": "Reduction:", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 3}, "type": "group", "constraint": {"description": "Select column in the selection Table that includes listed constraint values.", "passthrough": false, "list": ["colnames", "operators", "value"], "value": [2], "label": "Column with constraint values", "editor": {"type": "combobox"}, "value_names": ["value"], "type": "list", "order": 2}}]]></parameters>
      <ports>
        <input key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{3b646210-69ad-440c-b5a1-2f31793ae40f}">
          <label>Selection</label>
          <description>Selection</description>
        </input>
        <input key="port2" requiresdata="False" scheme="hdf5" type="[table]" uuid="{90ec9ff8-7920-4441-a16a-a4a8f9e9ff64}">
          <label>TableInput</label>
          <description>TableInput</description>
        </input>
        <output key="port1" requiresdata="False" scheme="hdf5" type="[table]" uuid="{9ad83f56-6440-490e-a81b-1e2082667739}">
          <label>TableOutput</label>
          <description>TableOutput</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.adaf.vjoinadafs" uuid="{7779fa0b-0d3d-4190-8366-7845c876c122}" width="50.0" x="2350.0" y="2025.0">
      <label>VJoin ADAFs</label>
      <description>VJoin multiple ADAF files.</description>
      <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
      <copyright>(C)2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"use_reference_time": {"description": "Use raster reference time.", "value": false, "label": "Use raster reference time", "editor": null, "type": "boolean", "order": 0}, "minimum_increment": {"description": "Increment used for tables with number of rows = 0", "value": 1, "label": "Increment used when number of rows = 0", "editor": null, "type": "integer", "order": 1}, "output_index": {"description": "Choose name for output index column. Can be left empty.", "value": "VJoin-index", "label": "Output Index", "editor": null, "type": "string", "order": 4}, "include_rasters": {"description": "Include rasters in the result.", "value": true, "label": "Include rasters in the result", "editor": null, "type": "boolean", "order": 2}, "type": "group", "fill": {"description": "Fill missing columns with Nan when joining.", "value": false, "label": "Fill missing with NaN", "editor": null, "type": "boolean", "order": 3}}]]></parameters>
      <ports>
        <input key="port0" requiresdata="False" scheme="hdf5" type="[adaf]" uuid="{b02bc7cc-13f0-475f-ab79-8950b9902e50}">
          <label>ADAFs</label>
          <description>ADAFs</description>
        </input>
        <output key="port0" requiresdata="False" scheme="hdf5" type="adaf" uuid="{018a5195-b353-4504-877b-343104a4a12c}">
          <label>ADAFOutput</label>
          <description>ADAFOutput</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.sympathy.data.table.updateadafswithtables" uuid="{eb508bac-5d3f-4154-879d-e9bc71ed029c}" width="50.0" x="2225.0" y="2025.0">
      <label>Update ADAFs with Tables</label>
      <description>Export content of Table to specified container in ADAF.</description>
      <author>Erik der Hagopian &lt;erik.hagopian@sysess.org&gt;</author>
      <copyright>(C) 2013 System Engineering Software Society</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"export_to_group": {"description": "Group to put table data.", "passthrough": false, "list": ["Meta", "Result", "Time series"], "value": [2], "label": "Export to group", "editor": {"type": "combobox"}, "value_names": ["Time series"], "type": "list", "order": 0}, "raster": {"description": "", "value": "Resampled raster", "label": "Time series raster name", "editor": null, "type": "string", "order": 2}, "tb": {"description": "", "passthrough": false, "list": ["Resampled raster"], "value": [0], "label": "Time basis column", "editor": {"filter": true, "type": "listview"}, "value_names": ["Resampled raster"], "type": "list", "order": 3}, "system": {"description": "", "value": "Resampled system", "label": "Time series system name", "editor": null, "type": "string", "order": 1}, "type": "group"}]]></parameters>
      <ports>
        <input key="port1" requiresdata="False" scheme="hdf5" type="[table]" uuid="{a7682e45-57d7-4db7-88d9-358f5a5b4e5f}">
          <label>Tables</label>
          <description>Tables</description>
        </input>
        <input key="port2" requiresdata="False" scheme="hdf5" type="[adaf]" uuid="{61cfabec-224b-4bc9-acfd-69846293466a}">
          <label>ADAFs</label>
          <description>ADAFs</description>
        </input>
        <output key="port1" requiresdata="False" scheme="hdf5" type="[adaf]" uuid="{43a79bca-3001-46c4-b07d-8088fc8cdeec}">
          <label>ADAFs</label>
          <description>ADAFs</description>
        </output>
      </ports>
    </node>
    <connection uuid="{00f37727-a391-417e-9b50-dc47926d33ce}">
      <source node="{82efa087-28e0-4db9-9b62-491f8fe84f57}" port="{67d5c9e6-9646-4d43-937e-4323324044d3}"/>
      <destination node="{e0bf9a25-eb10-4ea8-8901-286a8689ced3}" port="{7ec419a2-65a8-446e-b57d-1dca26625cb0}"/>
    </connection>
    <connection uuid="{06867199-a397-4254-ac10-502c7808e52b}">
      <source node="{4e54a35c-169d-405f-9649-ec881fcdc68b}" port="{3523d25e-0c28-4808-86e6-4956948e9b33}"/>
      <destination node="{82efa087-28e0-4db9-9b62-491f8fe84f57}" port="{03713e09-5996-4c12-ba3b-814b10e2845f}"/>
    </connection>
    <connection uuid="{2258f092-3dd0-4d38-b696-cd8b24456fbd}">
      <source node="{ba46da78-1dac-43f3-879d-383dab242170}" port="{e8548c42-7ef0-40d2-8c74-ed14f5d52a9e}"/>
      <destination node="{e0bf9a25-eb10-4ea8-8901-286a8689ced3}" port="{c211dbbd-d7ef-4e70-b5e6-2068820a3d43}"/>
    </connection>
    <connection uuid="{281a47e4-a0e8-43f6-8720-0090ad3acaff}">
      <source node="{4b5d59cc-e8dd-418a-a93b-70a337fc3046}" port="{e6706181-3c98-4e58-a516-0cf480c99e29}"/>
      <destination node="{e0bf9a25-eb10-4ea8-8901-286a8689ced3}" port="{6d77f9ca-3297-4ee6-b0de-4ea457c43a1c}"/>
    </connection>
    <connection uuid="{28e9d732-9b2c-4cc3-85ef-b7bb5c6abfc7}">
      <source node="{b7bc93cd-65db-4c11-b4b4-c430e531d32c}" port="{636a13d4-a6ff-43d6-bb30-ec4828519eb4}"/>
      <destination node="{eb508bac-5d3f-4154-879d-e9bc71ed029c}" port="{61cfabec-224b-4bc9-acfd-69846293466a}"/>
    </connection>
    <connection uuid="{3dd857e7-a987-4930-b5cd-46931415e725}">
      <source node="{eb508bac-5d3f-4154-879d-e9bc71ed029c}" port="{43a79bca-3001-46c4-b07d-8088fc8cdeec}"/>
      <destination node="{7779fa0b-0d3d-4190-8366-7845c876c122}" port="{b02bc7cc-13f0-475f-ab79-8950b9902e50}"/>
    </connection>
    <connection uuid="{7264438e-c591-4ec8-b927-6c89ef5e82f0}">
      <source node="{7779fa0b-0d3d-4190-8366-7845c876c122}" port="{018a5195-b353-4504-877b-343104a4a12c}"/>
      <destination node="{e0bf9a25-eb10-4ea8-8901-286a8689ced3}" port="{779b5670-4c52-49f1-941b-825d8e2e6396}"/>
    </connection>
    <connection uuid="{76583225-c84a-47f7-a7e5-87914d99a655}">
      <source node="{e0bf9a25-eb10-4ea8-8901-286a8689ced3}" port="{e11fa9f6-f5e3-4175-821f-1364b5cea2ed}"/>
      <destination node="{b7bc93cd-65db-4c11-b4b4-c430e531d32c}" port="{2a867fcc-e34b-426c-801c-b38dc6a01061}"/>
    </connection>
    <connection uuid="{8efb05ba-a59a-4387-8bf5-7231b9729a21}">
      <source node="{b7bc93cd-65db-4c11-b4b4-c430e531d32c}" port="{636a13d4-a6ff-43d6-bb30-ec4828519eb4}"/>
      <destination node="{ba46da78-1dac-43f3-879d-383dab242170}" port="{f0a4ba16-4856-45bf-9839-5c24e58b2ee8}"/>
    </connection>
    <connection uuid="{9920a173-3f51-4a8b-ba97-97764c6f637a}">
      <source node="{1f805ae6-f7d4-46d0-9e3e-48fff96de399}" port="{264a91d8-a299-41bd-a9c7-f7e62e2adb85}"/>
      <destination node="{215de89d-ca93-4437-be48-302a17cb2bb6}" port="{90ec9ff8-7920-4441-a16a-a4a8f9e9ff64}"/>
    </connection>
    <connection uuid="{9eda7f2d-5aef-43aa-93a7-919eb139b74d}">
      <source node="{b7bc93cd-65db-4c11-b4b4-c430e531d32c}" port="{636a13d4-a6ff-43d6-bb30-ec4828519eb4}"/>
      <destination node="{1f805ae6-f7d4-46d0-9e3e-48fff96de399}" port="{b466f7f8-4a71-46a4-b442-97d01f65aee0}"/>
    </connection>
    <connection uuid="{a2b21297-621b-465e-b661-8212926ec3fc}">
      <source node="{1f805ae6-f7d4-46d0-9e3e-48fff96de399}" port="{264a91d8-a299-41bd-a9c7-f7e62e2adb85}"/>
      <destination node="{4e54a35c-169d-405f-9649-ec881fcdc68b}" port="{6621508c-f463-451b-bf14-5e47d92f8def}"/>
    </connection>
    <connection uuid="{bc4bf099-ca55-4df9-81eb-d2429469b702}">
      <source node="{4e54a35c-169d-405f-9649-ec881fcdc68b}" port="{3523d25e-0c28-4808-86e6-4956948e9b33}"/>
      <destination node="{215de89d-ca93-4437-be48-302a17cb2bb6}" port="{3b646210-69ad-440c-b5a1-2f31793ae40f}"/>
    </connection>
    <connection uuid="{edb861db-78a5-4589-abbb-1111fdb605df}">
      <source node="{215de89d-ca93-4437-be48-302a17cb2bb6}" port="{9ad83f56-6440-490e-a81b-1e2082667739}"/>
      <destination node="{4b5d59cc-e8dd-418a-a93b-70a337fc3046}" port="{03e555f8-cf1c-4a56-9de8-b5fe78823a8f}"/>
    </connection>
    <connection uuid="{f709850e-dd1f-4a55-89c2-64e6665a3715}">
      <source node="{1f805ae6-f7d4-46d0-9e3e-48fff96de399}" port="{264a91d8-a299-41bd-a9c7-f7e62e2adb85}"/>
      <destination node="{82efa087-28e0-4db9-9b62-491f8fe84f57}" port="{199539e2-22b9-4d62-a4ef-d46b87e956ab}"/>
    </connection>
    <connection uuid="{f991ee20-dc37-4827-a568-5f98daf6564e}">
      <source node="{215de89d-ca93-4437-be48-302a17cb2bb6}" port="{9ad83f56-6440-490e-a81b-1e2082667739}"/>
      <destination node="{eb508bac-5d3f-4154-879d-e9bc71ed029c}" port="{a7682e45-57d7-4db7-88d9-358f5a5b4e5f}"/>
    </connection>
  </flow>
  <flow cls="Flow" height="50.0" id="" is_locked="False" source_uuid="{8b633557-1528-4558-af3c-ed67596d7810}" uuid="{cf0ec200-e53e-4ae0-9ebd-79593b27c031}" width="50.0" x="2300.0" y="1925.0" href="../../subflows/add_meta_data.syx">
    <label>Add meta data</label>
    <description></description>
    <author></author>
    <copyright></copyright>
    <version></version>
    <source>../../subflows/add_meta_data.syx</source>
    <ports>
      <input height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" source_uuid="{2d7cfac3-d459-4ff8-9cca-a33809002f41}" type="plot" uuid="{152f5312-5a5e-477a-a134-4dd256febfb0}" width="50.0" x="2125.0" y="1500.0">
        <label>Port</label>
        <description>Port</description>
      </input>
      <input height="50.0" index="1" key="Input" optional="False" requiresdata="False" scheme="hdf5" source_uuid="{f2ec5f1c-7694-424a-b21b-eb84821aa953}" type="adaf" uuid="{14ae2532-4d01-4e0d-aefd-05f0153554d3}" width="50.0" x="2125.0" y="1650.0">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="text" source_uuid="{3fe525ea-abf2-4daa-af6e-c7defcec8ed9}" type="report" uuid="{22111f9a-91b0-4b95-9c27-9869093d9310}" width="50.0" x="3000.0" y="1600.0">
        <label>Port</label>
        <description>Port</description>
      </output>
      <output height="50.0" index="1" key="Port" optional="False" requiresdata="False" scheme="hdf5" source_uuid="{70132e27-f378-4fd5-b36a-bc434a092657}" type="[adaf]" uuid="{342662be-161e-4d26-a2bd-935d4aa46195}" width="50.0" x="3000.0" y="1675.0">
        <label>Port</label>
        <description>Port</description>
      </output>
    </ports>
  </flow>
  <node height="50.0" id="com.vcc.cde.distributionfitting" uuid="{452502b7-1933-4b44-9536-fa454b14b99e}" width="50.0" x="2150.0" y="1925.0">
    <label>CDE distribution fit</label>
    <description>Distribution fitting plot.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2015 Volvo Cars Coorporation</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"signal": {"description": "Select a column in the input.", "passthrough": false, "list": ["KatDiag_Enable", "Exh_tSim1Fld_mp", "OxiCat_mHCMonPas_mp", "OxiCat_facHCCnvRat", "VJoin-index"], "value": [3], "label": "Signals:", "editor": {"type": "combobox"}, "value_names": ["OxiCat_facHCCnvRat"], "type": "list", "order": 0}, "fault_limits": {"description": "Separate fault limits with semi colon.", "value": "0.3", "label": "Fault limits:", "editor": null, "type": "string", "order": 1}, "percentiles": {"description": "Separate percentiles with semi colon.", "value": "1; 99", "label": "Percentiles:", "editor": null, "type": "string", "order": 2}, "x_max": {"description": "Upper bound for x axis.", "value": 3.0, "label": "X max:", "editor": null, "type": "float", "order": 4}, "x_min": {"description": "Lower bound for x axis.", "value": -1.0, "label": "X min:", "editor": null, "type": "float", "order": 3}, "type": "group", "bins": {"description": "Number of bins in the histogram.", "value": 120, "label": "Number of bins:", "editor": null, "type": "integer", "order": 5}}]]></parameters>
    <ports>
      <input key="data" requiresdata="False" scheme="hdf5" type="adaf" uuid="{88f18915-057d-4181-8145-3f1edcf7a62d}">
        <label>Data</label>
        <description>Data</description>
      </input>
      <output key="fig" requiresdata="False" scheme="text" type="plot" uuid="{0a098b92-fcaf-4697-987b-0b7ea470f9d0}">
        <label>Figure</label>
        <description>Figure</description>
      </output>
      <output key="data" requiresdata="False" scheme="hdf5" type="adaf" uuid="{9a36a2de-77bb-4bff-903d-1d98c50e7b8b}">
        <label>Data</label>
        <description>Data</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="com.vcc.CDE.addworkflowname" uuid="{73f19b93-02d7-42e8-a497-5bfe3118cdab}" width="50.0" x="1275.0" y="1925.0">
    <label>Add workflow name</label>
    <description></description>
    <author>Magnus Sand&#233;n</author>
    <copyright>(c) 2015 Volvo Cars Coorporation</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "name": {"description": "This name will show up in the plot metadata area.", "value": "$(SY_FLOW_FILEPATH)", "label": "Workflow name:", "editor": null, "type": "string", "order": 0}}]]></parameters>
    <ports>
      <input key="in" requiresdata="False" scheme="hdf5" type="[adaf]" uuid="{87586ef3-11e9-45d9-8436-03258191914b}">
        <label>None</label>
        <description>None</description>
      </input>
      <output key="out" requiresdata="False" scheme="hdf5" type="[adaf]" uuid="{773e70eb-c4f5-4490-85f6-3885c0e30292}">
        <label>None</label>
        <description>None</description>
      </output>
    </ports>
  </node>
  <connection uuid="{334d467f-5134-4284-b42d-eda7c2df48d2}">
    <source node="{452502b7-1933-4b44-9536-fa454b14b99e}" port="{9a36a2de-77bb-4bff-903d-1d98c50e7b8b}"/>
    <destination node="{cf0ec200-e53e-4ae0-9ebd-79593b27c031}" port="{14ae2532-4d01-4e0d-aefd-05f0153554d3}"/>
  </connection>
  <connection uuid="{593a2009-bd4f-4b12-95db-0f57551b77e2}">
    <source node="{468cdf9e-b3ed-42d9-a5e3-af2ec2d1fb01}" port="{c43d2009-7c02-4447-9704-406fbd11266a}"/>
    <destination node="{a84d7aeb-1428-4f62-926d-e5a3b70c1799}" port="{ddf5b41a-63e4-4809-b313-e612cdbddbfa}"/>
  </connection>
  <connection uuid="{616fd01b-57fd-4337-98e0-e735cca00ce4}">
    <source node="{f699185e-9f72-4c4b-9f61-e5f09fec2e2b}" port="{e1f67174-268d-4ecd-a699-551675938556}"/>
    <destination node="{73f19b93-02d7-42e8-a497-5bfe3118cdab}" port="{87586ef3-11e9-45d9-8436-03258191914b}"/>
  </connection>
  <connection uuid="{6bc6a5bb-b4a0-4d5a-a969-8537cc0c7a8a}">
    <source node="{a84d7aeb-1428-4f62-926d-e5a3b70c1799}" port="{c8c5279c-cbe8-4fe3-ba3d-b03cc7d2390f}"/>
    <destination node="{b7bc93cd-65db-4c11-b4b4-c430e531d32c}" port="{636a13d4-a6ff-43d6-bb30-ec4828519eb4}"/>
  </connection>
  <connection uuid="{77d4c27f-3346-443b-a641-7fcd106918fa}">
    <source node="{01aea40e-3f31-45bf-8045-00c4b3580dcf}" port="{6be43155-f8f8-42d7-ba54-ed1a06c8e238}"/>
    <destination node="{468cdf9e-b3ed-42d9-a5e3-af2ec2d1fb01}" port="{f224aec8-85b1-42d8-ad94-b5a4f47a4aed}"/>
  </connection>
  <connection uuid="{7902f5f9-8e24-4e56-96d5-1da4cffca7fb}">
    <source node="{58919083-db7c-4367-bb78-c92bc1214a16}" port="{a0c6f4f1-f5d0-4108-94af-2e6890107200}"/>
    <destination node="{f699185e-9f72-4c4b-9f61-e5f09fec2e2b}" port="{03489665-1c6b-4cb9-b956-406cd331c90b}"/>
  </connection>
  <connection uuid="{96a1b60a-edf4-4be7-8c45-cca5af70ad39}">
    <source node="{452502b7-1933-4b44-9536-fa454b14b99e}" port="{0a098b92-fcaf-4697-987b-0b7ea470f9d0}"/>
    <destination node="{cf0ec200-e53e-4ae0-9ebd-79593b27c031}" port="{152f5312-5a5e-477a-a134-4dd256febfb0}"/>
  </connection>
  <connection uuid="{9838545b-04a9-40fb-84e8-5d6f0f7afd3a}">
    <source node="{2aa3365f-80d5-4d40-9c96-a492cba0927a}" port="{5d838de1-44d7-494b-b9e0-299898cc00d4}"/>
    <destination node="{452502b7-1933-4b44-9536-fa454b14b99e}" port="{88f18915-057d-4181-8145-3f1edcf7a62d}"/>
  </connection>
  <connection uuid="{a83f5198-e22a-4a84-9854-95b39a3e90d3}">
    <source node="{73f19b93-02d7-42e8-a497-5bfe3118cdab}" port="{773e70eb-c4f5-4490-85f6-3885c0e30292}"/>
    <destination node="{ae6183d3-b30c-426c-aef5-3c6e88f15fba}" port="{f21502ea-f63f-41a1-b80c-92afe1d18c94}"/>
  </connection>
  <connection uuid="{ac9e8d61-9a5b-4f69-83af-ff88f9bbbb8c}">
    <source node="{b7bc93cd-65db-4c11-b4b4-c430e531d32c}" port="{2a867fcc-e34b-426c-801c-b38dc6a01061}"/>
    <destination node="{2aa3365f-80d5-4d40-9c96-a492cba0927a}" port="{6017808b-74a7-4ff9-ae4b-b5962b971f5f}"/>
  </connection>
  <connection uuid="{c65299ac-07ed-40b0-9152-8f21724b5b17}">
    <source node="{cf0ec200-e53e-4ae0-9ebd-79593b27c031}" port="{22111f9a-91b0-4b95-9c27-9869093d9310}"/>
    <destination node="{58919083-db7c-4367-bb78-c92bc1214a16}" port="{1353b441-778a-4db7-8226-5371cf106bfc}"/>
  </connection>
  <connection uuid="{ccb053ea-ee73-4408-8e11-205603ff74a5}">
    <source node="{ae6183d3-b30c-426c-aef5-3c6e88f15fba}" port="{a1cd11d8-10ac-4323-a55c-fe869c1b99c3}"/>
    <destination node="{468cdf9e-b3ed-42d9-a5e3-af2ec2d1fb01}" port="{d2fee64e-f86c-473d-b1cb-e5fda0dfb6b8}"/>
  </connection>
  <connection uuid="{fb253b04-23a2-4ca3-9b39-25adfc419698}">
    <source node="{cf0ec200-e53e-4ae0-9ebd-79593b27c031}" port="{342662be-161e-4d26-a2bd-935d4aa46195}"/>
    <destination node="{58919083-db7c-4367-bb78-c92bc1214a16}" port="{ebb4b452-0c9c-4b59-ade9-fb11f05c1a49}"/>
  </connection>
</flow>
