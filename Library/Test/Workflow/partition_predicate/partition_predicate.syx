<?xml version="1.0" ?><flow height="50.0" id="" is_locked="False" uuid="{66142cb2-b9b2-4d2c-ae52-b4c53f8182d8}" width="50.0" x="0.0" xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" y="0.0"><label>partition_predicate.syx</label><description></description><author>Unknown</author><copyright></copyright><version>1.0</version><source></source><ports/><aggregation type="json"><![CDATA[null]]></aggregation><parameters type="json"><![CDATA[{"environment": {}}]]></parameters><node height="50.0" id="org.sysess.sympathy.list.partitionadafspredicate" uuid="{53844f01-8cc7-4b9a-a139-8068e2a4f727}" width="50.0" x="1775.0" y="2050.0"><label>Partition ADAFs Predicate</label><description>Partition a list using configured item based predicate.</description><author>Erik der Hagopian &lt;erik.hagopian@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"predicate": {"description": "Partition function", "value": "lambda x: x.meta['meta_col0'].value()[0] > 0.5 # Identity partition", "label": "Predicate partition function", "editor": null, "type": "string", "order": 0}, "type": "group"}]]></parameters><ports><input key="in" requiresdata="False" scheme="hdf5" type="adafs" uuid="{4eb5c5db-5bfe-4bba-8d02-940ee54f49bf}"><label>Input data ADAFs</label><description>Input data ADAFs</description></input><output key="true" requiresdata="False" scheme="hdf5" type="adafs" uuid="{40ae8157-60c3-4bca-ba65-3903f262af84}"><label>Output data ADAFs where predicate returns True</label><description>Output data ADAFs where predicate returns True</description></output><output key="false" requiresdata="False" scheme="hdf5" type="adafs" uuid="{672d2f11-8a09-473e-99e4-5a4598344de6}"><label>Output data ADAFs where predicate returns True</label><description>Output data ADAFs where predicate returns True</description></output></ports></node><node height="50.0" id="org.sysess.sympathy.random.randomadafs" uuid="{6ea72a13-315c-43c6-b03c-ef4c27228862}" width="50.0" x="1600.0" y="2050.0"><label>Random ADAFs</label><description>Random ADAFs generator.</description><author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author><copyright>(c) 2013 Combine AB</copyright><version>0.1</version><parameters type="json"><![CDATA[{"length": {"description": "The length of adaf list to be generated.", "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}, "label": "ADAF list length", "order": 0, "type": "integer", "value": 5}, "meta_attributes": {"description": "The number of meta attributes to be generated.", "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}, "label": "Meta attributes", "order": 2, "type": "integer", "value": 5}, "meta_entries": {"description": "The number of meta entries to be generated.", "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}, "label": "Meta entries", "order": 1, "type": "integer", "value": 100}, "rasters": {"description": "The number of rasters to be generated.", "editor": {"max": 100, "min": 0, "step": 1, "type": "spinbox"}, "label": "Rasters per system", "order": 6, "type": "integer", "value": 2}, "res_attributes": {"description": "The number of res attributes to be generated.", "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}, "label": "Res attributes", "order": 4, "type": "integer", "value": 5}, "res_entries": {"description": "The number of res entries to be generated.", "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}, "label": "Res entries", "order": 3, "type": "integer", "value": 100}, "signal_attributes": {"description": "The number of signal attributes to be generated.", "editor": {"max": 100, "min": 0, "step": 1, "type": "spinbox"}, "label": "Signal attributes", "order": 8, "type": "integer", "value": 5}, "signal_entries": {"description": "The number of signal entries to be generated.", "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}, "label": "Signals entries per raster", "order": 7, "type": "integer", "value": 100}, "signal_length": {"description": "The length of signals to be generated.", "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}, "label": "Signal length", "order": 9, "type": "integer", "value": 1000}, "systems": {"description": "The number of systems to be generated.", "editor": {"max": 100, "min": 0, "step": 1, "type": "spinbox"}, "label": "Systems", "order": 5, "type": "integer", "value": 2}, "type": "group"}]]></parameters><ports><output key="port0" requiresdata="False" scheme="hdf5" type="adafs" uuid="{297ed248-bb1a-4cab-bee1-45918501c5e6}"><label>File</label><description>File</description></output></ports></node><node height="50.0" id="org.sysess.sympathy.list.partitiontablespredicate" uuid="{8f065e26-c321-4629-959d-3177dd0fbca0}" width="50.0" x="1775.0" y="1900.0"><label>Partition Tables Predicate</label><description>Partition a list using configured item based predicate.</description><author>Erik der Hagopian &lt;erik.hagopian@sysess.org&gt;</author><copyright>(C) 2013 System Engineering Software Society</copyright><version>1.0</version><parameters type="json"><![CDATA[{"predicate": {"description": "Partition function", "value": "lambda x: x.get_column_to_array('0')[0] > 0.5 # Identity partition", "label": "Predicate partition function", "editor": null, "type": "string", "order": 0}, "type": "group"}]]></parameters><ports><input key="in" requiresdata="False" scheme="hdf5" type="tables" uuid="{b13ef5da-1b76-4bfd-a28e-3211753d1422}"><label>Input data Tables</label><description>Input data Tables</description></input><output key="true" requiresdata="False" scheme="hdf5" type="tables" uuid="{116e2e5c-7515-4f52-b008-5939b2d844de}"><label>Output data Tables where predicate returns True</label><description>Output data Tables where predicate returns True</description></output><output key="false" requiresdata="False" scheme="hdf5" type="tables" uuid="{376a4cfc-0b9f-4741-84cb-1a0d9ce546b8}"><label>Output data Tables where predicate returns False</label><description>Output data Tables where predicate returns False</description></output></ports></node><node height="50.0" id="org.sysess.sympathy.random.randomtables" uuid="{9841e3be-9b4e-4426-8735-574909874fe4}" width="50.0" x="1600.0" y="1900.0"><label>Random Tables</label><description>Random Tables generator.</description><author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author><copyright>(c) 2013 Combine AB</copyright><version>0.1</version><parameters type="json"><![CDATA[{"column_entries": {"description": "The number of column entries to be generated.", "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}, "label": "Column entries", "order": 1, "type": "integer", "value": 100}, "column_length": {"description": "The length of columns to be generated.", "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}, "label": "Column length", "order": 2, "type": "integer", "value": 1000}, "length": {"description": "The length of table list to be generated.", "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}, "label": "Table list length", "order": 0, "type": "integer", "value": 5}, "type": "group"}]]></parameters><ports><output key="port0" requiresdata="False" scheme="hdf5" type="tables" uuid="{70fe3eef-2f88-48e6-bf6a-528ccf6ad71d}"><label>File</label><description>File</description></output></ports></node><connection uuid="{300e6c77-384c-4f96-9199-469fe36eccc8}"><source node="{6ea72a13-315c-43c6-b03c-ef4c27228862}" port="{297ed248-bb1a-4cab-bee1-45918501c5e6}"/><destination node="{53844f01-8cc7-4b9a-a139-8068e2a4f727}" port="{4eb5c5db-5bfe-4bba-8d02-940ee54f49bf}"/></connection><connection uuid="{47e05244-1011-4ad5-81fd-f8096d73346c}"><source node="{9841e3be-9b4e-4426-8735-574909874fe4}" port="{70fe3eef-2f88-48e6-bf6a-528ccf6ad71d}"/><destination node="{8f065e26-c321-4629-959d-3177dd0fbca0}" port="{b13ef5da-1b76-4bfd-a28e-3211753d1422}"/></connection></flow>