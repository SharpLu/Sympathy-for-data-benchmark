
# types_parser.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '1AC631CEB94B43497BACAEABEE4B9E82'
    
_lr_action_items = {'LBRACE':([5,7,17,18,24,35,38,45,],[18,18,18,18,18,18,18,18,]),'RPAREN':([6,8,9,10,11,12,13,15,16,17,19,20,25,26,27,28,31,32,33,36,37,39,40,42,43,44,46,47,],[-13,-19,-18,-15,-2,-3,-23,-20,-16,25,-14,-17,-11,33,-23,36,-4,-22,-8,-21,43,-5,-26,-6,-12,-9,-10,-7,]),'RBRACE':([6,8,9,10,11,12,13,15,16,19,20,25,29,31,32,33,36,39,40,43,],[-13,-19,-18,-15,-2,-3,-23,-20,-16,-14,-17,-11,39,-4,-22,-8,-21,-5,-26,-12,]),'RABRACKET':([30,],[40,]),'TEXT':([5,7,17,18,24,35,38,45,],[11,11,11,11,11,11,11,11,]),'ARROW':([6,8,9,10,11,12,13,14,15,16,19,20,22,25,27,28,29,31,32,33,36,39,40,42,43,44,47,],[-13,-19,-18,-15,-2,-3,-23,24,-20,-16,-14,-17,24,-11,-23,24,24,-4,24,-8,-21,-5,-26,24,-12,24,24,]),'EQUALS':([4,],[5,]),'EOL':([6,8,9,10,11,12,13,14,15,16,19,20,25,31,32,33,36,39,40,43,],[-13,-19,-18,-15,-2,-3,-23,23,-20,-16,-14,-17,-11,-4,-22,-8,-21,-5,-26,-12,]),'LBRACKET':([5,7,17,18,24,35,38,45,],[7,7,7,7,7,7,7,7,]),'ALIAS':([0,],[2,]),'LABRACKET':([5,7,17,18,24,35,38,45,],[21,21,21,21,21,21,21,21,]),'COLON':([27,41,],[35,45,]),'COMMA':([6,8,9,10,11,12,13,15,16,19,20,25,26,27,28,31,32,33,36,39,40,42,43,44,47,],[-13,-19,-18,-15,-2,-3,-23,-20,-16,-14,-17,-11,34,-23,38,-4,-22,-8,-21,-5,-26,-6,-12,38,-7,]),'LPAREN':([5,7,17,18,24,35,38,45,],[17,17,17,17,17,17,17,17,]),'TABLE':([5,7,17,18,24,35,38,45,],[12,12,12,12,12,12,12,12,]),'RBRACKET':([6,8,9,10,11,12,13,15,16,19,20,22,25,31,32,33,36,39,40,43,],[-13,-19,-18,-15,-2,-3,-23,-20,-16,-14,-17,31,-11,-4,-22,-8,-21,-5,-26,-12,]),'IDENTIFIER':([2,5,7,17,18,21,24,34,35,38,45,],[4,13,13,27,13,30,13,41,13,13,13,]),'$end':([1,3,6,8,9,10,11,12,13,14,15,16,19,20,23,25,31,32,33,36,39,40,43,],[-1,0,-13,-19,-18,-15,-2,-3,-23,-24,-20,-16,-14,-17,-25,-11,-4,-22,-8,-21,-5,-26,-12,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'function':([5,7,17,18,24,35,38,45,],[15,15,15,15,15,15,15,15,]),'definition':([0,],[1,]),'primitive':([5,7,17,18,24,35,38,45,],[6,6,6,6,6,6,6,6,]),'tuple':([5,7,17,18,24,35,38,45,],[16,16,16,16,16,16,16,16,]),'generic':([5,7,17,18,24,35,38,45,],[8,8,8,8,8,8,8,8,]),'tuplefield':([28,44,],[37,46,]),'list':([5,7,17,18,24,35,38,45,],[19,19,19,19,19,19,19,19,]),'typedefinition':([5,7,17,18,24,35,38,45,],[9,9,9,9,9,9,9,9,]),'start':([0,],[3,]),'dict':([5,7,17,18,24,35,38,45,],[10,10,10,10,10,10,10,10,]),'field':([17,],[26,]),'type':([5,7,17,18,24,35,38,45,],[14,22,28,29,32,42,44,47,]),'record':([5,7,17,18,24,35,38,45,],[20,20,20,20,20,20,20,20,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> definition','start',1,'p_start','types.py',807),
  ('primitive -> TEXT','primitive',1,'p_primitive','types.py',813),
  ('primitive -> TABLE','primitive',1,'p_primitive','types.py',814),
  ('list -> LBRACKET type RBRACKET','list',3,'p_list','types.py',823),
  ('dict -> LBRACE type RBRACE','dict',3,'p_dict','types.py',829),
  ('field -> IDENTIFIER COLON type','field',3,'p_field','types.py',835),
  ('field -> field COMMA IDENTIFIER COLON type','field',5,'p_field','types.py',836),
  ('record -> LPAREN field RPAREN','record',3,'p_record','types.py',848),
  ('tuplefield -> COMMA type','tuplefield',2,'p_tuplefield','types.py',854),
  ('tuplefield -> COMMA type tuplefield','tuplefield',3,'p_tuplefield','types.py',855),
  ('tuple -> LPAREN RPAREN','tuple',2,'p_tuple','types.py',866),
  ('tuple -> LPAREN type tuplefield RPAREN','tuple',4,'p_tuple','types.py',867),
  ('type -> primitive','type',1,'p_type','types.py',878),
  ('type -> list','type',1,'p_type','types.py',879),
  ('type -> dict','type',1,'p_type','types.py',880),
  ('type -> tuple','type',1,'p_type','types.py',881),
  ('type -> record','type',1,'p_type','types.py',882),
  ('type -> typedefinition','type',1,'p_type','types.py',883),
  ('type -> generic','type',1,'p_type','types.py',884),
  ('type -> function','type',1,'p_type','types.py',885),
  ('type -> LPAREN type RPAREN','type',3,'p_type','types.py',886),
  ('function -> type ARROW type','function',3,'p_function','types.py',895),
  ('typedefinition -> IDENTIFIER','typedefinition',1,'p_typedefinition','types.py',901),
  ('definition -> ALIAS IDENTIFIER EQUALS type','definition',4,'p_definition','types.py',914),
  ('definition -> ALIAS IDENTIFIER EQUALS type EOL','definition',5,'p_definition','types.py',915),
  ('generic -> LABRACKET IDENTIFIER RABRACKET','generic',3,'p_generic','types.py',931),
]
