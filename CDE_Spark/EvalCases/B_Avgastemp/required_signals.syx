<?xml version='1.0' encoding='ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" id="" is_locked="False" uuid="{4a60d051-4441-4a4e-b7ee-e545d2bab5ea}" width="50.0" x="1550.0" y="1800.0">
  <label>Required signals</label>
  <description></description>
  <author>Unknown</author>
  <copyright></copyright>
  <version>1.0</version>
  <source>required_signals.syx</source>
  <ports>
    <output height="50.0" index="0" key="Port" optional="False" requiresdata="False" scheme="hdf5" type="table" uuid="{c4a073ef-a0aa-45eb-9817-b09261d2a9b6}" width="50.0" x="1650.0" y="1775.0">
      <label>Port</label>
      <description>Port</description>
    </output>
  </ports>
  <aggregation type="json"><![CDATA[null]]></aggregation>
  <parameters type="json"><![CDATA[{"environment": {}}]]></parameters>
  <node height="50.0" id="org.sysess.sympathy.datasources.filedatasource" uuid="{37ace966-f304-4f2e-832e-9f7ef3504c80}" width="50.0" x="1400.0" y="1775.0">
    <label>Datasource</label>
    <description>Select a data source.</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(C) 2013 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"use_relative_path": {"description": "Use the relative path to the file.", "value": true, "label": "Use relative path", "editor": null, "type": "boolean", "order": 0}, "db_password": {"description": "A valid password for the selected user.", "value": "", "label": "Password", "editor": null, "type": "string", "order": 6}, "db_driver": {"description": "Database driver to use.", "passthrough": false, "list": ["SQL Server"], "value": [0], "label": "Database driver", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 2}, "db_connection_string": {"description": "A connection string that will override other settings.", "value": "", "label": "Connection string", "editor": null, "type": "string", "order": 7}, "db_user": {"description": "A valid database user.", "value": "", "label": "User", "editor": null, "type": "string", "order": 5}, "db_databasename": {"description": "The name of the database.", "value": "", "label": "Database name", "editor": null, "type": "string", "order": 4}, "db_servername": {"description": "A valid name to a database server.", "value": "", "label": "Server name", "editor": null, "type": "string", "order": 3}, "filename": {"description": "A filename including path if needed", "value": "$(SY_FLOW_DIR)/Avgastemp_Aliases.csv", "label": "Filename", "editor": {"filter": ["Any files (*)"], "type": "filename"}, "type": "string", "order": 1}, "type": "group", "datasource_type": {"description": "Type of datasource.", "passthrough": false, "list": ["File", "Database"], "value": [0], "label": "Datasource type", "editor": null, "value_names": [], "type": "list", "order": 8}}]]></parameters>
    <ports>
      <output key="port1" requiresdata="False" scheme="text" type="datasource" uuid="{a04e4187-af4d-4483-8ad7-7b33eeea02a8}">
        <label>DataSource</label>
        <description>DataSource</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.data.table.importtable" uuid="{78102576-768a-4237-906a-b4634a75c8e4}" width="50.0" x="1550.0" y="1775.0">
    <label>Table</label>
    <description>Data source as a table</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(C) 2013 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"custom_importer_data": {"XLS": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "transposed": {"description": "Transpose the data.", "value": false, "label": "Transpose input", "editor": null, "type": "boolean", "order": 0}, "data_start_row": {"description": "The first row where data is stored.", "value": 2, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": 0, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "worksheet_name": {"description": "The worksheet to import from.", "passthrough": false, "list": [], "value": [0], "label": "Select worksheet", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "headers": {"description": "File has headers.", "value": true, "label": "", "editor": null, "type": "boolean", "order": 0}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"description": "File has headers.", "value": false, "label": "", "editor": null, "type": "boolean", "order": 0}, "units": {"description": "File has headers.", "value": false, "label": "", "editor": null, "type": "boolean", "order": 0}, "end_of_file": {"description": "Select all rows to the end of the file.", "value": true, "label": "", "editor": null, "type": "boolean", "order": 0}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group"}, "HDF5": {"path_list": {"description": "The paths selected to import data from.", "passthrough": false, "list": [], "value": [], "label": "Selected paths", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "type": "group"}, "Auto": {"type": "group", "order": 0, "label": ""}, "label": "", "SQL": {"join_columns": {"description": "", "passthrough": false, "list": [], "value": [0], "label": "", "editor": null, "value_names": [], "type": "list", "order": 0}, "table_names": {"description": "", "passthrough": false, "list": [], "value": [0], "label": "", "editor": null, "value_names": [], "type": "list", "order": 0}, "custom_query": {"description": "", "value": false, "label": "", "editor": null, "type": "boolean", "order": 0}, "where_comparison_combo": {"description": "", "passthrough": false, "list": ["=", "<", ">", ">=", "<=", "!=", " LIKE ", " GLOB ", " BETWEEN "], "value": [0], "label": "", "editor": null, "value_names": [], "type": "list", "order": 0}, "where_condition": {"description": "", "value": "", "label": "", "editor": null, "type": "string", "order": 0}, "where_column_combo": {"description": "", "passthrough": false, "list": [], "value": [0], "label": "", "editor": null, "value_names": [], "type": "list", "order": 0}, "odbc": {"description": "ODBC method to use.", "passthrough": false, "list": ["default", "pyodbc", "ceODBC"], "value": [0], "label": "ODBC method", "editor": {"type": "combobox"}, "value_names": [], "type": "list", "order": 0}, "lineedit_query": {"description": "", "value": false, "label": "", "editor": null, "type": "boolean", "order": 0}, "join_tables": {"description": "", "passthrough": false, "list": [], "value": [0], "label": "", "editor": null, "value_names": [], "type": "list", "order": 0}, "preview_query": {"description": "", "value": "", "label": "", "editor": null, "type": "string", "order": 0}, "table_columns": {"description": "", "passthrough": false, "list": [], "value": [0], "label": "", "editor": null, "value_names": [], "type": "list", "order": 0}, "table_query": {"description": "", "value": true, "label": "", "editor": null, "type": "boolean", "order": 0}, "where_add_comparison": {"description": "", "value": "", "label": "", "editor": null, "type": "string", "order": 0}, "type": "group", "query_str": {"description": "", "value": "", "label": "", "editor": null, "type": "string", "order": 0}, "where_condition_list": {"description": "", "passthrough": false, "list": [], "value": [0], "label": "", "editor": null, "value_names": [], "type": "list", "order": 0}, "join_column_selection": {"description": "", "passthrough": false, "list": [], "value": [0], "label": "", "editor": null, "value_names": [], "type": "list", "order": 0}}, "Table": {"type": "group"}, "CSV": {"description_row": {"description": "The row where the descriptions are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "transposed": {"description": "Transpose the data.", "value": false, "label": "Transpose input data", "editor": null, "type": "boolean", "order": 0}, "data_start_row": {"description": "The first row where data is stored.", "value": 2, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "data_end_row": {"description": "The last data row.", "value": 0, "label": "", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 0}, "type": "integer", "order": 0}, "source_coding": {"description": "", "value": "utf_8", "label": "", "editor": null, "type": "string", "order": 0}, "other_delimiter": {"description": "Enter other delimiter than the standard ones.", "value": " ", "label": "", "editor": null, "type": "string", "order": 0}, "header_row": {"description": "The row where the headers are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "double_quotations": {"description": "Remove double quotations in importation.", "value": false, "label": "Remove double quotations", "editor": null, "type": "boolean", "order": 0}, "preview_start_row": {"description": "The first row where data will review from.", "value": 1, "label": "Preview start row", "editor": {"max": 500, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "delimiter": {"description": "", "value": ";", "label": "", "editor": null, "type": "string", "order": 0}, "no_preview_rows": {"description": "The number of preview rows to show.", "value": 20, "label": "Number of preview rows", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "descriptions": {"description": "File has headers.", "value": false, "label": "", "editor": null, "type": "boolean", "order": 0}, "units": {"description": "File has headers.", "value": false, "label": "", "editor": null, "type": "boolean", "order": 0}, "end_of_file": {"description": "Select all rows to the end of the file.", "value": true, "label": "", "editor": null, "type": "boolean", "order": 0}, "unit_row": {"description": "The row where the units are located.", "value": 1, "label": "", "editor": {"max": 200, "step": 1, "type": "spinbox", "min": 1}, "type": "integer", "order": 0}, "type": "group", "headers": {"description": "File has headers.", "value": true, "label": "", "editor": null, "type": "boolean", "order": 0}}, "type": "group", "order": 2}, "active_importer": {"description": "", "value": "CSV", "label": "", "editor": null, "type": "string", "order": 0}, "fail_strategy": {"description": "", "passthrough": false, "list": ["Exception", "Create Empty Entry"], "value": [1], "label": "Action on import failure", "editor": {"type": "combobox"}, "value_names": ["Create Empty Entry"], "type": "list", "order": 1}, "type": "group"}]]></parameters>
    <ports>
      <input key="port1" requiresdata="True" scheme="text" type="datasource" uuid="{2dea842a-1a61-4da9-9dfa-3a9b5956943c}">
        <label>DataSource</label>
        <description>DataSource</description>
      </input>
      <output key="port1" requiresdata="False" scheme="hdf5" type="table" uuid="{2d947b10-2e3a-4603-b1d4-850689adb0e1}">
        <label>TableOutput</label>
        <description>TableOutput</description>
      </output>
    </ports>
  </node>
  <connection uuid="{3cf985bd-d2ee-48bc-be3a-e6935af7e999}">
    <source node="{78102576-768a-4237-906a-b4634a75c8e4}" port="{2d947b10-2e3a-4603-b1d4-850689adb0e1}"/>
    <destination node="{4a60d051-4441-4a4e-b7ee-e545d2bab5ea}" port="{c4a073ef-a0aa-45eb-9817-b09261d2a9b6}"/>
  </connection>
  <connection uuid="{4751ac69-e82f-411a-96b4-ffa68b2d5014}">
    <source node="{37ace966-f304-4f2e-832e-9f7ef3504c80}" port="{a04e4187-af4d-4483-8ad7-7b33eeea02a8}"/>
    <destination node="{78102576-768a-4237-906a-b4634a75c8e4}" port="{2dea842a-1a61-4da9-9dfa-3a9b5956943c}"/>
  </connection>
</flow>
